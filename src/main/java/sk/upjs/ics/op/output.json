[{
"title": {"kind": "Deployment", "name": "argocd-applicationset-controller", "labels": [{"app.kubernetes.io/name": "argocd-applicationset-controller"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "applicationset-controller"}]}, 
"details":  {"metadata":{"generation":24,"uid":"eed85f0d-5303-44e1-bd34-a580f8dd66ca","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:type":{},".":{}},".":{},"k:{\"type\":\"Available\"}":{"f:type":{},".":{}}}}},"manager":"kube-controller-manager","time":"2022-07-19T20:10:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:nodeSelector":{}}}}},"manager":"Mozilla","time":"2023-06-26T10:33:31Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-applicationset-controller\"}":{"f:env":{"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"NAMESPACE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:fieldRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/keys\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/source\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:args":{},"f:name":{},"f:ports":{"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":7000,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:resources":{}}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"gpg-keyring\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"gpg-keys\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T21:36:42Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950230926","creationTimestamp":"2022-07-12T08:35:13Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"24","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-applicationset-controller\"],\"env\":[{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.annotations\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.labels\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.leader.election\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.policy.override\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.debug\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.dryrun\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.progressive.syncs\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.new.git.file.globbing\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.concurrent.reconciliations.max\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.scm.root.ca.path\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.allowed.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"name\":\"argocd-applicationset-controller\",\"ports\":[{\"containerPort\":7000,\"name\":\"webhook\"},{\"containerPort\":8080,\"name\":\"metrics\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}]}],\"serviceAccountName\":\"argocd-applicationset-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-applicationset-controller","volumes":[{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"defaultMode":420,"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}}],"containers":[{"args":["/usr/local/bin/argocd-applicationset-controller"],"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"argocd-applicationset-controller","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.global.preserved.annotations"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.global.preserved.labels"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.leader.election"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.policy"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.policy.override"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.debug"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.log.format"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.log.level"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.dryrun"}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.git.submodule"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.progressive.syncs"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.new.git.file.globbing"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.plaintext"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.strict.tls"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.timeout.seconds"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.concurrent.reconciliations.max"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.namespaces"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.scm.root.ca.path"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.allowed.scm.providers"}}}],"ports":[{"protocol":"TCP","name":"webhook","containerPort":7000},{"protocol":"TCP","name":"metrics","containerPort":8080}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"serviceAccount":"argocd-applicationset-controller","securityContext":{},"restartPolicy":"Always","schedulerName":"default-scheduler","nodeSelector":{"demo-purpose":"tools"}}},"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"replicas":1,"readyReplicas":1,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-01-05T11:21:20Z","message":"ReplicaSet \"argocd-applicationset-controller-b57cbdbd7\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-08T14:09:35Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T21:36:42Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T21:36:42Z","status":"True"}],"updatedReplicas":1,"availableReplicas":1,"observedGeneration":24}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-dex-server", "labels": [{"app.kubernetes.io/name": "argocd-dex-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "dex-server"}]}, 
"details":  {"metadata":{"generation":29,"uid":"8cdaa464-52a0-471b-9c97-1aab22089ee5","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"dex\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/shared\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:name":{},"f:ports":{"k:{\"containerPort\":5557,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":5558,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{},"k:{\"containerPort\":5556,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}}},".":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"copyutil\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/shared\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:name":{},".":{},"f:resources":{}},".":{}},"f:affinity":{"f:podAntiAffinity":{"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"static-files\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{}}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{}}},"manager":"oc","time":"2021-05-27T11:16:32Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"dex\"}":{"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:runAsNonRoot":{},".":{},"f:readOnlyRootFilesystem":{}}}},"f:initContainers":{"k:{\"name\":\"copyutil\"}":{"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}}}}},"f:volumes":{"k:{\"name\":\"dexconfig\"}":{"f:name":{},".":{},"f:emptyDir":{}}}}}}},"manager":"kubectl","time":"2022-02-08T07:39:53Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:type":{},".":{}},".":{},"k:{\"type\":\"Available\"}":{"f:type":{},".":{}}}}},"manager":"kube-controller-manager","time":"2022-07-19T20:10:46Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:nodeSelector":{}}}}},"manager":"Mozilla","time":"2023-01-05T13:31:11Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"dex\"}":{"f:env":{".":{},"k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:volumeMounts":{"k:{\"mountPath\":\"/tls\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}}},"f:image":{}}},"f:initContainers":{"k:{\"name\":\"copyutil\"}":{"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:command":{}}},"f:volumes":{"k:{\"name\":\"argocd-dex-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T21:37:27Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231928","creationTimestamp":"2021-05-27T11:16:32Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"29","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/shared/argocd-dex\",\"rundex\"],\"env\":[{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"dexserver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"ghcr.io/dexidp/dex:v2.37.0\",\"imagePullPolicy\":\"Always\",\"name\":\"dex\",\"ports\":[{\"containerPort\":5556},{\"containerPort\":5557},{\"containerPort\":5558}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"},{\"mountPath\":\"/tls\",\"name\":\"argocd-dex-server-tls\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/shared/argocd-dex\"],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"}]}],\"serviceAccountName\":\"argocd-dex-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"static-files\"},{\"emptyDir\":{},\"name\":\"dexconfig\"},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"},{"emptyDir":{},"name":"dexconfig"},{"name":"argocd-dex-server-tls","secret":{"secretName":"argocd-dex-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}}],"containers":[{"image":"ghcr.io/dexidp/dex:v2.37.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"dex","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_DEX_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"dexserver.disable.tls"}}}],"ports":[{"protocol":"TCP","containerPort":5556},{"protocol":"TCP","containerPort":5557},{"protocol":"TCP","containerPort":5558}],"command":["/shared/argocd-dex","rundex"],"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"},{"mountPath":"/tls","name":"argocd-dex-server-tls"}]}],"serviceAccount":"argocd-dex-server","securityContext":{},"restartPolicy":"Always","schedulerName":"default-scheduler","initContainers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"copyutil","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["/bin/cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"}]}],"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"nodeSelector":{"demo-purpose":"tools"}}},"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"replicas":1,"readyReplicas":1,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-01-05T11:22:02Z","message":"ReplicaSet \"argocd-dex-server-5c9848874c\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-08T14:09:39Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T21:37:27Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T21:37:27Z","status":"True"}],"updatedReplicas":1,"availableReplicas":1,"observedGeneration":29}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-notifications-controller", "labels": [{"app.kubernetes.io/name": "argocd-notifications-controller"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "notifications-controller"}]}, 
"details":  {"metadata":{"generation":35,"uid":"7e0c8e08-3564-489c-95e7-5388639f10e9","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-notifications-controller\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:workingDir":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:name":{},".":{},"f:resources":{}}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{}}}},"f:strategy":{"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{}}},"manager":"kubectl","time":"2021-05-27T11:18:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:nodeSelector":{}}}}},"manager":"Mozilla","time":"2021-05-27T12:17:28Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:type":{},".":{}},".":{},"k:{\"type\":\"Available\"}":{"f:type":{},".":{}}}}},"manager":"kube-controller-manager","time":"2022-07-19T20:10:37Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:spec":{"f:securityContext":{"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}}},"f:containers":{"k:{\"name\":\"argocd-notifications-controller\"}":{"f:env":{"k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{}},"f:livenessProbe":{"f:tcpSocket":{"f:port":{},".":{}},"f:successThreshold":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:args":{}}},"f:volumes":{"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T21:36:45Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231021","creationTimestamp":"2021-05-27T11:18:30Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"27","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-notifications\"],\"env\":[{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"tcpSocket\":{\"port\":9001}},\"name\":\"argocd-notifications-controller\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}],\"workingDir\":\"/app\"}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-notifications-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-notifications-controller","volumes":[{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}}],"containers":[{"args":["/usr/local/bin/argocd-notifications"],"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":10,"tcpSocket":{"port":9001},"timeoutSeconds":1,"successThreshold":1},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","workingDir":"/app","name":"argocd-notifications-controller","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"notificationscontroller.log.format"}}},{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"notificationscontroller.log.level"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}}],"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"serviceAccount":"argocd-notifications-controller","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"runAsNonRoot":true},"restartPolicy":"Always","schedulerName":"default-scheduler","nodeSelector":{"demo-purpose":"tools"}}},"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"strategy":{"type":"Recreate"},"progressDeadlineSeconds":600},"status":{"replicas":1,"readyReplicas":1,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-01-05T10:37:21Z","message":"ReplicaSet \"argocd-notifications-controller-77657944f8\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-08T14:09:35Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T21:36:45Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T21:36:45Z","status":"True"}],"updatedReplicas":1,"availableReplicas":1,"observedGeneration":35}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-redis", "labels": [{"app.kubernetes.io/name": "argocd-redis"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"generation":6,"uid":"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:runAsUser":{}},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"redis\"}":{"f:imagePullPolicy":{},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},".":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:args":{},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{}}},"manager":"kubectl-client-side-apply","time":"2023-02-06T17:18:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:replicas":{}}},"manager":"Mozilla","time":"2023-07-07T14:54:22Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}},".":{},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}}},"f:observedGeneration":{},"f:collisionCount":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-07-07T14:54:22Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"770364801","creationTimestamp":"2023-01-05T12:44:59Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"6","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"--save\",\"\",\"--appendonly\",\"no\"],\"image\":\"redis:7.0.7-alpine\",\"imagePullPolicy\":\"Always\",\"name\":\"redis\",\"ports\":[{\"containerPort\":6379}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-redis\"}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-redis","containers":[{"args":["--save","","--appendonly","no"],"image":"redis:7.0.7-alpine","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"redis","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"allowPrivilegeEscalation":false},"ports":[{"protocol":"TCP","containerPort":6379}]}],"serviceAccount":"argocd-redis","securityContext":{"runAsUser":999,"seccompProfile":{"type":"RuntimeDefault"},"runAsNonRoot":true},"restartPolicy":"Always","schedulerName":"default-scheduler","affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}}}},"replicas":0,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"collisionCount":1,"conditions":[{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-07-07T14:54:22Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-07-07T14:54:22Z","status":"True"},{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-07-07T14:54:22Z","message":"ReplicaSet \"argocd-redis-7b489ccf65\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-07-07T14:54:22Z","status":"True"}],"observedGeneration":6}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-redis-ha-haproxy", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha-haproxy"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"generation":12,"uid":"74f19f2e-555c-4666-b4a6-1e48033e2622","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:nodeSelector":{}}}}},"manager":"Mozilla","time":"2023-06-26T10:32:24Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:annotations":{"f:checksum/config":{},"f:prometheus.io/path":{},".":{},"f:prometheus.io/scrape":{},"f:prometheus.io/port":{}},"f:labels":{"f:app.kubernetes.io/name":{},".":{}},"f:name":{}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"haproxy\"}":{"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/run/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{},"k:{\"mountPath\":\"/usr/local/etc/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":9101,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"config-volume\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"shared-socket\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{}}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}},".":{},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T21:48:28Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950243894","creationTimestamp":"2023-05-31T12:28:53Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"12","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-haproxy\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":3,\"revisionHistoryLimit\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}},\"strategy\":{\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae\",\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9101\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"},\"name\":\"argocd-redis-ha-haproxy\"},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"containers\":[{\"image\":\"haproxy:2.6.14-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{},\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8888},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"name\":\"haproxy\",\"ports\":[{\"containerPort\":6379,\"name\":\"redis\"},{\"containerPort\":9101,\"name\":\"metrics-port\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8888},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/usr/local/etc/haproxy\",\"name\":\"data\"},{\"mountPath\":\"/run/haproxy\",\"name\":\"shared-socket\"}]}],\"initContainers\":[{\"args\":[\"/readonly/haproxy_init.sh\"],\"command\":[\"sh\"],\"image\":\"haproxy:2.6.14-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"config-init\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/readonly\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/data\",\"name\":\"data\"}]}],\"securityContext\":{},\"serviceAccountName\":\"argocd-redis-ha-haproxy\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-redis-ha-configmap\"},\"name\":\"config-volume\"},{\"emptyDir\":{},\"name\":\"shared-socket\"},{\"emptyDir\":{},\"name\":\"data\"}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"name":"argocd-redis-ha-haproxy","annotations":{"prometheus.io/path":"/metrics","checksum/config":"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae","prometheus.io/port":"9101","prometheus.io/scrape":"true"},"labels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-redis-ha-haproxy","volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"}],"containers":[{"lifecycle":{},"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"haproxy","readinessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379},{"protocol":"TCP","name":"metrics-port","containerPort":9101}],"volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"}]}],"serviceAccount":"argocd-redis-ha-haproxy","securityContext":{},"restartPolicy":"Always","schedulerName":"default-scheduler","initContainers":[{"args":["/readonly/haproxy_init.sh"],"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"command":["sh"],"volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"topologyKey":"kubernetes.io/hostname"}]}},"nodeSelector":{"demo-purpose":"tools"}}},"replicas":3,"revisionHistoryLimit":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"replicas":3,"readyReplicas":3,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-05-31T15:07:34Z","message":"ReplicaSet \"argocd-redis-ha-haproxy-559d8d9d98\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-08T14:10:42Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T21:48:28Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T21:48:28Z","status":"True"}],"updatedReplicas":3,"availableReplicas":3,"observedGeneration":12}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-repo-server", "labels": [{"app.kubernetes.io/name": "argocd-repo-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "repo-server"}]}, 
"details":  {"metadata":{"generation":10,"uid":"257bb3e1-bb89-4602-9f5a-3cc28cf04342","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-repo-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_CONFIG_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"HELM_CACHE_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_DATA_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/helm-working-dir\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/keys\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/source\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8081,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8084,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"copyutil\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},".":{}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"plugins\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"var-files\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"helm-working-dir\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"gpg-keyring\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"gpg-keys\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"avp\"}":{"f:envFrom":{},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:runAsNonRoot":{},".":{},"f:runAsUser":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"download-tools\"}":{"f:env":{"k:{\"name\":\"AVP_VERSION\"}":{"f:name":{},"f:value":{},".":{}},".":{}},"f:imagePullPolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/custom-tools\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:automountServiceAccountToken":{},"f:volumes":{"k:{\"name\":\"cmp-plugin\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"custom-tools\"}":{"f:name":{},".":{},"f:emptyDir":{}}}}}}},"manager":"Mozilla","time":"2023-11-09T09:17:09Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}},".":{},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T20:51:10Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950181386","creationTimestamp":"2023-09-11T08:49:34Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"10","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"/usr/local/bin/argocd-repo-server\"],\"env\":[{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"timeout.reconciliation\",\"name\":\"argocd-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.repo.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.max.combined.directory.manifests.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.plugin.tar.exclusions\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.allow.oob.symlinks\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.tar.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"HELM_CACHE_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_CONFIG_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_DATA_HOME\",\"value\":\"/helm-working-dir\"}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-repo-server\",\"ports\":[{\"containerPort\":8081},{\"containerPort\":8084}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8084},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/helm-working-dir\",\"name\":\"helm-working-dir\"},{\"mountPath\":\"/home/argocd/cmp-server/plugins\",\"name\":\"plugins\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/var/run/argocd/argocd-cmp-server\"],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/var/run/argocd\",\"name\":\"var-files\"}]}],\"serviceAccountName\":\"argocd-repo-server\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"emptyDir\":{},\"name\":\"helm-working-dir\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"emptyDir\":{},\"name\":\"var-files\"},{\"emptyDir\":{},\"name\":\"plugins\"}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"automountServiceAccountToken":true,"serviceAccountName":"argocd-repo-server","volumes":[{"configMap":{"defaultMode":420,"name":"cmp-plugin"},"name":"cmp-plugin"},{"emptyDir":{},"name":"custom-tools"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"defaultMode":420,"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"emptyDir":{},"name":"helm-working-dir"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"emptyDir":{},"name":"var-files"},{"emptyDir":{},"name":"plugins"}],"containers":[{"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"avp","resources":{},"securityContext":{"runAsUser":999,"runAsNonRoot":true},"envFrom":[{"secretRef":{"name":"argocd-vault-plugin-credentials"}}],"command":["bash","-c","export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/home/argocd/cmp-server/config/plugin.yaml","name":"cmp-plugin","subPath":"avp.yaml"},{"mountPath":"/usr/local/bin/argocd-vault-plugin","name":"custom-tools","subPath":"argocd-vault-plugin"}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":30,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8084}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"name":"argocd-cm","optional":true,"key":"timeout.reconciliation"}}},{"name":"ARGOCD_REPO_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.format"}}},{"name":"ARGOCD_REPO_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.level"}}},{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.parallelism.limit"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.metrics.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.ciphers"}}},{"name":"ARGOCD_REPO_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.repo.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.default.cache.expiration"}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.max.combined.directory.manifests.size"}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.plugin.tar.exclusions"}}},{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.allow.oob.symlinks"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.tar.size"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.enable.git.submodule"}}},{"name":"HELM_CACHE_HOME","value":"/helm-working-dir"},{"name":"HELM_CONFIG_HOME","value":"/helm-working-dir"},{"name":"HELM_DATA_HOME","value":"/helm-working-dir"}],"ports":[{"protocol":"TCP","containerPort":8081},{"protocol":"TCP","containerPort":8084}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/helm-working-dir","name":"helm-working-dir"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"}],"args":["/usr/local/bin/argocd-repo-server"],"name":"argocd-repo-server","readinessProbe":{"failureThreshold":3,"periodSeconds":10,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8084}}}],"serviceAccount":"argocd-repo-server","securityContext":{},"restartPolicy":"Always","schedulerName":"default-scheduler","initContainers":[{"args":["curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"],"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"download-tools","resources":{},"env":[{"name":"AVP_VERSION","value":"1.16.1"}],"command":["sh","-c"],"volumeMounts":[{"mountPath":"/custom-tools","name":"custom-tools"}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"copyutil","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["/bin/cp","-n","/usr/local/bin/argocd","/var/run/argocd/argocd-cmp-server"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}}}},"replicas":2,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"replicas":2,"readyReplicas":2,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2023-09-11T08:49:34Z","message":"ReplicaSet \"argocd-repo-server-c8bfd55cc\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-09T09:18:30Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T20:51:10Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T20:51:10Z","status":"True"}],"updatedReplicas":2,"availableReplicas":2,"observedGeneration":10}} 
} 
, {
"title": {"kind": "Deployment", "name": "argocd-server", "labels": [{"app.kubernetes.io/name": "argocd-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "server"}]}, 
"details":  {"metadata":{"generation":30,"uid":"350bdb5e-d122-413f-b90b-669095235762","managedFields":[{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:template":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-server\"}":{"f:env":{},"f:imagePullPolicy":{},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/server/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{},".":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8083,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{},".":{}},"f:dnsPolicy":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"f:strategy":{"f:rollingUpdate":{"f:maxSurge":{},"f:maxUnavailable":{},".":{}},"f:type":{}},"f:selector":{},"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{}}},"manager":"oc","time":"2021-05-27T11:16:39Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:nodeSelector":{}}}}},"manager":"Mozilla","time":"2021-05-27T12:18:41Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"argocd-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:runAsNonRoot":{},"f:readOnlyRootFilesystem":{}}}},"f:volumes":{"k:{\"name\":\"plugins-home\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}}}}}}},"manager":"kubectl","time":"2022-02-08T07:39:54Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:lastTransitionTime":{},"f:type":{},"f:status":{},".":{}},".":{},"k:{\"type\":\"Available\"}":{"f:type":{},".":{}}}}},"manager":"kube-controller-manager","time":"2022-07-19T20:44:14Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"argocd-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/dex/tls\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:capabilities":{"f:drop":{}},"f:seccompProfile":{"f:type":{},".":{}}},"f:image":{},"f:args":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{}}},"f:volumes":{"k:{\"name\":\"argocd-dex-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"f:replicas":{}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"apps/v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"Progressing\"}":{"f:message":{},"f:lastUpdateTime":{},"f:reason":{}},"k:{\"type\":\"Available\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:reason":{}}},"f:observedGeneration":{},"f:updatedReplicas":{},"f:readyReplicas":{},"f:availableReplicas":{},"f:replicas":{}}},"manager":"kube-controller-manager","subresource":"status","time":"2023-11-15T21:47:58Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950243315","creationTimestamp":"2021-05-27T11:16:33Z","namespace":"argocd","annotations":{"deployment.kubernetes.io/revision":"30","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"containers\":[{\"args\":[\"/usr/local/bin/argocd-server\"],\"env\":[{\"name\":\"ARGOCD_API_SERVER_REPLICAS\",\"value\":\"2\"},{\"name\":\"ARGOCD_SERVER_INSECURE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.insecure\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_BASEHREF\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.basehref\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ROOTPATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.rootpath\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.disable.auth\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.gzip\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.x.frame.options\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.content.security.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.connection.status.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.oidc.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.login.attempts.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.staticassets\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.app.state.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.http.cookie.maxnumber\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.proxy.extension\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-server\",\"ports\":[{\"containerPort\":8080},{\"containerPort\":8083}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/server/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/app/config/dex/tls\",\"name\":\"argocd-dex-server-tls\"},{\"mountPath\":\"/home/argocd\",\"name\":\"plugins-home\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"serviceAccountName\":\"argocd-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"plugins-home\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}}]}}}}\n"}},"apiVersion":"apps/v1","spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"dnsPolicy":"ClusterFirst","terminationGracePeriodSeconds":30,"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"plugins-home"},{"emptyDir":{},"name":"tmp"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"name":"argocd-dex-server-tls","secret":{"secretName":"argocd-dex-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"ca.crt","key":"ca.crt"}]}}],"containers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8080}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_API_SERVER_REPLICAS","value":"2"},{"name":"ARGOCD_SERVER_INSECURE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.insecure"}}},{"name":"ARGOCD_SERVER_BASEHREF","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.basehref"}}},{"name":"ARGOCD_SERVER_ROOTPATH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.rootpath"}}},{"name":"ARGOCD_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.format"}}},{"name":"ARGOCD_SERVER_LOG_LEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.level"}}},{"name":"ARGOCD_SERVER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_SERVER_DEX_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server"}}},{"name":"ARGOCD_SERVER_DISABLE_AUTH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.disable.auth"}}},{"name":"ARGOCD_SERVER_ENABLE_GZIP","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.gzip"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.timeout.seconds"}}},{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.x.frame.options"}}},{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.content.security.policy"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.plaintext"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.strict.tls"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.plaintext"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.strict.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.ciphers"}}},{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.connection.status.cache.expiration"}}},{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.oidc.cache.expiration"}}},{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.login.attempts.expiration"}}},{"name":"ARGOCD_SERVER_STATIC_ASSETS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.staticassets"}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.app.state.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.default.cache.expiration"}}},{"name":"ARGOCD_MAX_COOKIE_NUMBER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.http.cookie.maxnumber"}}},{"name":"ARGOCD_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.listen.address"}}},{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.metrics.listen.address"}}},{"name":"ARGOCD_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}},{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.proxy.extension"}}}],"ports":[{"protocol":"TCP","containerPort":8080},{"protocol":"TCP","containerPort":8083}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/dex/tls","name":"argocd-dex-server-tls"},{"mountPath":"/home/argocd","name":"plugins-home"},{"mountPath":"/tmp","name":"tmp"}],"args":["/usr/local/bin/argocd-server"],"name":"argocd-server","readinessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8080}}}],"serviceAccount":"argocd-server","securityContext":{},"restartPolicy":"Always","schedulerName":"default-scheduler","affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}},"nodeSelector":{"demo-purpose":"tools"}}},"replicas":2,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"}},"progressDeadlineSeconds":600},"status":{"replicas":2,"readyReplicas":2,"conditions":[{"reason":"NewReplicaSetAvailable","lastTransitionTime":"2021-05-27T11:16:33Z","message":"ReplicaSet \"argocd-server-6c6f49884d\" has successfully progressed.","type":"Progressing","lastUpdateTime":"2023-11-08T14:10:01Z","status":"True"},{"reason":"MinimumReplicasAvailable","lastTransitionTime":"2023-11-15T21:47:58Z","message":"Deployment has minimum availability.","type":"Available","lastUpdateTime":"2023-11-15T21:47:58Z","status":"True"}],"updatedReplicas":2,"availableReplicas":2,"observedGeneration":30}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-cm", "labels": [{"app.kubernetes.io/name": "argocd-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"f7726ce4-4109-46e5-b5c3-1375ce417293","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:46Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:repositories":{},"f:repository.credentials":{}}},"manager":"argocd-server","time":"2021-11-11T08:30:45Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:url":{},"f:resource.customizations":{}}},"manager":"Mozilla","time":"2023-01-05T13:19:32Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{".":{},"f:dex.config":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}}},"manager":"kubectl-client-side-apply","time":"2023-09-07T10:10:57Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"854063519","creationTimestamp":"2021-05-27T11:16:26Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"dex.config\":\"connectors:\\n  # GitHub enterprise example\\n  - type: github\\n    id: github\\n    name: GitHub\\n    config:\\n      hostName: github.net\\n      clientID: 02d01b261a8e748ce87b\\n      clientSecret: $dex.github.clientSecret\\n      orgs:\\n      - name: demo-CSS-Ops\\n        teams:\\n        - viewers\\n        - devops-toolchain-admins\\n\",\"repositories\":\"- name: gitops-toolchain-infra\\n  type: git\\n  url: git@github.net:demo-CSS-Ops/gitops-toolchain-infra.git\\n- name: gitops-toolchain-ega\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-ega.git\\n- name: gitops-toolchain-demo-css\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-demo-css.git\\n- name: gitops-toolchain-dkv\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-dkv.git\\n- name: demo-nexus\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/demo-nexus.git\\n- name: demo-jenkins\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/demo-jenkins.git\\n- name: demo-helm-hashicorp\\n  type: helm\\n  url: https://nexus.demo-css.demo-devops.net/repository/demo-helm-hashicorp/\\n- type: git\\n  url: https://github.com/grafana/helm-charts.git\\n\",\"repository.credentials\":\"- sshPrivateKeySecret:\\n    key: sshPrivateKey\\n    name: creds-250222738\\n  url: git@github..net:demo-CSS-Ops/\\n- passwordSecret:\\n    key: password\\n    name: creds-2399356179\\n  url: https://nexus.demo-css.demo-devops.net/\\n  usernameSecret:\\n    key: username\\n    name: creds-2399356179\\n\",\"resource.customizations\":\"bitnami.com/SealedSecret:\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Healthy\\\"\\n    hs.message = \\\"Controller doesn't report resource status\\\"\\n    return hs\\nnetworking.k8s.io/Ingress:\\n  health.lua: |\\n      hs = {}\\n      hs.status = \\\"Healthy\\\"\\n      return hs\\n\",\"url\":\"https://argocd.cluster.demo-devops.net\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":\"2021-05-27T11:16:26Z\",\"labels\":{\"app.kubernetes.io/name\":\"argocd-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-cm\",\"namespace\":\"argocd\",\"resourceVersion\":\"560752076\",\"uid\":\"f7726ce4-4109-46e5-b5c3-1375ce417293\"}}\n"}},"apiVersion":"v1","data":{"dex.config":"connectors:\n  # GitHub enterprise example\n  - type: github\n    id: github-\n    name: GitHub\n    config:\n      hostName: github..net\n      clientID: 02d01b261a8e748ce87b\n      clientSecret: $dex.github.clientSecret\n      orgs:\n      - name: demo-CSS-Ops\n        teams:\n        - viewers\n        - devops-toolchain-admins\n","repository.credentials":"- sshPrivateKeySecret:\n    key: sshPrivateKey\n    name: creds-250222738\n  url: git@github..net:demo-CSS-Ops/\n- passwordSecret:\n    key: password\n    name: creds-2399356179\n  url: https://nexus.demo-css.demo-devops.net/\n  usernameSecret:\n    key: username\n    name: creds-2399356179\n","repositories":"- name: gitops-toolchain-infra\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-infra.git\n- name: gitops-toolchain-ega\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-ega.git\n- name: gitops-toolchain-demo-css\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-demo-css.git\n- name: gitops-toolchain-dkv\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-dkv.git\n- name: demo-nexus\n  type: git\n  url: git@github..net:demo-CSS-Ops/demo-nexus.git\n- name: demo-jenkins\n  type: git\n  url: git@github..net:demo-CSS-Ops/demo-jenkins.git\n- name: demo-helm-hashicorp\n  type: helm\n  url: https://nexus.demo-css.demo-devops.net/repository/demo-helm-hashicorp/\n- type: git\n  url: https://github.com/grafana/helm-charts.git\n","resource.customizations":"bitnami.com/SealedSecret:\n  health.lua: |\n    hs = {}\n    hs.status = \"Healthy\"\n    hs.message = \"Controller doesn't report resource status\"\n    return hs\nnetworking.k8s.io/Ingress:\n  health.lua: |\n      hs = {}\n      hs.status = \"Healthy\"\n      return hs\n","url":"https://argocd.cluster.demo-devops.net"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-cmd-params-cm", "labels": [{"app.kubernetes.io/name": "argocd-cmd-params-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"92b82b46-732a-4805-b362-6907d169e0bf","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:server.insecure":{},"f:redis.server":{},".":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-05-31T12:28:51Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"718314622","creationTimestamp":"2022-07-12T08:39:56Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"redis.server\":\"argocd-redis-ha-haproxy:6379\",\"server.insecure\":\"true\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-cmd-params-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-cmd-params-cm\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1","data":{"redis.server":"argocd-redis-ha-haproxy:6379","server.insecure":"true"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-gpg-keys-cm", "labels": [{"app.kubernetes.io/name": "argocd-gpg-keys-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"85f0a48c-6c19-45bf-9b9e-7123c922600a","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:26Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55716","creationTimestamp":"2021-05-27T11:16:26Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-gpg-keys-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-gpg-keys-cm\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1"} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-notifications-cm", "labels": []}, 
"details":  {"metadata":{"uid":"72f1767a-f810-46f8-a64d-f17e1bcbf322","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:template.app-deployed":{},"f:trigger.on-sync-running":{},"f:template.app-sync-failed":{},"f:trigger.on-sync-status-unknown":{},"f:trigger.on-deployed":{},"f:trigger.on-sync-failed":{},".":{},"f:trigger.on-sync-succeeded":{},"f:service.slack":{},"f:template.app-sync-status-unknown":{},"f:trigger.on-health-degraded":{},"f:template.app-sync-running":{},"f:template.app-sync-succeeded":{},"f:template.app-health-degraded":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}}}},"manager":"kubectl","time":"2021-05-27T11:18:34Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"57040","creationTimestamp":"2021-05-27T11:18:29Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"template.app-deployed\":\"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-health-degraded\":\"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-failed\":\"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-running\":\"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-status-unknown\":\"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-succeeded\":\"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: \\\"[{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"{{ .app.metadata.name}}\\\\\\\",\\\\n  \\\\\\\"title_link\\\\\\\":\\\\\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\\\\\",\\\\n  \\\\\\\"color\\\\\\\": \\\\\\\"#18be52\\\\\\\",\\\\n  \\\\\\\"fields\\\\\\\": [\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Sync Status\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{.app.status.sync.status}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  },\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Repository\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{.app.spec.source.repoURL}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  }\\\\n  {{range $index, $c := .app.status.conditions}}\\\\n  {{if not $index}},{{end}}\\\\n  {{if $index}},{{end}}\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"{{$c.type}}\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{$c.message}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  }\\\\n  {{end}}\\\\n  ]\\\\n}]    \\\"\\n\",\"trigger.on-deployed\":\"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.sync.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'\\n\",\"trigger.on-health-degraded\":\"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\\n\",\"trigger.on-sync-failed\":\"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\\n\",\"trigger.on-sync-running\":\"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\\n\",\"trigger.on-sync-status-unknown\":\"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\\n\",\"trigger.on-sync-succeeded\":\"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"name\":\"argocd-notifications-cm\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1","data":{"template.app-sync-succeeded":"email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: \"[{\\n  \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n  \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n  \\\"color\\\": \\\"#18be52\\\",\\n  \\\"fields\\\": [\\n  {\\n    \\\"title\\\": \\\"Sync Status\\\",\\n    \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n    \\\"short\\\": true\\n  },\\n  {\\n    \\\"title\\\": \\\"Repository\\\",\\n    \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n    \\\"short\\\": true\\n  }\\n  {{range $index, $c := .app.status.conditions}}\\n  {{if not $index}},{{end}}\\n  {{if $index}},{{end}}\\n  {\\n    \\\"title\\\": \\\"{{$c.type}}\\\",\\n    \\\"value\\\": \\\"{{$c.message}}\\\",\\n    \\\"short\\\": true\\n  }\\n  {{end}}\\n  ]\\n}]    \"\n","template.app-deployed":"email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n","template.app-sync-running":"email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n","template.app-sync-failed":"email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n","trigger.on-health-degraded":"- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'\n","service.slack":"{ apiURL: https://hooks.slack.com/services/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, token: $slack-token }","trigger.on-sync-status-unknown":"- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'\n","template.app-health-degraded":"email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n","trigger.on-sync-running":"- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']\n","template.app-sync-status-unknown":"email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n","trigger.on-sync-failed":"- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']\n","trigger.on-deployed":"- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.sync.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'\n","trigger.on-sync-succeeded":"- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-rbac-cm", "labels": [{"app.kubernetes.io/name": "argocd-rbac-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"62f0e5fc-e90d-4470-9c85-c04ce0ec135a","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:46Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:policy.csv":{},"f:policy.default":{},".":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}}},"manager":"kubectl-client-side-apply","time":"2021-07-22T08:52:48Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"27916971","creationTimestamp":"2021-05-27T11:16:26Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"policy.csv\":\"g, demo-CSS-Ops:devops-toolchain-admins, role:admin\\n\",\"policy.default\":\"role:readonly\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-rbac-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-rbac-cm\",\"namespace\":\"argocd\",\"selfLink\":\"/api/v1/namespaces/argocd/configmaps/argocd-rbac-cm\"}}\n"}},"apiVersion":"v1","data":{"policy.csv":"g, demo-CSS-Ops:devops-toolchain-admins, role:admin\n","policy.default":"role:readonly"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-redis-ha-configmap", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"1a317f7b-ab52-4b76-b631-fb368d23bac8","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:27Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:haproxy_init.sh":{},"f:fix-split-brain.sh":{},"f:init.sh":{},"f:haproxy.cfg":{},"f:trigger-failover-if-master.sh":{},"f:sentinel.conf":{},"f:redis.conf":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:06Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"940154015","creationTimestamp":"2021-05-27T11:16:27Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"fix-split-brain.sh\":\"HOSTNAME=\\\"$(hostname)\\\"\\nINDEX=\\\"${HOSTNAME##*-}\\\"\\nSENTINEL_PORT=26379\\nANNOUNCE_IP=''\\nMASTER=''\\nMASTER_GROUP=\\\"argocd\\\"\\nQUORUM=\\\"2\\\"\\nREDIS_CONF=/data/conf/redis.conf\\nREDIS_PORT=6379\\nREDIS_TLS_PORT=\\nSENTINEL_CONF=/data/conf/sentinel.conf\\nSENTINEL_TLS_PORT=\\nSERVICE=argocd-redis-ha\\nSENTINEL_TLS_REPLICATION_ENABLED=false\\nREDIS_TLS_REPLICATION_ENABLED=false\\n\\nROLE=''\\nREDIS_MASTER=''\\n\\nset -eu\\nsentinel_get_master() {\\nset +e\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    else\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    fi\\nset -e\\n}\\n\\nsentinel_get_master_retry() {\\n    master=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        master=$(sentinel_get_master)\\n        if [ -n \\\"${master}\\\" ]; then\\n            break\\n        fi\\n        sleep $((sleep + i))\\n    done\\n    echo \\\"${master}\\\"\\n}\\n\\nidentify_master() {\\n    echo \\\"Identifying redis master (get-master-addr-by-name)..\\\"\\n    echo \\\"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\\\"\\n    MASTER=\\\"$(sentinel_get_master_retry 3)\\\"\\n    if [ -n \\\"${MASTER}\\\" ]; then\\n        echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n    else\\n        echo \\\"  $(date) Did not find redis master (${MASTER})\\\"\\n    fi\\n}\\n\\nsentinel_update() {\\n    echo \\\"Updating sentinel config..\\\"\\n    echo \\\"  evaluating sentinel id (\\\\${SENTINEL_ID_${INDEX}})\\\"\\n    eval MY_SENTINEL_ID=\\\"\\\\$SENTINEL_ID_${INDEX}\\\"\\n    echo \\\"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\\\"\\n    sed -i \\\"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    if [ \\\"$SENTINEL_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    else\\n        echo \\\"  redis master (${1}:${REDIS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    fi\\n    echo \\\"sentinel announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_TLS_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    else\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    fi\\n}\\n\\nredis_update() {\\n    echo \\\"Updating redis config..\\\"\\n    if [ \\\"$REDIS_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_TLS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_TLS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    else\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    fi\\n    echo \\\"slave-announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ncopy_config() {\\n    echo \\\"Copying default redis config..\\\"\\n    echo \\\"  to '${REDIS_CONF}'\\\"\\n    cp /readonly-config/redis.conf \\\"${REDIS_CONF}\\\"\\n    echo \\\"Copying default sentinel config..\\\"\\n    echo \\\"  to '${SENTINEL_CONF}'\\\"\\n    cp /readonly-config/sentinel.conf \\\"${SENTINEL_CONF}\\\"\\n}\\n\\nsetup_defaults() {\\n    echo \\\"Setting up defaults..\\\"\\n    echo \\\"  using statefulset index (${INDEX})\\\"\\n    if [ \\\"${INDEX}\\\" = \\\"0\\\" ]; then\\n        echo \\\"Setting this pod as master for redis and sentinel..\\\"\\n        echo \\\"  using announce (${ANNOUNCE_IP})\\\"\\n        redis_update \\\"${ANNOUNCE_IP}\\\"\\n        sentinel_update \\\"${ANNOUNCE_IP}\\\"\\n        echo \\\"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\\\"\\n        sed -i \\\"s/^.*slaveof.*//\\\" \\\"${REDIS_CONF}\\\"\\n    else\\n        echo \\\"Getting redis master ip..\\\"\\n        echo \\\"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\\\"\\n        DEFAULT_MASTER=\\\"$(getent_hosts 0 | awk '{ print $1 }')\\\"\\n        if [ -z \\\"${DEFAULT_MASTER}\\\" ]; then\\n            echo \\\"Error: Unable to resolve redis master (getent hosts).\\\"\\n            exit 1\\n        fi\\n        echo \\\"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\\\"\\n        echo \\\"Setting default slave config for redis and sentinel..\\\"\\n        echo \\\"  using master ip (${DEFAULT_MASTER})\\\"\\n        redis_update \\\"${DEFAULT_MASTER}\\\"\\n        sentinel_update \\\"${DEFAULT_MASTER}\\\"\\n    fi\\n}\\n\\nredis_ping() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\\n    else\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_PORT}\\\" ping\\n    fi\\nset -e\\n}\\n\\nredis_ping_retry() {\\n    ping=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        if [ \\\"$(redis_ping)\\\" = \\\"PONG\\\" ]; then\\n           ping='PONG'\\n           break\\n        fi\\n        sleep $((sleep + i))\\n        MASTER=$(sentinel_get_master)\\n    done\\n    echo \\\"${ping}\\\"\\n}\\n\\nfind_master() {\\n    echo \\\"Verifying redis master..\\\"\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"  ping (${MASTER}:${REDIS_TLS_PORT})\\\"\\n    else\\n        echo \\\"  ping (${MASTER}:${REDIS_PORT})\\\"\\n    fi\\n    if [ \\\"$(redis_ping_retry 3)\\\" != \\\"PONG\\\" ]; then\\n        echo \\\"  $(date) Can't ping redis master (${MASTER})\\\"\\n        echo \\\"Attempting to force failover (sentinel failover)..\\\"\\n\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        else\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        fi\\n\\n        echo \\\"Hold on for 10sec\\\"\\n        sleep 10\\n        echo \\\"We should get redis master's ip now. Asking (get-master-addr-by-name)..\\\"\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        else\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        fi\\n        MASTER=\\\"$(sentinel_get_master)\\\"\\n        if [ \\\"${MASTER}\\\" ]; then\\n            echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n            echo \\\"Updating redis and sentinel config..\\\"\\n            sentinel_update \\\"${MASTER}\\\"\\n            redis_update \\\"${MASTER}\\\"\\n        else\\n            echo \\\"$(date) Error: Could not failover, exiting...\\\"\\n            exit 1\\n        fi\\n    else\\n        echo \\\"  $(date) Found reachable redis master (${MASTER})\\\"\\n        echo \\\"Updating redis and sentinel config..\\\"\\n        sentinel_update \\\"${MASTER}\\\"\\n        redis_update \\\"${MASTER}\\\"\\n    fi\\n}\\n\\nredis_ro_update() {\\n    echo \\\"Updating read-only redis config..\\\"\\n    echo \\\"  redis.conf set 'replica-priority 0'\\\"\\n    echo \\\"replica-priority 0\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ngetent_hosts() {\\n    index=${1:-${INDEX}}\\n    service=\\\"${SERVICE}-announce-${index}\\\"\\n    host=$(getent hosts \\\"${service}\\\")\\n    echo \\\"${host}\\\"\\n}\\n\\nidentify_announce_ip() {\\n    echo \\\"Identify announce ip for this pod..\\\"\\n    echo \\\"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\\\"\\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\\n    echo \\\"  identified announce (${ANNOUNCE_IP})\\\"\\n}\\n\\nredis_role() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        ROLE=$(redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep role | sed 's/role://' | sed 's/\\\\r//')\\n    else\\n        ROLE=$(redis-cli  -p \\\"${REDIS_PORT}\\\" info | grep role | sed 's/role://' | sed 's/\\\\r//')\\n    fi\\nset -e\\n}\\n\\nidentify_redis_master() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        REDIS_MASTER=$(redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep master_host | sed 's/master_host://' | sed 's/\\\\r//')\\n    else\\n        REDIS_MASTER=$(redis-cli  -p \\\"${REDIS_PORT}\\\" info | grep master_host | sed 's/master_host://' | sed 's/\\\\r//')\\n    fi\\nset -e\\n}\\n\\nreinit() {\\nset +e\\n    sh /readonly-config/init.sh\\n\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"shutdown\\\" | redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key\\n    else\\n        echo \\\"shutdown\\\" | redis-cli  -p \\\"${REDIS_PORT}\\\"\\n    fi\\nset -e\\n}\\n\\nidentify_announce_ip\\n\\nwhile [ -z \\\"${ANNOUNCE_IP}\\\" ]; do\\n    echo \\\"Error: Could not resolve the announce ip for this pod.\\\"\\n    sleep 30\\n    identify_announce_ip\\ndone\\n\\nwhile true; do\\n    sleep 60\\n\\n    # where is redis master\\n    identify_master\\n\\n    if [ \\\"$MASTER\\\" = \\\"$ANNOUNCE_IP\\\" ]; then\\n        redis_role\\n        if [ \\\"$ROLE\\\" != \\\"master\\\" ]; then\\n            reinit\\n        fi\\n    elif [ \\\"${MASTER}\\\" ]; then\\n        identify_redis_master\\n        if [ \\\"$REDIS_MASTER\\\" != \\\"$MASTER\\\" ]; then\\n            reinit\\n        fi\\n    fi\\ndone\\n\",\"haproxy.cfg\":\"defaults REDIS\\n  mode tcp\\n  timeout connect 4s\\n  timeout server 6m\\n  timeout client 6m\\n  timeout check 2s\\n\\nlisten health_check_http_url\\n  bind :8888  \\n  mode http\\n  monitor-uri /healthz\\n  option      dontlognull\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_0\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE0\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_1\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE1\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_2\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE2\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n\\n# decide redis backend to use\\n#master\\nfrontend ft_redis_master\\n  bind :6379 \\n  use_backend bk_redis_master\\n# Check all redis servers to see if they think they are master\\nbackend bk_redis_master\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send info\\\\ replication\\\\r\\\\n\\n  tcp-check expect string role:master\\n  tcp-check send QUIT\\\\r\\\\n\\n  tcp-check expect string +OK\\n  use-server R0 if { srv_is_up(R0) } { nbsrv(check_if_redis_is_master_0) ge 2 }\\n  server R0 argocd-redis-ha-announce-0:6379 check inter 3s fall 1 rise 1\\n  use-server R1 if { srv_is_up(R1) } { nbsrv(check_if_redis_is_master_1) ge 2 }\\n  server R1 argocd-redis-ha-announce-1:6379 check inter 3s fall 1 rise 1\\n  use-server R2 if { srv_is_up(R2) } { nbsrv(check_if_redis_is_master_2) ge 2 }\\n  server R2 argocd-redis-ha-announce-2:6379 check inter 3s fall 1 rise 1\\nfrontend stats\\n  mode http\\n  bind :9101 \\n  http-request use-service prometheus-exporter if { path /metrics }\\n  stats enable\\n  stats uri /stats\\n  stats refresh 10s\\n\",\"haproxy_init.sh\":\"HAPROXY_CONF=/data/haproxy.cfg\\ncp /readonly/haproxy.cfg \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-0 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-0 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP0=$(getent hosts \\\"argocd-redis-ha-announce-0\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP0\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-0\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE0/$ANNOUNCE_IP0/\\\" \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-1 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-1 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP1=$(getent hosts \\\"argocd-redis-ha-announce-1\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP1\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-1\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE1/$ANNOUNCE_IP1/\\\" \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-2 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-2 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP2=$(getent hosts \\\"argocd-redis-ha-announce-2\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP2\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-2\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE2/$ANNOUNCE_IP2/\\\" \\\"$HAPROXY_CONF\\\"\\n\",\"init.sh\":\"echo \\\"$(date) Start...\\\"\\nHOSTNAME=\\\"$(hostname)\\\"\\nINDEX=\\\"${HOSTNAME##*-}\\\"\\nSENTINEL_PORT=26379\\nANNOUNCE_IP=''\\nMASTER=''\\nMASTER_GROUP=\\\"argocd\\\"\\nQUORUM=\\\"2\\\"\\nREDIS_CONF=/data/conf/redis.conf\\nREDIS_PORT=6379\\nREDIS_TLS_PORT=\\nSENTINEL_CONF=/data/conf/sentinel.conf\\nSENTINEL_TLS_PORT=\\nSERVICE=argocd-redis-ha\\nSENTINEL_TLS_REPLICATION_ENABLED=false\\nREDIS_TLS_REPLICATION_ENABLED=false\\n\\nset -eu\\nsentinel_get_master() {\\nset +e\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    else\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    fi\\nset -e\\n}\\n\\nsentinel_get_master_retry() {\\n    master=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        master=$(sentinel_get_master)\\n        if [ -n \\\"${master}\\\" ]; then\\n            break\\n        fi\\n        sleep $((sleep + i))\\n    done\\n    echo \\\"${master}\\\"\\n}\\n\\nidentify_master() {\\n    echo \\\"Identifying redis master (get-master-addr-by-name)..\\\"\\n    echo \\\"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\\\"\\n    MASTER=\\\"$(sentinel_get_master_retry 3)\\\"\\n    if [ -n \\\"${MASTER}\\\" ]; then\\n        echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n    else\\n        echo \\\"  $(date) Did not find redis master (${MASTER})\\\"\\n    fi\\n}\\n\\nsentinel_update() {\\n    echo \\\"Updating sentinel config..\\\"\\n    echo \\\"  evaluating sentinel id (\\\\${SENTINEL_ID_${INDEX}})\\\"\\n    eval MY_SENTINEL_ID=\\\"\\\\$SENTINEL_ID_${INDEX}\\\"\\n    echo \\\"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\\\"\\n    sed -i \\\"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    if [ \\\"$SENTINEL_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    else\\n        echo \\\"  redis master (${1}:${REDIS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    fi\\n    echo \\\"sentinel announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_TLS_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    else\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    fi\\n}\\n\\nredis_update() {\\n    echo \\\"Updating redis config..\\\"\\n    if [ \\\"$REDIS_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_TLS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_TLS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    else\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    fi\\n    echo \\\"slave-announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ncopy_config() {\\n    echo \\\"Copying default redis config..\\\"\\n    echo \\\"  to '${REDIS_CONF}'\\\"\\n    cp /readonly-config/redis.conf \\\"${REDIS_CONF}\\\"\\n    echo \\\"Copying default sentinel config..\\\"\\n    echo \\\"  to '${SENTINEL_CONF}'\\\"\\n    cp /readonly-config/sentinel.conf \\\"${SENTINEL_CONF}\\\"\\n}\\n\\nsetup_defaults() {\\n    echo \\\"Setting up defaults..\\\"\\n    echo \\\"  using statefulset index (${INDEX})\\\"\\n    if [ \\\"${INDEX}\\\" = \\\"0\\\" ]; then\\n        echo \\\"Setting this pod as master for redis and sentinel..\\\"\\n        echo \\\"  using announce (${ANNOUNCE_IP})\\\"\\n        redis_update \\\"${ANNOUNCE_IP}\\\"\\n        sentinel_update \\\"${ANNOUNCE_IP}\\\"\\n        echo \\\"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\\\"\\n        sed -i \\\"s/^.*slaveof.*//\\\" \\\"${REDIS_CONF}\\\"\\n    else\\n        echo \\\"Getting redis master ip..\\\"\\n        echo \\\"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\\\"\\n        DEFAULT_MASTER=\\\"$(getent_hosts 0 | awk '{ print $1 }')\\\"\\n        if [ -z \\\"${DEFAULT_MASTER}\\\" ]; then\\n            echo \\\"Error: Unable to resolve redis master (getent hosts).\\\"\\n            exit 1\\n        fi\\n        echo \\\"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\\\"\\n        echo \\\"Setting default slave config for redis and sentinel..\\\"\\n        echo \\\"  using master ip (${DEFAULT_MASTER})\\\"\\n        redis_update \\\"${DEFAULT_MASTER}\\\"\\n        sentinel_update \\\"${DEFAULT_MASTER}\\\"\\n    fi\\n}\\n\\nredis_ping() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\\n    else\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_PORT}\\\" ping\\n    fi\\nset -e\\n}\\n\\nredis_ping_retry() {\\n    ping=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        if [ \\\"$(redis_ping)\\\" = \\\"PONG\\\" ]; then\\n           ping='PONG'\\n           break\\n        fi\\n        sleep $((sleep + i))\\n        MASTER=$(sentinel_get_master)\\n    done\\n    echo \\\"${ping}\\\"\\n}\\n\\nfind_master() {\\n    echo \\\"Verifying redis master..\\\"\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"  ping (${MASTER}:${REDIS_TLS_PORT})\\\"\\n    else\\n        echo \\\"  ping (${MASTER}:${REDIS_PORT})\\\"\\n    fi\\n    if [ \\\"$(redis_ping_retry 3)\\\" != \\\"PONG\\\" ]; then\\n        echo \\\"  $(date) Can't ping redis master (${MASTER})\\\"\\n        echo \\\"Attempting to force failover (sentinel failover)..\\\"\\n\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        else\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        fi\\n\\n        echo \\\"Hold on for 10sec\\\"\\n        sleep 10\\n        echo \\\"We should get redis master's ip now. Asking (get-master-addr-by-name)..\\\"\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        else\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        fi\\n        MASTER=\\\"$(sentinel_get_master)\\\"\\n        if [ \\\"${MASTER}\\\" ]; then\\n            echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n            echo \\\"Updating redis and sentinel config..\\\"\\n            sentinel_update \\\"${MASTER}\\\"\\n            redis_update \\\"${MASTER}\\\"\\n        else\\n            echo \\\"$(date) Error: Could not failover, exiting...\\\"\\n            exit 1\\n        fi\\n    else\\n        echo \\\"  $(date) Found reachable redis master (${MASTER})\\\"\\n        echo \\\"Updating redis and sentinel config..\\\"\\n        sentinel_update \\\"${MASTER}\\\"\\n        redis_update \\\"${MASTER}\\\"\\n    fi\\n}\\n\\nredis_ro_update() {\\n    echo \\\"Updating read-only redis config..\\\"\\n    echo \\\"  redis.conf set 'replica-priority 0'\\\"\\n    echo \\\"replica-priority 0\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ngetent_hosts() {\\n    index=${1:-${INDEX}}\\n    service=\\\"${SERVICE}-announce-${index}\\\"\\n    host=$(getent hosts \\\"${service}\\\")\\n    echo \\\"${host}\\\"\\n}\\n\\nidentify_announce_ip() {\\n    echo \\\"Identify announce ip for this pod..\\\"\\n    echo \\\"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\\\"\\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\\n    echo \\\"  identified announce (${ANNOUNCE_IP})\\\"\\n}\\n\\nmkdir -p /data/conf/\\n\\necho \\\"Initializing config..\\\"\\ncopy_config\\n\\n# where is redis master\\nidentify_master\\n\\nidentify_announce_ip\\n\\nif [ -z \\\"${ANNOUNCE_IP}\\\" ]; then\\n    \\\"Error: Could not resolve the announce ip for this pod.\\\"\\n    exit 1\\nelif [ \\\"${MASTER}\\\" ]; then\\n    find_master\\nelse\\n    setup_defaults\\nfi\\n\\nif [ \\\"${AUTH:-}\\\" ]; then\\n    echo \\\"Setting redis auth values..\\\"\\n    ESCAPED_AUTH=$(echo \\\"${AUTH}\\\" | sed -e 's/[\\\\/\\u0026]/\\\\\\\\\\u0026/g');\\n    sed -i \\\"s/replace-default-auth/${ESCAPED_AUTH}/\\\" \\\"${REDIS_CONF}\\\" \\\"${SENTINEL_CONF}\\\"\\nfi\\n\\nif [ \\\"${SENTINELAUTH:-}\\\" ]; then\\n    echo \\\"Setting sentinel auth values\\\"\\n    ESCAPED_AUTH_SENTINEL=$(echo \\\"$SENTINELAUTH\\\" | sed -e 's/[\\\\/\\u0026]/\\\\\\\\\\u0026/g');\\n    sed -i \\\"s/replace-default-sentinel-auth/${ESCAPED_AUTH_SENTINEL}/\\\" \\\"$SENTINEL_CONF\\\"\\nfi\\n\\necho \\\"$(date) Ready...\\\"\\n\",\"redis.conf\":\"dir \\\"/data\\\"\\nport 6379\\nrename-command FLUSHDB \\\"\\\"\\nrename-command FLUSHALL \\\"\\\"\\nbind 0.0.0.0\\nmaxmemory 0\\nmaxmemory-policy volatile-lru\\nmin-replicas-max-lag 5\\nmin-replicas-to-write 1\\nrdbchecksum yes\\nrdbcompression yes\\nrepl-diskless-sync yes\\nsave \\\"\\\"\\n\",\"sentinel.conf\":\"dir \\\"/data\\\"\\nport 26379\\nbind 0.0.0.0\\n    sentinel down-after-milliseconds argocd 10000\\n    sentinel failover-timeout argocd 180000\\n    maxclients 10000\\n    sentinel parallel-syncs argocd 5\\n\",\"trigger-failover-if-master.sh\":\"get_redis_role() {\\n  is_master=$(\\n    redis-cli \\\\\\n      -h localhost \\\\\\n      -p 6379 \\\\\\n      info | grep -c 'role:master' || true\\n  )\\n}\\nget_redis_role\\nif [[ \\\"$is_master\\\" -eq 1 ]]; then\\n  echo \\\"This node is currently master, we trigger a failover.\\\"\\n  response=$(\\n    redis-cli \\\\\\n      -h localhost \\\\\\n      -p 26379 \\\\\\n      SENTINEL failover argocd\\n  )\\n  if [[ \\\"$response\\\" != \\\"OK\\\" ]] ; then\\n    echo \\\"$response\\\"\\n    exit 1\\n  fi\\n  timeout=30\\n  while [[ \\\"$is_master\\\" -eq 1 \\u0026\\u0026 $timeout -gt 0 ]]; do\\n    sleep 1\\n    get_redis_role\\n    timeout=$((timeout - 1))\\n  done\\n  echo \\\"Failover successful\\\"\\nfi\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-configmap\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1","data":{"haproxy.cfg":"defaults REDIS\n  mode tcp\n  timeout connect 4s\n  timeout server 6m\n  timeout client 6m\n  timeout check 2s\n\nlisten health_check_http_url\n  bind :8888  \n  mode http\n  monitor-uri /healthz\n  option      dontlognull\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_0\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE0\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_1\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE1\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_2\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE2\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n\n# decide redis backend to use\n#master\nfrontend ft_redis_master\n  bind :6379 \n  use_backend bk_redis_master\n# Check all redis servers to see if they think they are master\nbackend bk_redis_master\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send info\\ replication\\r\\n\n  tcp-check expect string role:master\n  tcp-check send QUIT\\r\\n\n  tcp-check expect string +OK\n  use-server R0 if { srv_is_up(R0) } { nbsrv(check_if_redis_is_master_0) ge 2 }\n  server R0 argocd-redis-ha-announce-0:6379 check inter 3s fall 1 rise 1\n  use-server R1 if { srv_is_up(R1) } { nbsrv(check_if_redis_is_master_1) ge 2 }\n  server R1 argocd-redis-ha-announce-1:6379 check inter 3s fall 1 rise 1\n  use-server R2 if { srv_is_up(R2) } { nbsrv(check_if_redis_is_master_2) ge 2 }\n  server R2 argocd-redis-ha-announce-2:6379 check inter 3s fall 1 rise 1\nfrontend stats\n  mode http\n  bind :9101 \n  http-request use-service prometheus-exporter if { path /metrics }\n  stats enable\n  stats uri /stats\n  stats refresh 10s\n","fix-split-brain.sh":"HOSTNAME=\"$(hostname)\"\nINDEX=\"${HOSTNAME##*-}\"\nSENTINEL_PORT=26379\nANNOUNCE_IP=''\nMASTER=''\nMASTER_GROUP=\"argocd\"\nQUORUM=\"2\"\nREDIS_CONF=/data/conf/redis.conf\nREDIS_PORT=6379\nREDIS_TLS_PORT=\nSENTINEL_CONF=/data/conf/sentinel.conf\nSENTINEL_TLS_PORT=\nSERVICE=argocd-redis-ha\nSENTINEL_TLS_REPLICATION_ENABLED=false\nREDIS_TLS_REPLICATION_ENABLED=false\n\nROLE=''\nREDIS_MASTER=''\n\nset -eu\nsentinel_get_master() {\nset +e\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    else\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    fi\nset -e\n}\n\nsentinel_get_master_retry() {\n    master=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        master=$(sentinel_get_master)\n        if [ -n \"${master}\" ]; then\n            break\n        fi\n        sleep $((sleep + i))\n    done\n    echo \"${master}\"\n}\n\nidentify_master() {\n    echo \"Identifying redis master (get-master-addr-by-name)..\"\n    echo \"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\"\n    MASTER=\"$(sentinel_get_master_retry 3)\"\n    if [ -n \"${MASTER}\" ]; then\n        echo \"  $(date) Found redis master (${MASTER})\"\n    else\n        echo \"  $(date) Did not find redis master (${MASTER})\"\n    fi\n}\n\nsentinel_update() {\n    echo \"Updating sentinel config..\"\n    echo \"  evaluating sentinel id (\\${SENTINEL_ID_${INDEX}})\"\n    eval MY_SENTINEL_ID=\"\\$SENTINEL_ID_${INDEX}\"\n    echo \"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\"\n    sed -i \"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\n/\" \"${SENTINEL_CONF}\"\n    if [ \"$SENTINEL_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  redis master (${1}:${REDIS_TLS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    else\n        echo \"  redis master (${1}:${REDIS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    fi\n    echo \"sentinel announce-ip ${ANNOUNCE_IP}\" >> ${SENTINEL_CONF}\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_TLS_PORT}\" >> ${SENTINEL_CONF}\n    else\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_PORT}\" >> ${SENTINEL_CONF}\n    fi\n}\n\nredis_update() {\n    echo \"Updating redis config..\"\n    if [ \"$REDIS_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_TLS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_TLS_PORT}\" >> ${REDIS_CONF}\n    else\n        echo \"  we are slave of redis master (${1}:${REDIS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_PORT}\" >> ${REDIS_CONF}\n    fi\n    echo \"slave-announce-ip ${ANNOUNCE_IP}\" >> ${REDIS_CONF}\n}\n\ncopy_config() {\n    echo \"Copying default redis config..\"\n    echo \"  to '${REDIS_CONF}'\"\n    cp /readonly-config/redis.conf \"${REDIS_CONF}\"\n    echo \"Copying default sentinel config..\"\n    echo \"  to '${SENTINEL_CONF}'\"\n    cp /readonly-config/sentinel.conf \"${SENTINEL_CONF}\"\n}\n\nsetup_defaults() {\n    echo \"Setting up defaults..\"\n    echo \"  using statefulset index (${INDEX})\"\n    if [ \"${INDEX}\" = \"0\" ]; then\n        echo \"Setting this pod as master for redis and sentinel..\"\n        echo \"  using announce (${ANNOUNCE_IP})\"\n        redis_update \"${ANNOUNCE_IP}\"\n        sentinel_update \"${ANNOUNCE_IP}\"\n        echo \"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\"\n        sed -i \"s/^.*slaveof.*//\" \"${REDIS_CONF}\"\n    else\n        echo \"Getting redis master ip..\"\n        echo \"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\"\n        DEFAULT_MASTER=\"$(getent_hosts 0 | awk '{ print $1 }')\"\n        if [ -z \"${DEFAULT_MASTER}\" ]; then\n            echo \"Error: Unable to resolve redis master (getent hosts).\"\n            exit 1\n        fi\n        echo \"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\"\n        echo \"Setting default slave config for redis and sentinel..\"\n        echo \"  using master ip (${DEFAULT_MASTER})\"\n        redis_update \"${DEFAULT_MASTER}\"\n        sentinel_update \"${DEFAULT_MASTER}\"\n    fi\n}\n\nredis_ping() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\n    else\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_PORT}\" ping\n    fi\nset -e\n}\n\nredis_ping_retry() {\n    ping=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        if [ \"$(redis_ping)\" = \"PONG\" ]; then\n           ping='PONG'\n           break\n        fi\n        sleep $((sleep + i))\n        MASTER=$(sentinel_get_master)\n    done\n    echo \"${ping}\"\n}\n\nfind_master() {\n    echo \"Verifying redis master..\"\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"  ping (${MASTER}:${REDIS_TLS_PORT})\"\n    else\n        echo \"  ping (${MASTER}:${REDIS_PORT})\"\n    fi\n    if [ \"$(redis_ping_retry 3)\" != \"PONG\" ]; then\n        echo \"  $(date) Can't ping redis master (${MASTER})\"\n        echo \"Attempting to force failover (sentinel failover)..\"\n\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        else\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        fi\n\n        echo \"Hold on for 10sec\"\n        sleep 10\n        echo \"We should get redis master's ip now. Asking (get-master-addr-by-name)..\"\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n        else\n            echo \"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n        fi\n        MASTER=\"$(sentinel_get_master)\"\n        if [ \"${MASTER}\" ]; then\n            echo \"  $(date) Found redis master (${MASTER})\"\n            echo \"Updating redis and sentinel config..\"\n            sentinel_update \"${MASTER}\"\n            redis_update \"${MASTER}\"\n        else\n            echo \"$(date) Error: Could not failover, exiting...\"\n            exit 1\n        fi\n    else\n        echo \"  $(date) Found reachable redis master (${MASTER})\"\n        echo \"Updating redis and sentinel config..\"\n        sentinel_update \"${MASTER}\"\n        redis_update \"${MASTER}\"\n    fi\n}\n\nredis_ro_update() {\n    echo \"Updating read-only redis config..\"\n    echo \"  redis.conf set 'replica-priority 0'\"\n    echo \"replica-priority 0\" >> ${REDIS_CONF}\n}\n\ngetent_hosts() {\n    index=${1:-${INDEX}}\n    service=\"${SERVICE}-announce-${index}\"\n    host=$(getent hosts \"${service}\")\n    echo \"${host}\"\n}\n\nidentify_announce_ip() {\n    echo \"Identify announce ip for this pod..\"\n    echo \"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\"\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\n    echo \"  identified announce (${ANNOUNCE_IP})\"\n}\n\nredis_role() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        ROLE=$(redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep role | sed 's/role://' | sed 's/\\r//')\n    else\n        ROLE=$(redis-cli  -p \"${REDIS_PORT}\" info | grep role | sed 's/role://' | sed 's/\\r//')\n    fi\nset -e\n}\n\nidentify_redis_master() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        REDIS_MASTER=$(redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep master_host | sed 's/master_host://' | sed 's/\\r//')\n    else\n        REDIS_MASTER=$(redis-cli  -p \"${REDIS_PORT}\" info | grep master_host | sed 's/master_host://' | sed 's/\\r//')\n    fi\nset -e\n}\n\nreinit() {\nset +e\n    sh /readonly-config/init.sh\n\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"shutdown\" | redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key\n    else\n        echo \"shutdown\" | redis-cli  -p \"${REDIS_PORT}\"\n    fi\nset -e\n}\n\nidentify_announce_ip\n\nwhile [ -z \"${ANNOUNCE_IP}\" ]; do\n    echo \"Error: Could not resolve the announce ip for this pod.\"\n    sleep 30\n    identify_announce_ip\ndone\n\nwhile true; do\n    sleep 60\n\n    # where is redis master\n    identify_master\n\n    if [ \"$MASTER\" = \"$ANNOUNCE_IP\" ]; then\n        redis_role\n        if [ \"$ROLE\" != \"master\" ]; then\n            reinit\n        fi\n    elif [ \"${MASTER}\" ]; then\n        identify_redis_master\n        if [ \"$REDIS_MASTER\" != \"$MASTER\" ]; then\n            reinit\n        fi\n    fi\ndone\n","haproxy_init.sh":"HAPROXY_CONF=/data/haproxy.cfg\ncp /readonly/haproxy.cfg \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-0 && break\n  echo \"Waiting for service argocd-redis-ha-announce-0 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP0=$(getent hosts \"argocd-redis-ha-announce-0\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP0\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-0\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE0/$ANNOUNCE_IP0/\" \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-1 && break\n  echo \"Waiting for service argocd-redis-ha-announce-1 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP1=$(getent hosts \"argocd-redis-ha-announce-1\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP1\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-1\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE1/$ANNOUNCE_IP1/\" \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-2 && break\n  echo \"Waiting for service argocd-redis-ha-announce-2 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP2=$(getent hosts \"argocd-redis-ha-announce-2\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP2\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-2\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE2/$ANNOUNCE_IP2/\" \"$HAPROXY_CONF\"\n","init.sh":"echo \"$(date) Start...\"\nHOSTNAME=\"$(hostname)\"\nINDEX=\"${HOSTNAME##*-}\"\nSENTINEL_PORT=26379\nANNOUNCE_IP=''\nMASTER=''\nMASTER_GROUP=\"argocd\"\nQUORUM=\"2\"\nREDIS_CONF=/data/conf/redis.conf\nREDIS_PORT=6379\nREDIS_TLS_PORT=\nSENTINEL_CONF=/data/conf/sentinel.conf\nSENTINEL_TLS_PORT=\nSERVICE=argocd-redis-ha\nSENTINEL_TLS_REPLICATION_ENABLED=false\nREDIS_TLS_REPLICATION_ENABLED=false\n\nset -eu\nsentinel_get_master() {\nset +e\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    else\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    fi\nset -e\n}\n\nsentinel_get_master_retry() {\n    master=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        master=$(sentinel_get_master)\n        if [ -n \"${master}\" ]; then\n            break\n        fi\n        sleep $((sleep + i))\n    done\n    echo \"${master}\"\n}\n\nidentify_master() {\n    echo \"Identifying redis master (get-master-addr-by-name)..\"\n    echo \"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\"\n    MASTER=\"$(sentinel_get_master_retry 3)\"\n    if [ -n \"${MASTER}\" ]; then\n        echo \"  $(date) Found redis master (${MASTER})\"\n    else\n        echo \"  $(date) Did not find redis master (${MASTER})\"\n    fi\n}\n\nsentinel_update() {\n    echo \"Updating sentinel config..\"\n    echo \"  evaluating sentinel id (\\${SENTINEL_ID_${INDEX}})\"\n    eval MY_SENTINEL_ID=\"\\$SENTINEL_ID_${INDEX}\"\n    echo \"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\"\n    sed -i \"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\n/\" \"${SENTINEL_CONF}\"\n    if [ \"$SENTINEL_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  redis master (${1}:${REDIS_TLS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    else\n        echo \"  redis master (${1}:${REDIS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    fi\n    echo \"sentinel announce-ip ${ANNOUNCE_IP}\" >> ${SENTINEL_CONF}\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_TLS_PORT}\" >> ${SENTINEL_CONF}\n    else\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_PORT}\" >> ${SENTINEL_CONF}\n    fi\n}\n\nredis_update() {\n    echo \"Updating redis config..\"\n    if [ \"$REDIS_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_TLS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_TLS_PORT}\" >> ${REDIS_CONF}\n    else\n        echo \"  we are slave of redis master (${1}:${REDIS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_PORT}\" >> ${REDIS_CONF}\n    fi\n    echo \"slave-announce-ip ${ANNOUNCE_IP}\" >> ${REDIS_CONF}\n}\n\ncopy_config() {\n    echo \"Copying default redis config..\"\n    echo \"  to '${REDIS_CONF}'\"\n    cp /readonly-config/redis.conf \"${REDIS_CONF}\"\n    echo \"Copying default sentinel config..\"\n    echo \"  to '${SENTINEL_CONF}'\"\n    cp /readonly-config/sentinel.conf \"${SENTINEL_CONF}\"\n}\n\nsetup_defaults() {\n    echo \"Setting up defaults..\"\n    echo \"  using statefulset index (${INDEX})\"\n    if [ \"${INDEX}\" = \"0\" ]; then\n        echo \"Setting this pod as master for redis and sentinel..\"\n        echo \"  using announce (${ANNOUNCE_IP})\"\n        redis_update \"${ANNOUNCE_IP}\"\n        sentinel_update \"${ANNOUNCE_IP}\"\n        echo \"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\"\n        sed -i \"s/^.*slaveof.*//\" \"${REDIS_CONF}\"\n    else\n        echo \"Getting redis master ip..\"\n        echo \"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\"\n        DEFAULT_MASTER=\"$(getent_hosts 0 | awk '{ print $1 }')\"\n        if [ -z \"${DEFAULT_MASTER}\" ]; then\n            echo \"Error: Unable to resolve redis master (getent hosts).\"\n            exit 1\n        fi\n        echo \"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\"\n        echo \"Setting default slave config for redis and sentinel..\"\n        echo \"  using master ip (${DEFAULT_MASTER})\"\n        redis_update \"${DEFAULT_MASTER}\"\n        sentinel_update \"${DEFAULT_MASTER}\"\n    fi\n}\n\nredis_ping() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\n    else\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_PORT}\" ping\n    fi\nset -e\n}\n\nredis_ping_retry() {\n    ping=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        if [ \"$(redis_ping)\" = \"PONG\" ]; then\n           ping='PONG'\n           break\n        fi\n        sleep $((sleep + i))\n        MASTER=$(sentinel_get_master)\n    done\n    echo \"${ping}\"\n}\n\nfind_master() {\n    echo \"Verifying redis master..\"\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"  ping (${MASTER}:${REDIS_TLS_PORT})\"\n    else\n        echo \"  ping (${MASTER}:${REDIS_PORT})\"\n    fi\n    if [ \"$(redis_ping_retry 3)\" != \"PONG\" ]; then\n        echo \"  $(date) Can't ping redis master (${MASTER})\"\n        echo \"Attempting to force failover (sentinel failover)..\"\n\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        else\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        fi\n\n        echo \"Hold on for 10sec\"\n        sleep 10\n        echo \"We should get redis master's ip now. Asking (get-master-addr-by-name)..\"\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n        else\n            echo \"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n        fi\n        MASTER=\"$(sentinel_get_master)\"\n        if [ \"${MASTER}\" ]; then\n            echo \"  $(date) Found redis master (${MASTER})\"\n            echo \"Updating redis and sentinel config..\"\n            sentinel_update \"${MASTER}\"\n            redis_update \"${MASTER}\"\n        else\n            echo \"$(date) Error: Could not failover, exiting...\"\n            exit 1\n        fi\n    else\n        echo \"  $(date) Found reachable redis master (${MASTER})\"\n        echo \"Updating redis and sentinel config..\"\n        sentinel_update \"${MASTER}\"\n        redis_update \"${MASTER}\"\n    fi\n}\n\nredis_ro_update() {\n    echo \"Updating read-only redis config..\"\n    echo \"  redis.conf set 'replica-priority 0'\"\n    echo \"replica-priority 0\" >> ${REDIS_CONF}\n}\n\ngetent_hosts() {\n    index=${1:-${INDEX}}\n    service=\"${SERVICE}-announce-${index}\"\n    host=$(getent hosts \"${service}\")\n    echo \"${host}\"\n}\n\nidentify_announce_ip() {\n    echo \"Identify announce ip for this pod..\"\n    echo \"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\"\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\n    echo \"  identified announce (${ANNOUNCE_IP})\"\n}\n\nmkdir -p /data/conf/\n\necho \"Initializing config..\"\ncopy_config\n\n# where is redis master\nidentify_master\n\nidentify_announce_ip\n\nif [ -z \"${ANNOUNCE_IP}\" ]; then\n    \"Error: Could not resolve the announce ip for this pod.\"\n    exit 1\nelif [ \"${MASTER}\" ]; then\n    find_master\nelse\n    setup_defaults\nfi\n\nif [ \"${AUTH:-}\" ]; then\n    echo \"Setting redis auth values..\"\n    ESCAPED_AUTH=$(echo \"${AUTH}\" | sed -e 's/[\\/&]/\\\\&/g');\n    sed -i \"s/replace-default-auth/${ESCAPED_AUTH}/\" \"${REDIS_CONF}\" \"${SENTINEL_CONF}\"\nfi\n\nif [ \"${SENTINELAUTH:-}\" ]; then\n    echo \"Setting sentinel auth values\"\n    ESCAPED_AUTH_SENTINEL=$(echo \"$SENTINELAUTH\" | sed -e 's/[\\/&]/\\\\&/g');\n    sed -i \"s/replace-default-sentinel-auth/${ESCAPED_AUTH_SENTINEL}/\" \"$SENTINEL_CONF\"\nfi\n\necho \"$(date) Ready...\"\n","sentinel.conf":"dir \"/data\"\nport 26379\nbind 0.0.0.0\n    sentinel down-after-milliseconds argocd 10000\n    sentinel failover-timeout argocd 180000\n    maxclients 10000\n    sentinel parallel-syncs argocd 5\n","redis.conf":"dir \"/data\"\nport 6379\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\nbind 0.0.0.0\nmaxmemory 0\nmaxmemory-policy volatile-lru\nmin-replicas-max-lag 5\nmin-replicas-to-write 1\nrdbchecksum yes\nrdbcompression yes\nrepl-diskless-sync yes\nsave \"\"\n","trigger-failover-if-master.sh":"get_redis_role() {\n  is_master=$(\n    redis-cli \\\n      -h localhost \\\n      -p 6379 \\\n      info | grep -c 'role:master' || true\n  )\n}\nget_redis_role\nif [[ \"$is_master\" -eq 1 ]]; then\n  echo \"This node is currently master, we trigger a failover.\"\n  response=$(\n    redis-cli \\\n      -h localhost \\\n      -p 26379 \\\n      SENTINEL failover argocd\n  )\n  if [[ \"$response\" != \"OK\" ]] ; then\n    echo \"$response\"\n    exit 1\n  fi\n  timeout=30\n  while [[ \"$is_master\" -eq 1 && $timeout -gt 0 ]]; do\n    sleep 1\n    get_redis_role\n    timeout=$((timeout - 1))\n  done\n  echo \"Failover successful\"\nfi\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-redis-ha-health-configmap", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"81a8f246-6dcf-446c-8810-7f46c2f128b8","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:sentinel_liveness.sh":{},"f:redis_liveness.sh":{},"f:redis_readiness.sh":{},".":{}},"f:metadata":{"f:annotations":{},"f:labels":{}}},"manager":"oc","time":"2021-05-27T11:16:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{}}}},"manager":"kubectl","time":"2022-02-08T07:39:51Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"132018578","creationTimestamp":"2021-05-27T11:16:25Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"redis_liveness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 6379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ] \\u0026\\u0026 [ \\\"${response:0:7}\\\" != \\\"LOADING\\\" ] ; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\",\"redis_readiness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 6379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ] ; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\",\"sentinel_liveness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 26379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ]; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-health-configmap\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1","data":{"sentinel_liveness.sh":"response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 26379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n","redis_liveness.sh":"response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"${response:0:7}\" != \"LOADING\" ] ; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n","redis_readiness.sh":"response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] ; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-ssh-known-hosts-cm", "labels": [{"app.kubernetes.io/name": "argocd-ssh-known-hosts-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"1292cca0-0542-4dcd-aa94-b0da72907d40","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:47Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:ssh_known_hosts":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}}},"manager":"kubectl-client-side-apply","time":"2021-07-22T08:52:49Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"27916984","creationTimestamp":"2021-05-27T11:16:27Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"ssh_known_hosts\":\"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\ngithub..net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJEiN02a2dx0NdISK4i67hK6MJPBmgM9s+ax3MR9/QTRCaEfaeBr3oJtrCTMN9jVDXH+IsslkZU1+JN+jAhFies=\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-ssh-known-hosts-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-ssh-known-hosts-cm\",\"namespace\":\"argocd\",\"selfLink\":\"/api/v1/namespaces/argocd/configmaps/argocd-ssh-known-hosts-cm\"}}\n"}},"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\ngithub..net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJEiN02a2dx0NdISK4i67hK6MJPBmgM9s+ax3MR9/QTRCaEfaeBr3oJtrCTMN9jVDXH+IsslkZU1+JN+jAhFies=\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "argocd-tls-certs-cm", "labels": [{"app.kubernetes.io/name": "argocd-tls-certs-cm"}, {"app.kubernetes.io/part-of": "argocd"}]}, 
"details":  {"metadata":{"uid":"dc49a579-c6bf-4b4b-9e4b-9ddf85067c8b","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:28Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55728","creationTimestamp":"2021-05-27T11:16:28Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":null,\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-tls-certs-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-tls-certs-cm\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1"} 
} 
, {
"title": {"kind": "ConfigMap", "name": "cmp-plugin", "labels": []}, 
"details":  {"metadata":{"uid":"d9653b53-bd06-42e2-a02e-dec1c6181a15","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:avp.yaml":{},".":{}},"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-09-08T11:52:58Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"855579665","creationTimestamp":"2023-09-07T09:27:08Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"avp.yaml\":\"apiVersion: argoproj.io/v1alpha1\\nkind: ConfigManagementPlugin\\nmetadata:\\n  name: argocd-vault-plugin\\nspec:\\n  allowConcurrency: true\\n  discover:\\n    find:\\n      command:\\n        - sh\\n        - \\\"-c\\\"\\n        - \\\"find . -name 'Chart.yaml' \\u0026\\u0026 find . -name 'values.yaml'\\\"\\n  generate:\\n    command:\\n      - bash\\n      - \\\"-c\\\"\\n      - |\\n        /tmp/linux-amd64/helm template  --kube-version 1.23 $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE --set \\\"$ARGOCD_ENV_HELM_PARAMS\\\" -f \\u003c(echo \\\"$ARGOCD_ENV_HELM_VALUES\\\") . | argocd-vault-plugin generate -\\n  lockRepo: false\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"name\":\"cmp-plugin\",\"namespace\":\"argocd\"}}\n"}},"apiVersion":"v1","data":{"avp.yaml":"apiVersion: argoproj.io/v1alpha1\nkind: ConfigManagementPlugin\nmetadata:\n  name: argocd-vault-plugin\nspec:\n  allowConcurrency: true\n  discover:\n    find:\n      command:\n        - sh\n        - \"-c\"\n        - \"find . -name 'Chart.yaml' && find . -name 'values.yaml'\"\n  generate:\n    command:\n      - bash\n      - \"-c\"\n      - |\n        /tmp/linux-amd64/helm template  --kube-version 1.23 $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE --set \"$ARGOCD_ENV_HELM_PARAMS\" -f <(echo \"$ARGOCD_ENV_HELM_VALUES\") . | argocd-vault-plugin generate -\n  lockRepo: false\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "config-service-cabundle", "labels": [{"app.kubernetes.io/part-of": "tekton-pipelines"}]}, 
"details":  {"metadata":{"uid":"8e314e88-88cc-494c-bfbd-25f65eb7cd88","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{}},"manager":"service-ca-operator","time":"2022-05-30T14:09:08Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:service.beta.openshift.io/inject-cabundle":{},".":{}},"f:labels":{"f:app.kubernetes.io/part-of":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae\"}":{},".":{}}}},"manager":"openshift-pipelines-operator","time":"2022-07-26T21:08:48Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:service-ca.crt":{}}},"manager":"Go-http-client","time":"2023-07-26T09:43:09Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"795736900","creationTimestamp":"2022-05-26T09:30:39Z","namespace":"argocd","annotations":{"service.beta.openshift.io/inject-cabundle":"true"},"ownerReferences":[{"uid":"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae","controller":true,"apiVersion":"operator.tekton.dev/v1alpha1","kind":"TektonInstallerSet","name":"rhosp-rbac-pnjlq","blockOwnerDeletion":true}]},"apiVersion":"v1","data":{"service-ca.crt":"-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIB3fp/lz050IwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMzA3MjYwOTQwMTRaFw0yNTA5MjMwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP/Pi4kPBxdMnx6Pis3J+ocraAjLwvuiO\nxZbxhQmHRpSoOe939AtBdBUiS+D41v0psbcfDtqoKjgsC6SsuO/HNuacGWk2fHKY\ncFK9D2oMGRUYYHfDijp55kzbqeCxjhDcVzy6mHjBP4I4yzMS2CSx/TUNtQS21pGQ\nalfdBpePWgh5jfsmkyNL76onYpvb/hGwlyXCH+Hnkj1qyyiFXxjg61UZIFtRed5r\nI+c0cGNKsr+Igzs/OYWyAZ0k8ivrLrvHLv5uRwivD8EKYYuSzxRrOuFOjnJSmmuk\nOf52uFzLN/k5RnKYMwazOU6a437uJkmlBxqP2tomq2BLVat08/A5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRNiBfe\nAmdBE+5ncUEq0KBkLcVUTDAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEACCx90aaY/iZpJ1j05qrNg1uGmlEFQGydrAqC\nULx7105rl/F2BfCeUkQr4bnjP9mNCApNYEggjgZ0e+dSHbEE37HSDcoYoo9KjLeS\ng23056kNL/0n6YgCL4ElB1cvzS/6ns2j4KdhYCBcN3805mvoCKOEopcYnyfRCpjf\nx6odG7u/N9Ibo7AWh3DGSmQwwlMsoysa8v+09ip0DgeLKCBFImgTJCEht4t3fkcc\nbIPcm+BSp/zYlUtTEPbvSEqqElIIyIxRHN77mWFtnoxOJwosHk4ti6WHgwWxvD0g\n14TvrXzHP05KEdNMw0WThevkO9yLpA6XhiYwn08CoajaNNAt3w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIPib4SfFYv4UwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMjA2MjYwOTM5NDlaFw0yNDA4MjQwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCW8E2mzogKRFQqdSpDg0d93fRnG4oCzid\n5QhrLdPMSQasBV1aXGGwhFYmbVzjMU41PSDjAAF39AK2vFga8qDjobUPC2919zzG\n/pAek2+s35iVNoVKpi9GRV1SK8RiAH8kmPpQ6YlJtuB6NUZ09+0PAhDqSlJl4msj\nIRqhikafXjQUwl3QIUYvgV+H1V2VjIqkmXr1DtjJHA04OW16TzPxUqItuurTBRm4\nr6TgQqZ1OkEn6K+r5IL4EpesSZppT5l4lbGgh3IVOUIdGSn9KqUgK61IuIVIc9zK\nf9XT4n3DmzCAinz8z5MonCrsWg+P/13xRr6D/ogKAN0vaOzYYyP5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSQG+kW\n3AdKKn6TM1uBuh1JDjp+ODAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEAFP4PgcZ0ddqIC3TdGaRK+RqcBWAecH6Mxgft\nRD8LBY6cyWe3oetGeUh3L5/QNl/Yew19tIz6+FwcUPgfZWUYzkSgJ1PqSK4n2sad\n8jFgnA83kulM284Tra5wjQssCB9SCQuN2fln8nEcfNrSbDVTSENawk+hC0NQm21y\nAWRqgy38PKHp41Z6UI/ux+/CLTr+3/yaUscNOUcu5miTb5TVNwDvmg1klZUmDN5F\nPNHnMlK2g5K3MsfA1NaCT0QEH/aApQYxOPpH/RIxtU2QxhnsJgR00sqBFbolspEY\nBEVPdDz07trfPO6tsSwOMp3wgaiPlkOn5fepZFIzpcf0iQoIyg==\n-----END CERTIFICATE-----\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "config-trusted-cabundle", "labels": [{"config.openshift.io/inject-trusted-cabundle": "true"}, {"app.kubernetes.io/part-of": "tekton-pipelines"}]}, 
"details":  {"metadata":{"uid":"c2afb5ec-ccf8-462d-8c95-bd1109d216e9","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:ca-bundle.crt":{}}},"manager":"cluster-network-operator/configmap_ca","time":"2023-11-16T22:25:15Z","operation":"Apply","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{}},"manager":"cluster-network-operator","time":"2022-05-26T09:30:39Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/part-of":{},"f:config.openshift.io/inject-trusted-cabundle":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae\"}":{},".":{}}}},"manager":"openshift-pipelines-operator","time":"2022-07-26T21:08:48Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"951622675","creationTimestamp":"2022-05-26T09:30:39Z","namespace":"argocd","ownerReferences":[{"uid":"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae","controller":true,"apiVersion":"operator.tekton.dev/v1alpha1","kind":"TektonInstallerSet","name":"rhosp-rbac-pnjlq","blockOwnerDeletion":true}]},"apiVersion":"v1","data":{"ca-bundle.crt":"# ACCVRAIZ1\n-----BEGIN CERTIFICATE-----\n..."}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "kube-root-ca.crt", "labels": []}, 
"details":  {"metadata":{"uid":"afef9992-9ada-4f75-8061-d61523abccfc","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{"f:ca.crt":{},".":{}},"f:metadata":{"f:annotations":{"f:kubernetes.io/description":{},".":{}}}},"manager":"kube-controller-manager","time":"2023-11-16T22:11:26Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"951602394","creationTimestamp":"2022-05-26T09:05:43Z","namespace":"argocd","annotations":{"kubernetes.io/description":"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."}},"apiVersion":"v1","data":{"ca.crt":"-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUFFdS12G1GFSSJbUMGW6BgHEAj/AwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBALSu\nH3sHGjDYn7H8rGuyhYvqor4bcLB1tbvoBipDwSrljzZI6buXtZcJv7dVnwPNVa01\nTnMf/16RjNiSAW/d2IFKkHmsHdT4gpsyMb9W47gkVqUAJXA6IYETfXupSZasQbW+\nVAB3xhrUcHmQIwyP5WV9MKQMDADl6U+NbpdgGCEpoE4ysBU+PSv4s2YVfbu9UvgL\nR7McWYWjUVSNXgifWLbB1ok0UA9pb8HB1XwxdN5gt23VcBOntfFjWU+7NT0A82sP\nEi2vi1ODWkg/UxQooXdAtiOMY8su3lQUv4Q3zCOKGHiDM+wL7t+YX9L8BBM7U6xg\n4e9n8giJjiod29iUgzo=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUWs7IFX44NimgroJBwRYD8KsaOIgwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBANNt\n+H4PcuI7bVvRlm9E5Hf0jKZiyUZg3D3Hmf+/3KRF+rYJctpHIrneAJWAUBaqVJkR\nJBKtYQfj0xNL++rB0ydsLpop8JsW7QHty5ZuSPJag4gBmSK0wnfEiM0Y2XPijZia\nedCC2ZsAVY8SVE8o6LUjk5duipTZ409504unK1suVoQm0HfZktABCZESCWyxkj+O\nqojRT35yZsIkQIN+qkgvqlF8HtdHvww5N8+a28ry22BqEgUsgPeWhhmIcuRYCIC4\naIJYUwtOqj5qyMDEIOVZJYytj/l6L1Q35SpBlf4VTX/SnJfkP4+B1Vj5yNpUpEDG\nk/MdADuEgdGtmiQxuQI=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUSnsOnDSofNkX+QyYd6HsM7y2rL4wDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBAFDL\nH7S9JWYSGCxdkATFtfpCvRjq6rk6A5VYYxLrtMbs2lRaxBjzzJktkoK2YF/5r9fy\nubaxcFHamU2ZptVPOgKRG1dzhu7en7p4kjUxlTeD+hn2be/oRQK+6sgMR5XPVTT7\ni8P9VdYc5YowiKyBxfxyVahi9CCvo7n48AYE7WAJWXJiIc8uK84rqR0YCfB+JY71\njst+ty4sH2G+x3/xvfIhH0ZTm52NiQpm7muUjeFTRvJv9M5QE5M168a/3lq+pqUE\nGS9+kpBcEQ2+yNjEUawR0rTi5dfm4bC3mr41dmadQUw3ewuj29RwpvJwHhv3UQkD\nTT7SVokZAT5DY97SckQ=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUD+2Az9Fmu83G6XFviJABh+Yc5ocwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBALjU\nS5izTtJQUiCNX9SZfS0sU8AwR25foqJCfhCV0lgikIJ0trvYjbFk3LXmN86pazLa\nOHhspTRNEkMI40kRswKi9nE+9Kd3eJfL7doqv97fCBSFq5svvFMCW8SPF+M1sdXr\noWiddvXJZXY9L3NOpySHUc8T71djPdEo5fPZiSWIe1ALIrIUsy7reO2r72gGKXy9\nSwc7MgzIpphS0I2UG/c5EoZLY8MF/xu7SDQaUWRdYche6tKbJvH8yyG26pw247VA\nBi5TQnkcpi/QbH28VOFC63JGADpRjOzbi2ARsHTebwemTn7dT8D7H01jHD09SDsC\nuVmBggp1FyJsayRi+JM=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUPBhAC6+KTeBjsHJcjXOBpdapJZYwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAG1I0/iyxMZMliuLqV1vPemQ1WBSKBSJBnduJWt34tKpzRb3+\nXWyiGch9JEJO/tJBn/Q0ysZwr1/gXXrvI2VFBWy6dR1T/GLwSb735OwM9ctUpshw\n0S9UllJ2diidemo7Z7rhfF37OjJbpSQ+e6UbMXWQMKFI07W4d0N2Mmje+VetiRG2e\nKDVKyVvqa7c8d0sK/OKegySOTm6VrlX14dyI+mR+YAVYx7+xIrY81nC8aAlv9y+F\nGok5YnC7QOzdils5mr/GQtYFqCAxiwdy8SMu50q6fmPgosOtbhodhgQnIBL9XOfn\niJnfOM1HdZEUSqXCCDJChza8i+Z1s6jn3dXH2A==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUM+Ec/oWkYrTxG7vz18Mne5G4vhUwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAeCBMAjom9Ols+QQFBHIHOZqlU3FXUiokbwwD0CdBF2XXhoeB\nc1qUsAvtzQgiHNh+0LWuKY3fEnEjyE02xpOTIK5kCyth+VswtJpO+I2Pf+dYY5EQ\n62jLCST4WueNzFlzDtbTF6EtUhRT9x+/kFSPcmw394e9b70dIHsRShS4scy9vdfI\nRrccuoIMSKQJYFXaMBxRQpjPK4XW7KX6aOZMMhLutgyxtCTJyA5LUTH+dznXvHxn\n3NYMdCg8a0546b9/j1xcmiH8DDyar1D3RNTYVld2yXBTqfmgNs5ZsAEjX/YdQdqd\nfQFQrIVYcsPYk1iPMyJm0ObABSBYla9060GqlA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUXYdlgH3/3my4wGf6fPXAgARUrU0wDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAWfW4heTGfrwmMZdCMbWLKKm4dtjfKdyNgQGCBoexzR5rz9A5\nAOYeGn4QyPJ1TDkkJR7TMcpiC7UUn4dcKie0qetfU5eeLj9WOUOpsLkBcB5BUIKa\nqGbWwlqF7gBrgObuxn7po4xSkwfv+ZJLHpG/GQx8KlN3TcpwWy/z/WJimHQnG+DT\nYJrJ5xt8c+tDKf4OaU+bjqOKngtQsWhEI+5qtUaI/FUw9V66muQ4eUhPlL2eZ0fc\nwESneZ4LAMtGKetPYNhhWcR9wh83K9iXT+lQzI3DyDiJN2loaMvM0nyb8gvm9e78\ntJ2JUAY+MiU/pVD3VJZlXxn+8cUaq2C1n28KdA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUHS2Ehy05XF+ZNhCz+FzEILx+LWkwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAs6pWQJYlVKHZGaRn0HzDtMW3/FQ6Lxa9CelPI4DYeGJdZW8x\nfLDCoZMoeDaxFlW7fMEWY0kv+bHeHyOh+8QiRcJT5WZVE36klcdZgFU5p1v6KA02\nBt0gvYfeYV2LLp3W7FTAw6Ue/UOckduGVjdpTW39T10fZnGC7FJy/xMqekHu4XUt\nWi4V/WTYh1tT/NQOxz4kyHJw7m5G5gvgIK6tcdkmjsJ5AJVW7Hld5TBzt6gR3/QK\n0kChiPnaB6+JJ2hqzYC1ZLxCrHtOXDwPX1rZM77k9koI7o6jqnPTYOUkbbYr3/3Z\ntDgfEg0DNx3uCfRdXbkKCl5yGgE3VxRz25m5Nw==\n-----END CERTIFICATE-----\n"}} 
} 
, {
"title": {"kind": "ConfigMap", "name": "openshift-service-ca.crt", "labels": []}, 
"details":  {"metadata":{"uid":"e32239b3-d7cc-479a-ada4-def79fccb935","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{"f:service.beta.openshift.io/inject-cabundle":{},".":{}}}},"manager":"kube-controller-manager","time":"2022-07-18T11:58:37Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:data":{"f:service-ca.crt":{}}},"manager":"Go-http-client","time":"2023-07-26T09:43:16Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"795737049","creationTimestamp":"2022-05-26T09:05:43Z","namespace":"argocd","annotations":{"service.beta.openshift.io/inject-cabundle":"true"}},"apiVersion":"v1","data":{"service-ca.crt":"-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIB3fp/lz050IwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMzA3MjYwOTQwMTRaFw0yNTA5MjMwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP/Pi4kPBxdMnx6Pis3J+ocraAjLwvuiO\nxZbxhQmHRpSoOe939AtBdBUiS+D41v0psbcfDtqoKjgsC6SsuO/HNuacGWk2fHKY\ncFK9D2oMGRUYYHfDijp55kzbqeCxjhDcVzy6mHjBP4I4yzMS2CSx/TUNtQS21pGQ\nalfdBpePWgh5jfsmkyNL76onYpvb/hGwlyXCH+Hnkj1qyyiFXxjg61UZIFtRed5r\nI+c0cGNKsr+Igzs/OYWyAZ0k8ivrLrvHLv5uRwivD8EKYYuSzxRrOuFOjnJSmmuk\nOf52uFzLN/k5RnKYMwazOU6a437uJkmlBxqP2tomq2BLVat08/A5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRNiBfe\nAmdBE+5ncUEq0KBkLcVUTDAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEACCx90aaY/iZpJ1j05qrNg1uGmlEFQGydrAqC\nULx7105rl/F2BfCeUkQr4bnjP9mNCApNYEggjgZ0e+dSHbEE37HSDcoYoo9KjLeS\ng23056kNL/0n6YgCL4ElB1cvzS/6ns2j4KdhYCBcN3805mvoCKOEopcYnyfRCpjf\nx6odG7u/N9Ibo7AWh3DGSmQwwlMsoysa8v+09ip0DgeLKCBFImgTJCEht4t3fkcc\nbIPcm+BSp/zYlUtTEPbvSEqqElIIyIxRHN77mWFtnoxOJwosHk4ti6WHgwWxvD0g\n14TvrXzHP05KEdNMw0WThevkO9yLpA6XhiYwn08CoajaNNAt3w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIPib4SfFYv4UwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMjA2MjYwOTM5NDlaFw0yNDA4MjQwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCW8E2mzogKRFQqdSpDg0d93fRnG4oCzid\n5QhrLdPMSQasBV1aXGGwhFYmbVzjMU41PSDjAAF39AK2vFga8qDjobUPC2919zzG\n/pAek2+s35iVNoVKpi9GRV1SK8RiAH8kmPpQ6YlJtuB6NUZ09+0PAhDqSlJl4msj\nIRqhikafXjQUwl3QIUYvgV+H1V2VjIqkmXr1DtjJHA04OW16TzPxUqItuurTBRm4\nr6TgQqZ1OkEn6K+r5IL4EpesSZppT5l4lbGgh3IVOUIdGSn9KqUgK61IuIVIc9zK\nf9XT4n3DmzCAinz8z5MonCrsWg+P/13xRr6D/ogKAN0vaOzYYyP5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSQG+kW\n3AdKKn6TM1uBuh1JDjp+ODAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEAFP4PgcZ0ddqIC3TdGaRK+RqcBWAecH6Mxgft\nRD8LBY6cyWe3oetGeUh3L5/QNl/Yew19tIz6+FwcUPgfZWUYzkSgJ1PqSK4n2sad\n8jFgnA83kulM284Tra5wjQssCB9SCQuN2fln8nEcfNrSbDVTSENawk+hC0NQm21y\nAWRqgy38PKHp41Z6UI/ux+/CLTr+3/yaUscNOUcu5miTb5TVNwDvmg1klZUmDN5F\nPNHnMlK2g5K3MsfA1NaCT0QEH/aApQYxOPpH/RIxtU2QxhnsJgR00sqBFbolspEY\nBEVPdDz07trfPO6tsSwOMp3wgaiPlkOn5fepZFIzpcf0iQoIyg==\n-----END CERTIFICATE-----\n"}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-application-controller-0", "labels": [{"controller-revision-hash": "argocd-application-controller-6d6d7c8fc9"}, {"app.kubernetes.io/name": "argocd-application-controller"}, {"statefulset.kubernetes.io/pod-name": "argocd-application-controller-0"}]}, 
"details":  {"metadata":{"uid":"63afd637-9a30-426f-bd97-9e1ae947fe87","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:statefulset.kubernetes.io/pod-name":{},"f:app.kubernetes.io/name":{},"f:controller-revision-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"e1d30156-033c-4b1f-8d6d-e46c01cfdbcf\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:hostname":{},"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"argocd-application-controller\"}":{"f:env":{"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_CONTROLLER_REPLICAS\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_CONTROLLER_SHARDING_ALGORITHM\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_HARD_RECONCILIATION_TIMEOUT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/controller/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:workingDir":{},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8082,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:subdomain":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"argocd-home\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:34Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:39Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:40Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:podIPs":{"k:{\"ip\":\"172.30.218.100\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:37:04Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231373","creationTimestamp":"2023-11-15T21:36:34Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.100/32","cni.projectcalico.org/containerID":"f42a7adb3c7e70d23cabffe502ea2df1a01b84d63ee4c4171b4719b5d7e012ef","cni.projectcalico.org/podIPs":"172.30.218.100/32","openshift.io/scc":"allow-jenkins-agent","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.100\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-application-controller-","ownerReferences":[{"uid":"e1d30156-033c-4b1f-8d6d-e46c01cfdbcf","controller":true,"apiVersion":"apps/v1","kind":"StatefulSet","name":"argocd-application-controller","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-application-controller","imagePullSecrets":[{"name":"argocd-application-controller-dockercfg-2k2mx"}],"volumes":[{"emptyDir":{},"name":"argocd-home"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-wdmns"}],"serviceAccount":"argocd-application-controller","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000,"supplementalGroups":[1000]},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"hostname":"argocd-application-controller-0","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"subdomain":"argocd-application-controller","containers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","workingDir":"/home/argocd","resources":{},"securityContext":{"runAsUser":1000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_CONTROLLER_REPLICAS","value":"1"},{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"name":"argocd-cm","optional":true,"key":"timeout.reconciliation"}}},{"name":"ARGOCD_HARD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"name":"argocd-cm","optional":true,"key":"timeout.hard.reconciliation"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.repo.server.timeout.seconds"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.status.processors"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.operation.processors"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.log.format"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.log.level"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.metrics.cache.expiration"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.self.heal.timeout.seconds"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.repo.server.plaintext"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.repo.server.strict.tls"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.resource.health.persist"}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.app.state.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.default.cache.expiration"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}},{"name":"ARGOCD_CONTROLLER_SHARDING_ALGORITHM","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.sharding.algorithm"}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"controller.kubectl.parallelism.limit"}}}],"ports":[{"protocol":"TCP","containerPort":8082}],"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"},{"mountPath":"/home/argocd","name":"argocd-home"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-wdmns","readOnly":true}],"args":["/usr/local/bin/argocd-application-controller"],"name":"argocd-application-controller","readinessProbe":{"failureThreshold":3,"periodSeconds":10,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8082}}}],"schedulerName":"default-scheduler","affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}}},"status":{"phase":"Running","podIP":"172.30.218.100","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-application-controller","started":true,"state":{"running":{"startedAt":"2023-11-15T21:36:53Z"}},"containerID":"cri-o://c3fa3f9de02491b762a353c01a400db8aca514242e1d7ccce49c54a12d7da6c1","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:36:34Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:34Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:37:04Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:37:04Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:34Z","type":"PodScheduled","status":"True"}],"podIPs":[{"ip":"172.30.218.100"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-applicationset-controller-b57cbdbd7-f59bz", "labels": [{"app.kubernetes.io/name": "argocd-applicationset-controller"}, {"pod-template-hash": "b57cbdbd7"}]}, 
"details":  {"metadata":{"uid":"7a9c6041-e275-42ac-98ca-82add8b2a5b5","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"4a3efddc-a9ba-4ab5-b189-3ad8a7e984e5\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-applicationset-controller\"}":{"f:env":{"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"NAMESPACE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:fieldRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/keys\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/source\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:args":{},"f:name":{},"f:ports":{"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":7000,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:resources":{}}},"f:dnsPolicy":{},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"gpg-keyring\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"gpg-keys\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:24Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:podIPs":{"k:{\"ip\":\"172.30.218.99\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:36:42Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950230919","creationTimestamp":"2023-11-15T21:36:23Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.99/32","cni.projectcalico.org/containerID":"df991302f6434ca57501b88a457b66a18bd3de1ebab0f5c104aa06f666274e16","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","cni.projectcalico.org/podIPs":"172.30.218.99/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.99\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-applicationset-controller-b57cbdbd7-","ownerReferences":[{"uid":"4a3efddc-a9ba-4ab5-b189-3ad8a7e984e5","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-applicationset-controller-b57cbdbd7","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-applicationset-controller","imagePullSecrets":[{"name":"argocd-applicationset-controller-dockercfg-6t685"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"defaultMode":420,"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-mqpxv"}],"serviceAccount":"argocd-applicationset-controller","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"args":["/usr/local/bin/argocd-applicationset-controller"],"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"argocd-applicationset-controller","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.global.preserved.annotations"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.global.preserved.labels"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.leader.election"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.policy"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.policy.override"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.debug"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.log.format"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.log.level"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.dryrun"}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.git.submodule"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.progressive.syncs"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.enable.new.git.file.globbing"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.plaintext"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.strict.tls"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.repo.server.timeout.seconds"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.concurrent.reconciliations.max"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.namespaces"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.scm.root.ca.path"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"applicationsetcontroller.allowed.scm.providers"}}}],"ports":[{"protocol":"TCP","name":"webhook","containerPort":7000},{"protocol":"TCP","name":"metrics","containerPort":8080}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-mqpxv","readOnly":true}]}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","podIP":"172.30.218.99","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-applicationset-controller","started":true,"state":{"running":{"startedAt":"2023-11-15T21:36:42Z"}},"containerID":"cri-o://e81b104df111ccf72c83bac83b678370bbc43e4a387aec7570e9f832c6a8efd9","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:36:23Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:42Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:42Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"PodScheduled","status":"True"}],"podIPs":[{"ip":"172.30.218.99"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-dex-server-5c9848874c-8l5kv", "labels": [{"app.kubernetes.io/name": "argocd-dex-server"}, {"pod-template-hash": "5c9848874c"}]}, 
"details":  {"metadata":{"uid":"c80e5092-fef1-41bd-9cfc-fdd75c27e2ec","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"b516f9e9-5223-4947-bc9a-c703b51de2e6\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"dex\"}":{"f:env":{".":{},"k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/shared\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{},"k:{\"mountPath\":\"/tls\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},"f:ports":{"k:{\"containerPort\":5557,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":5558,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{},"k:{\"containerPort\":5556,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}}},".":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"copyutil\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/shared\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},".":{}},"f:affinity":{"f:podAntiAffinity":{"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"static-files\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"dexconfig\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"argocd-dex-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},".":{}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.30.218.121\"}":{"f:ip":{},".":{}}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:37:27Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231923","creationTimestamp":"2023-11-15T21:36:23Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.121/32","cni.projectcalico.org/containerID":"b48250bdb32e67f93ccb757b16440a71bbfe35ab8a3d8d8f0993e52df52bd8d6","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","cni.projectcalico.org/podIPs":"172.30.218.121/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.121\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-dex-server-5c9848874c-","ownerReferences":[{"uid":"b516f9e9-5223-4947-bc9a-c703b51de2e6","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-dex-server-5c9848874c","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-dex-server","imagePullSecrets":[{"name":"argocd-dex-server-dockercfg-hvxr5"}],"volumes":[{"emptyDir":{},"name":"static-files"},{"emptyDir":{},"name":"dexconfig"},{"name":"argocd-dex-server-tls","secret":{"secretName":"argocd-dex-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-slmjp"}],"serviceAccount":"argocd-dex-server","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"image":"ghcr.io/dexidp/dex:v2.37.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"dex","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_DEX_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"dexserver.disable.tls"}}}],"ports":[{"protocol":"TCP","containerPort":5556},{"protocol":"TCP","containerPort":5557},{"protocol":"TCP","containerPort":5558}],"command":["/shared/argocd-dex","rundex"],"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"},{"mountPath":"/tls","name":"argocd-dex-server-tls"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-slmjp","readOnly":true}]}],"schedulerName":"default-scheduler","initContainers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"copyutil","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["/bin/cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-slmjp","readOnly":true}]}],"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}}},"status":{"phase":"Running","podIP":"172.30.218.121","containerStatuses":[{"image":"ghcr.io/dexidp/dex:v2.37.0","imageID":"ghcr.io/dexidp/dex@sha256:79b85ec1ff1d41a53a234418054892d863825b85dea9c7fc47dcd3ffe9eefa1e","restartCount":0,"ready":true,"name":"dex","started":true,"state":{"running":{"startedAt":"2023-11-15T21:37:27Z"}},"containerID":"cri-o://743c4512b0d404717610a9c2d066d933569d41b62438706d13b97aa59bb3e7c2","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:36:23Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:54Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:37:27Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:37:27Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"copyutil","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:36:51Z","containerID":"cri-o://165126ee6d2a154db4fd054b015f1a600de457353e87ab33506e796a4d92c7c9","finishedAt":"2023-11-15T21:36:52Z"}},"containerID":"cri-o://165126ee6d2a154db4fd054b015f1a600de457353e87ab33506e796a4d92c7c9","lastState":{}}],"podIPs":[{"ip":"172.30.218.121"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-notifications-controller-77657944f8-24fmr", "labels": [{"app.kubernetes.io/name": "argocd-notifications-controller"}, {"pod-template-hash": "77657944f8"}]}, 
"details":  {"metadata":{"uid":"ac76b6ab-d519-475b-bed6-1eaccd533923","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"1b26ccdc-3ea3-4e46-a1bb-cf6db3447c04\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{}},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-notifications-controller\"}":{"f:env":{"k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{}},"f:livenessProbe":{"f:tcpSocket":{"f:port":{},".":{}},"f:successThreshold":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:workingDir":{},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:name":{},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:dnsPolicy":{},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:podIPs":{"k:{\"ip\":\"172.30.218.112\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:36:45Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231017","creationTimestamp":"2023-11-15T21:36:23Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.112/32","cni.projectcalico.org/containerID":"8b137502fcecca69929fabc2eba1464fd13126dc2f0b9aa25a73497c41ed920d","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","cni.projectcalico.org/podIPs":"172.30.218.112/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.112\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-notifications-controller-77657944f8-","ownerReferences":[{"uid":"1b26ccdc-3ea3-4e46-a1bb-cf6db3447c04","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-notifications-controller-77657944f8","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-notifications-controller","imagePullSecrets":[{"name":"argocd-notifications-controller-dockercfg-xdcwb"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-6n9z7"}],"serviceAccount":"argocd-notifications-controller","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"},"runAsNonRoot":true},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"args":["/usr/local/bin/argocd-notifications"],"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":10,"tcpSocket":{"port":9001},"timeoutSeconds":1,"successThreshold":1},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","workingDir":"/app","name":"argocd-notifications-controller","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"notificationscontroller.log.format"}}},{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"notificationscontroller.log.level"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}}],"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-6n9z7","readOnly":true}]}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","podIP":"172.30.218.112","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-notifications-controller","started":true,"state":{"running":{"startedAt":"2023-11-15T21:36:44Z"}},"containerID":"cri-o://32cf4f38cee2c79137ff7a77cd0a3a6fe429452587f55e87ff325fc78958aa33","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:36:23Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:45Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:45Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"PodScheduled","status":"True"}],"podIPs":[{"ip":"172.30.218.112"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-haproxy-559d8d9d98-b729m", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha-haproxy"}, {"pod-template-hash": "559d8d9d98"}]}, 
"details":  {"metadata":{"uid":"4f308dd9-3241-42bd-b47c-051e4ebef4ad","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/config":{},"f:prometheus.io/path":{},".":{},"f:prometheus.io/scrape":{},"f:prometheus.io/port":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"haproxy\"}":{"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/run/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{},"k:{\"mountPath\":\"/usr/local/etc/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":9101,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"config-volume\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"shared-socket\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:47:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"PodScheduled\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}}}}},"manager":"kube-scheduler","subresource":"status","time":"2023-11-15T21:47:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:48:13Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:48:13Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.137.39\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:48:28Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950243890","creationTimestamp":"2023-11-15T21:47:30Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.137.39/32","cni.projectcalico.org/containerID":"07df666a9c1001ee01b49380483ea7431543411bedc497a426d2dd9c610194e0","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","prometheus.io/path":"/metrics","checksum/config":"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae","prometheus.io/port":"9101","prometheus.io/scrape":"true","cni.projectcalico.org/podIPs":"172.30.137.39/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.137.39\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-haproxy-559d8d9d98-","ownerReferences":[{"uid":"47e0d752-bdce-41c3-a2eb-19be1b431977","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-redis-ha-haproxy-559d8d9d98","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.38","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha-haproxy","imagePullSecrets":[{"name":"argocd-redis-ha-haproxy-dockercfg-wqk2p"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-pjvn7"}],"serviceAccount":"argocd-redis-ha-haproxy","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"lifecycle":{},"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"haproxy","readinessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379},{"protocol":"TCP","name":"metrics-port","containerPort":9101}],"volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-pjvn7","readOnly":true}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly/haproxy_init.sh"],"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["sh"],"volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-pjvn7","readOnly":true}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.137.39","containerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"haproxy","started":true,"state":{"running":{"startedAt":"2023-11-15T21:48:20Z"}},"containerID":"cri-o://f20e1dc70a04d508bd74b722ba69f2f3e0d2e9d0ed55d623a34d8d55d74adf4c","lastState":{}}],"hostIP":"10.134.76.38","startTime":"2023-11-15T21:48:12Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:48:19Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:48:27Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:48:27Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:48:12Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:48:18Z","containerID":"cri-o://f701621e7f1a3a1dee1cfd90e75eaa9ca90200d3ca2921b4141497927f166771","finishedAt":"2023-11-15T21:48:18Z"}},"containerID":"cri-o://f701621e7f1a3a1dee1cfd90e75eaa9ca90200d3ca2921b4141497927f166771","lastState":{}}],"podIPs":[{"ip":"172.30.137.39"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-haproxy-559d8d9d98-hck87", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha-haproxy"}, {"pod-template-hash": "559d8d9d98"}]}, 
"details":  {"metadata":{"uid":"4651466c-d12a-4eb4-8946-fa4d348810be","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/config":{},"f:prometheus.io/path":{},".":{},"f:prometheus.io/scrape":{},"f:prometheus.io/port":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"haproxy\"}":{"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/run/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{},"k:{\"mountPath\":\"/usr/local/etc/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":9101,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"config-volume\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"shared-socket\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:25:11Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:25:12Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:25:12Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.218.126\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:25:23Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950218880","creationTimestamp":"2023-11-15T21:25:11Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.126/32","cni.projectcalico.org/containerID":"88130dbc8c987f8a689fca41496fb8ff63aa216a063956f7df0bec1a73e1f420","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","prometheus.io/path":"/metrics","checksum/config":"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae","prometheus.io/port":"9101","prometheus.io/scrape":"true","cni.projectcalico.org/podIPs":"172.30.218.126/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.126\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-haproxy-559d8d9d98-","ownerReferences":[{"uid":"47e0d752-bdce-41c3-a2eb-19be1b431977","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-redis-ha-haproxy-559d8d9d98","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha-haproxy","imagePullSecrets":[{"name":"argocd-redis-ha-haproxy-dockercfg-wqk2p"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-sgscw"}],"serviceAccount":"argocd-redis-ha-haproxy","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"lifecycle":{},"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"haproxy","readinessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379},{"protocol":"TCP","name":"metrics-port","containerPort":9101}],"volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-sgscw","readOnly":true}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly/haproxy_init.sh"],"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["sh"],"volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-sgscw","readOnly":true}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.218.126","containerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"haproxy","started":true,"state":{"running":{"startedAt":"2023-11-15T21:25:18Z"}},"containerID":"cri-o://c7856f1f4f5e0f5c3467e471eb16be1c95e349a34bf262f9a73cfee3361f877b","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:25:11Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:25:17Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:25:23Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:25:23Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:25:11Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:25:16Z","containerID":"cri-o://2b4c4c03ac01469331eb667ed65558b672c50b31af08ac0e0c44cae6fbcb535f","finishedAt":"2023-11-15T21:25:17Z"}},"containerID":"cri-o://2b4c4c03ac01469331eb667ed65558b672c50b31af08ac0e0c44cae6fbcb535f","lastState":{}}],"podIPs":[{"ip":"172.30.218.126"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-haproxy-559d8d9d98-q99bg", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha-haproxy"}, {"pod-template-hash": "559d8d9d98"}]}, 
"details":  {"metadata":{"uid":"cc4f6323-24bb-4b60-9a66-e02997e6b012","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/config":{},"f:prometheus.io/path":{},".":{},"f:prometheus.io/scrape":{},"f:prometheus.io/port":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"haproxy\"}":{"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/run/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{},"k:{\"mountPath\":\"/usr/local/etc/haproxy\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},"k:{\"containerPort\":9101,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"config-volume\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"shared-socket\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"PodScheduled\"}":{"f:message":{},"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{},"f:reason":{}}}}},"manager":"kube-scheduler","subresource":"status","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:45Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:45Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.191.227\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:36:57Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231243","creationTimestamp":"2023-11-15T21:36:23Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.191.227/32","cni.projectcalico.org/containerID":"62c9e93bb49980ad0e18c1975da76089b1d3f3fba6ea117b152828aac80103a5","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","prometheus.io/path":"/metrics","checksum/config":"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae","prometheus.io/port":"9101","prometheus.io/scrape":"true","cni.projectcalico.org/podIPs":"172.30.191.227/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.227\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-haproxy-559d8d9d98-","ownerReferences":[{"uid":"47e0d752-bdce-41c3-a2eb-19be1b431977","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-redis-ha-haproxy-559d8d9d98","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.39","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha-haproxy","imagePullSecrets":[{"name":"argocd-redis-ha-haproxy-dockercfg-wqk2p"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-xc847"}],"serviceAccount":"argocd-redis-ha-haproxy","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"lifecycle":{},"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"haproxy","readinessProbe":{"failureThreshold":3,"periodSeconds":3,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8888}},"resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379},{"protocol":"TCP","name":"metrics-port","containerPort":9101}],"volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-xc847","readOnly":true}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly/haproxy_init.sh"],"image":"haproxy:2.6.14-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["sh"],"volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-xc847","readOnly":true}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.191.227","containerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"haproxy","started":true,"state":{"running":{"startedAt":"2023-11-15T21:36:52Z"}},"containerID":"cri-o://698547c0048c99b50a74843873893036e40c37a8de5a77e2429a6dc7a17fc076","lastState":{}}],"hostIP":"10.134.76.39","startTime":"2023-11-15T21:36:44Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:52Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:57Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:57Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:44Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/haproxy:2.6.14-alpine","imageID":"docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:36:51Z","containerID":"cri-o://4d8194cb539499148b1f0b087570237bb9ad58c9e1386d6d90dc5e6a9002bd3b","finishedAt":"2023-11-15T21:36:51Z"}},"containerID":"cri-o://4d8194cb539499148b1f0b087570237bb9ad58c9e1386d6d90dc5e6a9002bd3b","lastState":{}}],"podIPs":[{"ip":"172.30.191.227"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-server-0", "labels": [{"controller-revision-hash": "argocd-redis-ha-server-5f967c88db"}, {"app.kubernetes.io/name": "argocd-redis-ha"}, {"statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-0"}]}, 
"details":  {"metadata":{"uid":"498e2121-8f77-4cce-aec9-1a0c87978e5a","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/init-config":{},".":{}},"f:labels":{"f:statefulset.kubernetes.io/pod-name":{},"f:app.kubernetes.io/name":{},"f:controller-revision-hash":{},".":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}":{}},"f:generateName":{}},"f:spec":{"f:hostname":{},"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"redis\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{"f:preStop":{"f:exec":{"f:command":{},".":{}},".":{}},".":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}},"k:{\"name\":\"split-brain-fix\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"sentinel\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":26379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:automountServiceAccountToken":{},"f:serviceAccountName":{},"f:subdomain":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"health\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{},"k:{\"name\":\"config\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:48:32Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:48:33Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:48:33Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.137.46\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:49:33Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950244966","creationTimestamp":"2023-11-15T21:48:32Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.137.46/32","cni.projectcalico.org/containerID":"37b703ec0494bf2f4981fff408e02ed50464a7c7c2266c4fd1f206f554aa7efd","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","checksum/init-config":"69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75","cni.projectcalico.org/podIPs":"172.30.137.46/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.137.46\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-server-","ownerReferences":[{"uid":"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed","controller":true,"apiVersion":"apps/v1","kind":"StatefulSet","name":"argocd-redis-ha-server","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.38","terminationGracePeriodSeconds":60,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha","imagePullSecrets":[{"name":"argocd-redis-ha-dockercfg-q5k4x"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config"},{"configMap":{"defaultMode":493,"name":"argocd-redis-ha-health-configmap"},"name":"health"},{"emptyDir":{},"name":"data"}],"serviceAccount":"argocd-redis-ha","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"hostname":"argocd-redis-ha-server-0","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"automountServiceAccountToken":false,"subdomain":"argocd-redis-ha","containers":[{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379}],"command":["redis-server"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/redis.conf"],"lifecycle":{"preStop":{"exec":{"command":["/bin/sh","/readonly-config/trigger-failover-if-master.sh"]}}},"name":"redis","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_readiness.sh"]}}},{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"sentinel","containerPort":26379}],"command":["redis-sentinel"],"volumeMounts":[{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/sentinel.conf"],"lifecycle":{},"name":"sentinel","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":3,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}}},{"args":["/readonly-config/fix-split-brain.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"split-brain-fix","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly-config/init.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.137.46","containerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"redis","started":true,"state":{"running":{"startedAt":"2023-11-15T21:48:40Z"}},"containerID":"cri-o://187fad0e4a6b728d6c8bd41456c9fda258a939c5ba0a82526cbd306c3e7d083e","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"sentinel","started":true,"state":{"running":{"startedAt":"2023-11-15T21:48:40Z"}},"containerID":"cri-o://082b79b82a0d27051c8effb95e873e2fd93c152ba10e068858b984e29bffafe0","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"split-brain-fix","started":true,"state":{"running":{"startedAt":"2023-11-15T21:48:41Z"}},"containerID":"cri-o://17994a5abb4900b53ac6f7a2b71860f3f1ceb4b3b0355651745e99bedcd8957a","lastState":{}}],"hostIP":"10.134.76.38","startTime":"2023-11-15T21:48:32Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:48:39Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:49:33Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:49:33Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:48:32Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:48:38Z","containerID":"cri-o://8558d77ffdd066d0ff70d387664d6076b89b5915001b6370bc604b2ba62b9830","finishedAt":"2023-11-15T21:48:38Z"}},"containerID":"cri-o://8558d77ffdd066d0ff70d387664d6076b89b5915001b6370bc604b2ba62b9830","lastState":{}}],"podIPs":[{"ip":"172.30.137.46"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-server-1", "labels": [{"controller-revision-hash": "argocd-redis-ha-server-5f967c88db"}, {"app.kubernetes.io/name": "argocd-redis-ha"}, {"statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-1"}]}, 
"details":  {"metadata":{"uid":"2d211d73-83ba-4e9e-8d32-218cdae1c807","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:26:13Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/init-config":{},".":{}},"f:labels":{"f:statefulset.kubernetes.io/pod-name":{},"f:app.kubernetes.io/name":{},"f:controller-revision-hash":{},".":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}":{}},"f:generateName":{}},"f:spec":{"f:hostname":{},"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"redis\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{"f:preStop":{"f:exec":{"f:command":{},".":{}},".":{}},".":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}},"k:{\"name\":\"split-brain-fix\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"sentinel\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":26379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:automountServiceAccountToken":{},"f:serviceAccountName":{},"f:subdomain":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"health\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{},"k:{\"name\":\"config\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:26:13Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:26:14Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.218.84\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:27:13Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950220672","creationTimestamp":"2023-11-15T21:26:13Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.84/32","cni.projectcalico.org/containerID":"443f290beea2afbc581c0c4eccaa2d851d85dc5fdb7a0574ea91a1a5f36f7c81","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","checksum/init-config":"69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75","cni.projectcalico.org/podIPs":"172.30.218.84/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.84\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-server-","ownerReferences":[{"uid":"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed","controller":true,"apiVersion":"apps/v1","kind":"StatefulSet","name":"argocd-redis-ha-server","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":60,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha","imagePullSecrets":[{"name":"argocd-redis-ha-dockercfg-q5k4x"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config"},{"configMap":{"defaultMode":493,"name":"argocd-redis-ha-health-configmap"},"name":"health"},{"emptyDir":{},"name":"data"}],"serviceAccount":"argocd-redis-ha","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"hostname":"argocd-redis-ha-server-1","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"automountServiceAccountToken":false,"subdomain":"argocd-redis-ha","containers":[{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379}],"command":["redis-server"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/redis.conf"],"lifecycle":{"preStop":{"exec":{"command":["/bin/sh","/readonly-config/trigger-failover-if-master.sh"]}}},"name":"redis","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_readiness.sh"]}}},{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"sentinel","containerPort":26379}],"command":["redis-sentinel"],"volumeMounts":[{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/sentinel.conf"],"lifecycle":{},"name":"sentinel","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":3,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}}},{"args":["/readonly-config/fix-split-brain.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"split-brain-fix","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly-config/init.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.218.84","containerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"redis","started":true,"state":{"running":{"startedAt":"2023-11-15T21:26:20Z"}},"containerID":"cri-o://df4d9a5584b2ecd097fd05bc1540aef4de854603091ebf858422b4c7e24e734f","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"sentinel","started":true,"state":{"running":{"startedAt":"2023-11-15T21:26:20Z"}},"containerID":"cri-o://16f9688f179280d0d796f43888fd5882c941ee5d3ff4012c1a6ac49431c6ff13","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"split-brain-fix","started":true,"state":{"running":{"startedAt":"2023-11-15T21:26:21Z"}},"containerID":"cri-o://efd77134b2cfcbc994c5c45ef3c3bfb35726ec6602b695432eb952be75f94efb","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:26:13Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:26:20Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:27:13Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:27:13Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:26:13Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:26:19Z","containerID":"cri-o://f51081cb534649d7ed0afe7118224f16977d32bee77a98e4d84bd91fbeb94343","finishedAt":"2023-11-15T21:26:19Z"}},"containerID":"cri-o://f51081cb534649d7ed0afe7118224f16977d32bee77a98e4d84bd91fbeb94343","lastState":{}}],"podIPs":[{"ip":"172.30.218.84"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-redis-ha-server-2", "labels": [{"controller-revision-hash": "argocd-redis-ha-server-5f967c88db"}, {"app.kubernetes.io/name": "argocd-redis-ha"}, {"statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-2"}]}, 
"details":  {"metadata":{"uid":"019bb324-2a32-44ef-a01e-7985777025b0","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:checksum/init-config":{},".":{}},"f:labels":{"f:statefulset.kubernetes.io/pod-name":{},"f:app.kubernetes.io/name":{},"f:controller-revision-hash":{},".":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}":{}},"f:generateName":{}},"f:spec":{"f:hostname":{},"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"redis\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{"f:preStop":{"f:exec":{"f:command":{},".":{}},".":{}},".":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":6379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}},"k:{\"name\":\"split-brain-fix\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"sentinel\"}":{"f:livenessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/health\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},"f:exec":{"f:command":{},".":{}},".":{},"f:timeoutSeconds":{}},"f:lifecycle":{},"f:name":{},"f:ports":{"k:{\"containerPort\":26379,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},"f:name":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:command":{},"f:args":{},"f:resources":{}}},"f:initContainers":{".":{},"k:{\"name\":\"config-init\"}":{"f:env":{"k:{\"name\":\"SENTINEL_ID_0\"}":{"f:name":{},"f:value":{},".":{}},".":{},"k:{\"name\":\"SENTINEL_ID_1\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"SENTINEL_ID_2\"}":{"f:name":{},"f:value":{},".":{}}},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/readonly-config\"}":{"f:mountPath":{},"f:readOnly":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/data\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:nodeSelector":{},"f:serviceAccount":{},"f:automountServiceAccountToken":{},"f:serviceAccountName":{},"f:subdomain":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"health\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"data\"}":{"f:name":{},".":{},"f:emptyDir":{}},".":{},"k:{\"name\":\"config\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:37:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:37:28Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:37:28Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.30.191.228\"}":{"f:ip":{},".":{}}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:38:41Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950233077","creationTimestamp":"2023-11-15T21:37:25Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.191.228/32","cni.projectcalico.org/containerID":"9507917f5f12a15bb28179ae7ff41208a6acc28a190f3ae3af45223d41069ce5","seccomp.security.alpha.kubernetes.io/pod":"runtime/default","checksum/init-config":"69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75","cni.projectcalico.org/podIPs":"172.30.191.228/32","openshift.io/scc":"restricted-v2","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.228\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-redis-ha-server-","ownerReferences":[{"uid":"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed","controller":true,"apiVersion":"apps/v1","kind":"StatefulSet","name":"argocd-redis-ha-server","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.39","terminationGracePeriodSeconds":60,"enableServiceLinks":true,"serviceAccountName":"argocd-redis-ha","imagePullSecrets":[{"name":"argocd-redis-ha-dockercfg-q5k4x"}],"volumes":[{"configMap":{"defaultMode":420,"name":"argocd-redis-ha-configmap"},"name":"config"},{"configMap":{"defaultMode":493,"name":"argocd-redis-ha-health-configmap"},"name":"health"},{"emptyDir":{},"name":"data"}],"serviceAccount":"argocd-redis-ha","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000650000,"seccompProfile":{"type":"RuntimeDefault"}},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"hostname":"argocd-redis-ha-server-2","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"automountServiceAccountToken":false,"subdomain":"argocd-redis-ha","containers":[{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"redis","containerPort":6379}],"command":["redis-server"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/redis.conf"],"lifecycle":{"preStop":{"exec":{"command":["/bin/sh","/readonly-config/trigger-failover-if-master.sh"]}}},"name":"redis","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/redis_readiness.sh"]}}},{"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":1,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"ports":[{"protocol":"TCP","name":"sentinel","containerPort":26379}],"command":["redis-sentinel"],"volumeMounts":[{"mountPath":"/data","name":"data"},{"mountPath":"/health","name":"health"}],"args":["/data/conf/sentinel.conf"],"lifecycle":{},"name":"sentinel","readinessProbe":{"failureThreshold":5,"periodSeconds":15,"timeoutSeconds":15,"successThreshold":3,"initialDelaySeconds":30,"exec":{"command":["sh","-c","/health/sentinel_liveness.sh"]}}},{"args":["/readonly-config/fix-split-brain.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"split-brain-fix","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"schedulerName":"default-scheduler","initContainers":[{"args":["/readonly-config/init.sh"],"image":"redis:7.0.11-alpine","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"config-init","resources":{},"securityContext":{"runAsUser":1000650000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"SENTINEL_ID_0","value":"3c0d9c0320bb34888c2df5757c718ce6ca992ce6"},{"name":"SENTINEL_ID_1","value":"40000915ab58c3fa8fd888fb8b24711944e6cbb4"},{"name":"SENTINEL_ID_2","value":"2bbec7894d954a8af3bb54d13eaec53cb024e2ca"}],"command":["sh"],"volumeMounts":[{"mountPath":"/readonly-config","name":"config","readOnly":true},{"mountPath":"/data","name":"data"}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis-ha"}},"topologyKey":"kubernetes.io/hostname"}]}}},"status":{"phase":"Running","podIP":"172.30.191.228","containerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"redis","started":true,"state":{"running":{"startedAt":"2023-11-15T21:37:42Z"}},"containerID":"cri-o://49ed542cce7d0c728c99e48e098f99498db3caea52eebf4d98d2be8d1c735b6b","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"sentinel","started":true,"state":{"running":{"startedAt":"2023-11-15T21:37:43Z"}},"containerID":"cri-o://7d433a4a3e465bdb1db2c8dcdb408821d6faa80bb3182675a98d83a05e4dd02f","lastState":{}},{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"split-brain-fix","started":true,"state":{"running":{"startedAt":"2023-11-15T21:37:43Z"}},"containerID":"cri-o://acce3b0e7c8ce753ee9098978e2a4796fb24ff7d992bdb50e66f22298768488f","lastState":{}}],"hostIP":"10.134.76.39","startTime":"2023-11-15T21:37:25Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:37:41Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:38:41Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:38:41Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:37:25Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"docker.io/library/redis:7.0.11-alpine","imageID":"docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b","restartCount":0,"ready":true,"name":"config-init","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T21:37:40Z","containerID":"cri-o://a3ab7b82a2044fda3e74dbb1526562e033ee972226ffb4bf9d3e276654bdacae","finishedAt":"2023-11-15T21:37:40Z"}},"containerID":"cri-o://a3ab7b82a2044fda3e74dbb1526562e033ee972226ffb4bf9d3e276654bdacae","lastState":{}}],"podIPs":[{"ip":"172.30.191.228"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-repo-server-c8bfd55cc-k8z56", "labels": [{"app.kubernetes.io/name": "argocd-repo-server"}, {"pod-template-hash": "c8bfd55cc"}]}, 
"details":  {"metadata":{"uid":"53a8245e-9fdd-413f-8d65-f7fd8b835f0b","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"3b1d8700-ccde-4b05-99d0-10776a8bb8b6\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"avp\"}":{"f:envFrom":{},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:runAsNonRoot":{},".":{},"f:runAsUser":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"argocd-repo-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_CONFIG_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"HELM_CACHE_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_DATA_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/helm-working-dir\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/keys\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/source\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8081,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8084,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"download-tools\"}":{"f:env":{"k:{\"name\":\"AVP_VERSION\"}":{"f:name":{},"f:value":{},".":{}},".":{}},"f:imagePullPolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/custom-tools\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"copyutil\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},".":{}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:serviceAccount":{},"f:automountServiceAccountToken":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"cmp-plugin\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"plugins\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"var-files\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"custom-tools\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"helm-working-dir\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"gpg-keyring\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"gpg-keys\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T18:55:27Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T18:55:29Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T18:55:29Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.195.120\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T18:56:57Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950055571","creationTimestamp":"2023-11-15T18:55:27Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.195.120/32","cni.projectcalico.org/containerID":"cc74623020b29c0f93ac4879e04abc990ceabbd0902ea327254d87918274dad2","cni.projectcalico.org/podIPs":"172.30.195.120/32","openshift.io/scc":"privileged","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.195.120\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-repo-server-c8bfd55cc-","ownerReferences":[{"uid":"3b1d8700-ccde-4b05-99d0-10776a8bb8b6","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-repo-server-c8bfd55cc","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.4","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-repo-server","imagePullSecrets":[{"name":"argocd-repo-server-dockercfg-rzmwd"}],"volumes":[{"configMap":{"defaultMode":420,"name":"cmp-plugin"},"name":"cmp-plugin"},{"emptyDir":{},"name":"custom-tools"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"defaultMode":420,"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"emptyDir":{},"name":"helm-working-dir"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"emptyDir":{},"name":"var-files"},{"emptyDir":{},"name":"plugins"},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-98svv"}],"serviceAccount":"argocd-repo-server","securityContext":{},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"automountServiceAccountToken":true,"containers":[{"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"avp","resources":{},"securityContext":{"runAsUser":999,"runAsNonRoot":true},"envFrom":[{"secretRef":{"name":"argocd-vault-plugin-credentials"}}],"command":["bash","-c","export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/home/argocd/cmp-server/config/plugin.yaml","name":"cmp-plugin","subPath":"avp.yaml"},{"mountPath":"/usr/local/bin/argocd-vault-plugin","name":"custom-tools","subPath":"argocd-vault-plugin"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-98svv","readOnly":true}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":30,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8084}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"name":"argocd-cm","optional":true,"key":"timeout.reconciliation"}}},{"name":"ARGOCD_REPO_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.format"}}},{"name":"ARGOCD_REPO_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.level"}}},{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.parallelism.limit"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.metrics.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.ciphers"}}},{"name":"ARGOCD_REPO_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.repo.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.default.cache.expiration"}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.max.combined.directory.manifests.size"}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.plugin.tar.exclusions"}}},{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.allow.oob.symlinks"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.tar.size"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.enable.git.submodule"}}},{"name":"HELM_CACHE_HOME","value":"/helm-working-dir"},{"name":"HELM_CONFIG_HOME","value":"/helm-working-dir"},{"name":"HELM_DATA_HOME","value":"/helm-working-dir"}],"ports":[{"protocol":"TCP","containerPort":8081},{"protocol":"TCP","containerPort":8084}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/helm-working-dir","name":"helm-working-dir"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-98svv","readOnly":true}],"args":["/usr/local/bin/argocd-repo-server"],"name":"argocd-repo-server","readinessProbe":{"failureThreshold":3,"periodSeconds":10,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8084}}}],"schedulerName":"default-scheduler","initContainers":[{"args":["curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"],"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"download-tools","resources":{},"env":[{"name":"AVP_VERSION","value":"1.16.1"}],"command":["sh","-c"],"volumeMounts":[{"mountPath":"/custom-tools","name":"custom-tools"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-98svv","readOnly":true}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"copyutil","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["/bin/cp","-n","/usr/local/bin/argocd","/var/run/argocd/argocd-cmp-server"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-98svv","readOnly":true}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}}},"status":{"phase":"Running","podIP":"172.30.195.120","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-repo-server","started":true,"state":{"running":{"startedAt":"2023-11-15T18:56:49Z"}},"containerID":"cri-o://240e809b3d56d0bd47f737f9caca150bcdb903a3ec35633ef2d6aa14c62ac6e9","lastState":{}},{"image":"registry.access.redhat.com/ubi8:latest","imageID":"registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3","restartCount":0,"ready":true,"name":"avp","started":true,"state":{"running":{"startedAt":"2023-11-15T18:56:46Z"}},"containerID":"cri-o://63033899046f338b00ded6565236a09fd4ded620aee1cf5d9d94f45c6feb11a4","lastState":{}}],"hostIP":"10.134.76.4","startTime":"2023-11-15T18:55:27Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T18:56:45Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T18:56:57Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T18:56:57Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T18:55:27Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"registry.access.redhat.com/ubi8:latest","imageID":"registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3","restartCount":0,"ready":true,"name":"download-tools","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T18:56:09Z","containerID":"cri-o://5f65cec8069bc4832532a9ec705fb51aa1aa77de9b3fbda71a48d8385048778c","finishedAt":"2023-11-15T18:56:10Z"}},"containerID":"cri-o://5f65cec8069bc4832532a9ec705fb51aa1aa77de9b3fbda71a48d8385048778c","lastState":{}},{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"copyutil","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T18:56:44Z","containerID":"cri-o://bb786772824eb40d8a4ac15126b813386a3c540c17b005b88d6ba500a1827c4e","finishedAt":"2023-11-15T18:56:45Z"}},"containerID":"cri-o://bb786772824eb40d8a4ac15126b813386a3c540c17b005b88d6ba500a1827c4e","lastState":{}}],"podIPs":[{"ip":"172.30.195.120"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-repo-server-c8bfd55cc-tgnvb", "labels": [{"app.kubernetes.io/name": "argocd-repo-server"}, {"pod-template-hash": "c8bfd55cc"}]}, 
"details":  {"metadata":{"uid":"822ca2e1-e364-41c6-b6dd-d3b12f363f9a","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{"k:{\"uid\":\"3b1d8700-ccde-4b05-99d0-10776a8bb8b6\"}":{},".":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:containers":{"k:{\"name\":\"avp\"}":{"f:envFrom":{},"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}":{"f:mountPath":{},"f:subPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:runAsNonRoot":{},".":{},"f:runAsUser":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"argocd-repo-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_CONFIG_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"HELM_CACHE_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"HELM_DATA_HOME\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/helm-working-dir\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/keys\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/gpg/source\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/reposerver/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8081,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8084,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:initContainers":{"k:{\"name\":\"download-tools\"}":{"f:env":{"k:{\"name\":\"AVP_VERSION\"}":{"f:name":{},"f:value":{},".":{}},".":{}},"f:imagePullPolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/custom-tools\"}":{"f:mountPath":{},"f:name":{},".":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:args":{},"f:name":{},".":{},"f:resources":{}},"k:{\"name\":\"copyutil\"}":{"f:imagePullPolicy":{},"f:volumeMounts":{"k:{\"mountPath\":\"/var/run/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:image":{},"f:command":{},"f:name":{},".":{},"f:resources":{}},".":{}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:serviceAccount":{},"f:automountServiceAccountToken":{},"f:serviceAccountName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:dnsPolicy":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"cmp-plugin\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"plugins\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"var-files\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"custom-tools\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"helm-working-dir\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"gpg-keyring\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"gpg-keys\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T20:47:29Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T20:47:31Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T20:47:31Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:initContainerStatuses":{},"f:podIPs":{"k:{\"ip\":\"172.30.114.7\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T20:51:10Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950181381","creationTimestamp":"2023-11-15T20:47:29Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.114.7/32","cni.projectcalico.org/containerID":"19dad6adffa14e518af61cb53cd3e8b3ac87fbb4d9ea84cb98c5fb193933b0bb","cni.projectcalico.org/podIPs":"172.30.114.7/32","openshift.io/scc":"privileged","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.114.7\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-repo-server-c8bfd55cc-","ownerReferences":[{"uid":"3b1d8700-ccde-4b05-99d0-10776a8bb8b6","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-repo-server-c8bfd55cc","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.16","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-repo-server","imagePullSecrets":[{"name":"argocd-repo-server-dockercfg-rzmwd"}],"volumes":[{"configMap":{"defaultMode":420,"name":"cmp-plugin"},"name":"cmp-plugin"},{"emptyDir":{},"name":"custom-tools"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"defaultMode":420,"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"emptyDir":{},"name":"helm-working-dir"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"emptyDir":{},"name":"var-files"},{"emptyDir":{},"name":"plugins"},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-zn6rp"}],"serviceAccount":"argocd-repo-server","securityContext":{},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"automountServiceAccountToken":true,"containers":[{"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"avp","resources":{},"securityContext":{"runAsUser":999,"runAsNonRoot":true},"envFrom":[{"secretRef":{"name":"argocd-vault-plugin-credentials"}}],"command":["bash","-c","export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/home/argocd/cmp-server/config/plugin.yaml","name":"cmp-plugin","subPath":"avp.yaml"},{"mountPath":"/usr/local/bin/argocd-vault-plugin","name":"custom-tools","subPath":"argocd-vault-plugin"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-zn6rp","readOnly":true}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":30,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8084}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"name":"argocd-cm","optional":true,"key":"timeout.reconciliation"}}},{"name":"ARGOCD_REPO_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.format"}}},{"name":"ARGOCD_REPO_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.log.level"}}},{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.parallelism.limit"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.metrics.listen.address"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.tls.ciphers"}}},{"name":"ARGOCD_REPO_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.repo.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.default.cache.expiration"}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.max.combined.directory.manifests.size"}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.plugin.tar.exclusions"}}},{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.allow.oob.symlinks"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.tar.size"}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.streamed.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.disable.helm.manifest.max.extracted.size"}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"reposerver.enable.git.submodule"}}},{"name":"HELM_CACHE_HOME","value":"/helm-working-dir"},{"name":"HELM_CONFIG_HOME","value":"/helm-working-dir"},{"name":"HELM_DATA_HOME","value":"/helm-working-dir"}],"ports":[{"protocol":"TCP","containerPort":8081},{"protocol":"TCP","containerPort":8084}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/helm-working-dir","name":"helm-working-dir"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-zn6rp","readOnly":true}],"args":["/usr/local/bin/argocd-repo-server"],"name":"argocd-repo-server","readinessProbe":{"failureThreshold":3,"periodSeconds":10,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":5,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8084}}}],"schedulerName":"default-scheduler","initContainers":[{"args":["curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"],"image":"registry.access.redhat.com/ubi8","imagePullPolicy":"Always","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"download-tools","resources":{},"env":[{"name":"AVP_VERSION","value":"1.16.1"}],"command":["sh","-c"],"volumeMounts":[{"mountPath":"/custom-tools","name":"custom-tools"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-zn6rp","readOnly":true}]},{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"IfNotPresent","terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","name":"copyutil","resources":{},"securityContext":{"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"command":["/bin/cp","-n","/usr/local/bin/argocd","/var/run/argocd/argocd-cmp-server"],"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-zn6rp","readOnly":true}]}],"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}}},"status":{"phase":"Running","podIP":"172.30.114.7","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-repo-server","started":true,"state":{"running":{"startedAt":"2023-11-15T20:51:00Z"}},"containerID":"cri-o://7c5b0b20477647f7e72d7956806d2d5a8db0ed0853e3a4f9e991a49be2789f0c","lastState":{}},{"image":"registry.access.redhat.com/ubi8:latest","imageID":"registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3","restartCount":0,"ready":true,"name":"avp","started":true,"state":{"running":{"startedAt":"2023-11-15T20:50:58Z"}},"containerID":"cri-o://f06134c4b2b9727b9851dd6dcefc546175df9cbda14cd1f2a9a283d822abda28","lastState":{}}],"hostIP":"10.134.76.16","startTime":"2023-11-15T20:47:29Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T20:50:56Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T20:51:10Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T20:51:10Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T20:47:29Z","type":"PodScheduled","status":"True"}],"initContainerStatuses":[{"image":"registry.access.redhat.com/ubi8:latest","imageID":"registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3","restartCount":0,"ready":true,"name":"download-tools","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T20:48:49Z","containerID":"cri-o://68114e7b2125c91650d11d05b8764d321c4678b6970108295c39be54b04b96ac","finishedAt":"2023-11-15T20:48:50Z"}},"containerID":"cri-o://68114e7b2125c91650d11d05b8764d321c4678b6970108295c39be54b04b96ac","lastState":{}},{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"copyutil","state":{"terminated":{"reason":"Completed","exitCode":0,"startedAt":"2023-11-15T20:50:55Z","containerID":"cri-o://2dcd9f40e00dfd9875c1a0147efd439aeac397c722dbab1b3a1dee91302e7ff2","finishedAt":"2023-11-15T20:50:55Z"}},"containerID":"cri-o://2dcd9f40e00dfd9875c1a0147efd439aeac397c722dbab1b3a1dee91302e7ff2","lastState":{}}],"podIPs":[{"ip":"172.30.114.7"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-server-6c6f49884d-5ppjs", "labels": [{"app.kubernetes.io/name": "argocd-server"}, {"pod-template-hash": "6c6f49884d"}]}, 
"details":  {"metadata":{"uid":"25a8fb84-8a5d-4e7a-8685-010001eb35dc","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2862f7f0-eb68-4d52-9496-9baca408a8e8\"}":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/server/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/dex/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8083,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"plugins-home\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"argocd-dex-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:47:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:47:31Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:47:31Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:podIPs":{"k:{\"ip\":\"172.30.191.242\"}":{"f:ip":{},".":{}},".":{}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:47:58Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950243308","creationTimestamp":"2023-11-15T21:47:30Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.191.242/32","cni.projectcalico.org/containerID":"410b027a54e3e78a7d7cb9f41e44e1cb25e1b174925072a70b03ac5edb17d37e","cni.projectcalico.org/podIPs":"172.30.191.242/32","openshift.io/scc":"allow-jenkins-agent","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.242\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-server-6c6f49884d-","ownerReferences":[{"uid":"2862f7f0-eb68-4d52-9496-9baca408a8e8","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-server-6c6f49884d","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.39","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-server","imagePullSecrets":[{"name":"argocd-server-dockercfg-7jss9"}],"volumes":[{"emptyDir":{},"name":"plugins-home"},{"emptyDir":{},"name":"tmp"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"name":"argocd-dex-server-tls","secret":{"secretName":"argocd-dex-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-gszk5"}],"serviceAccount":"argocd-server","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000,"supplementalGroups":[1000]},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8080}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_API_SERVER_REPLICAS","value":"2"},{"name":"ARGOCD_SERVER_INSECURE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.insecure"}}},{"name":"ARGOCD_SERVER_BASEHREF","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.basehref"}}},{"name":"ARGOCD_SERVER_ROOTPATH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.rootpath"}}},{"name":"ARGOCD_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.format"}}},{"name":"ARGOCD_SERVER_LOG_LEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.level"}}},{"name":"ARGOCD_SERVER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_SERVER_DEX_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server"}}},{"name":"ARGOCD_SERVER_DISABLE_AUTH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.disable.auth"}}},{"name":"ARGOCD_SERVER_ENABLE_GZIP","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.gzip"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.timeout.seconds"}}},{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.x.frame.options"}}},{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.content.security.policy"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.plaintext"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.strict.tls"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.plaintext"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.strict.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.ciphers"}}},{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.connection.status.cache.expiration"}}},{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.oidc.cache.expiration"}}},{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.login.attempts.expiration"}}},{"name":"ARGOCD_SERVER_STATIC_ASSETS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.staticassets"}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.app.state.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.default.cache.expiration"}}},{"name":"ARGOCD_MAX_COOKIE_NUMBER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.http.cookie.maxnumber"}}},{"name":"ARGOCD_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.listen.address"}}},{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.metrics.listen.address"}}},{"name":"ARGOCD_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}},{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.proxy.extension"}}}],"ports":[{"protocol":"TCP","containerPort":8080},{"protocol":"TCP","containerPort":8083}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/dex/tls","name":"argocd-dex-server-tls"},{"mountPath":"/home/argocd","name":"plugins-home"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-gszk5","readOnly":true}],"args":["/usr/local/bin/argocd-server"],"name":"argocd-server","readinessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8080}}}],"schedulerName":"default-scheduler","affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}}},"status":{"phase":"Running","podIP":"172.30.191.242","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-server","started":true,"state":{"running":{"startedAt":"2023-11-15T21:47:55Z"}},"containerID":"cri-o://707b89b8933c666a6deb0ec869e654ce543434c00265f052a3b9af525dc978f8","lastState":{}}],"hostIP":"10.134.76.39","startTime":"2023-11-15T21:47:30Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:47:30Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:47:58Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:47:58Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:47:30Z","type":"PodScheduled","status":"True"}],"podIPs":[{"ip":"172.30.191.242"}]}} 
} 
, {
"title": {"kind": "Pod", "name": "argocd-server-6c6f49884d-zjfxh", "labels": [{"app.kubernetes.io/name": "argocd-server"}, {"pod-template-hash": "6c6f49884d"}]}, 
"details":  {"metadata":{"uid":"8332bdde-41d8-4fe3-82f8-6f9490c47d4f","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:labels":{"f:app.kubernetes.io/name":{},"f:pod-template-hash":{},".":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2862f7f0-eb68-4d52-9496-9baca408a8e8\"}":{}},"f:generateName":{}},"f:spec":{"f:enableServiceLinks":{},"f:securityContext":{},"f:restartPolicy":{},"f:schedulerName":{},"f:containers":{"k:{\"name\":\"argocd-server\"}":{"f:env":{"k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDISDB\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},".":{},"k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}":{"f:name":{},"f:value":{},".":{}},"k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_COMPRESSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"REDIS_SERVER\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}},"k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}":{"f:name":{},".":{},"f:valueFrom":{"f:configMapKeyRef":{},".":{}}}},"f:livenessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:volumeMounts":{"k:{\"mountPath\":\"/app/config/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/tmp\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/ssh\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/server/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/home/argocd\"}":{"f:mountPath":{},"f:name":{},".":{}},"k:{\"mountPath\":\"/app/config/dex/tls\"}":{"f:mountPath":{},"f:name":{},".":{}},".":{}},"f:securityContext":{"f:allowPrivilegeEscalation":{},"f:capabilities":{"f:drop":{},".":{}},"f:runAsNonRoot":{},"f:seccompProfile":{"f:type":{},".":{}},".":{},"f:readOnlyRootFilesystem":{}},"f:image":{},"f:readinessProbe":{"f:httpGet":{"f:port":{},"f:scheme":{},"f:path":{},".":{}},"f:successThreshold":{},"f:initialDelaySeconds":{},"f:failureThreshold":{},"f:periodSeconds":{},".":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},"k:{\"containerPort\":8083,\"protocol\":\"TCP\"}":{"f:protocol":{},"f:containerPort":{},".":{}},".":{}},".":{},"f:imagePullPolicy":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:args":{},"f:resources":{}}},"f:affinity":{"f:podAntiAffinity":{"f:requiredDuringSchedulingIgnoredDuringExecution":{},"f:preferredDuringSchedulingIgnoredDuringExecution":{},".":{}},".":{}},"f:dnsPolicy":{},"f:nodeSelector":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{"k:{\"name\":\"ssh-known-hosts\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},"k:{\"name\":\"plugins-home\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"tmp\"}":{"f:name":{},".":{},"f:emptyDir":{}},"k:{\"name\":\"argocd-dex-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}},"k:{\"name\":\"tls-certs\"}":{"f:configMap":{"f:defaultMode":{},"f:name":{},".":{}},"f:name":{},".":{}},".":{},"k:{\"name\":\"argocd-repo-server-tls\"}":{"f:secret":{"f:defaultMode":{},"f:optional":{},".":{},"f:items":{},"f:secretName":{}},"f:name":{},".":{}}}}},"manager":"kube-controller-manager","time":"2023-11-15T21:36:23Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIPs":{},"f:cni.projectcalico.org/podIP":{}}}},"manager":"calico","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"manager":"multus","subresource":"status","time":"2023-11-15T21:36:25Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Initialized\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}},"k:{\"type\":\"Ready\"}":{"f:lastTransitionTime":{},"f:lastProbeTime":{},"f:type":{},"f:status":{},".":{}}},"f:podIPs":{".":{},"k:{\"ip\":\"172.30.218.93\"}":{"f:ip":{},".":{}}},"f:startTime":{},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{}}},"manager":"kubelet","subresource":"status","time":"2023-11-15T21:36:54Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"950231185","creationTimestamp":"2023-11-15T21:36:23Z","namespace":"argocd","annotations":{"cni.projectcalico.org/podIP":"172.30.218.93/32","cni.projectcalico.org/containerID":"0133bfa44f6506d657e54f6359900a73983a647e29e7978f35f757fdfaae0b84","cni.projectcalico.org/podIPs":"172.30.218.93/32","openshift.io/scc":"allow-jenkins-agent","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.93\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"generateName":"argocd-server-6c6f49884d-","ownerReferences":[{"uid":"2862f7f0-eb68-4d52-9496-9baca408a8e8","controller":true,"apiVersion":"apps/v1","kind":"ReplicaSet","name":"argocd-server-6c6f49884d","blockOwnerDeletion":true}]},"apiVersion":"v1","spec":{"dnsPolicy":"ClusterFirst","nodeName":"10.134.76.36","terminationGracePeriodSeconds":30,"enableServiceLinks":true,"serviceAccountName":"argocd-server","imagePullSecrets":[{"name":"argocd-server-dockercfg-7jss9"}],"volumes":[{"emptyDir":{},"name":"plugins-home"},{"emptyDir":{},"name":"tmp"},{"configMap":{"defaultMode":420,"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"defaultMode":420,"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"secretName":"argocd-repo-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"tls.key","key":"tls.key"},{"path":"ca.crt","key":"ca.crt"}]}},{"name":"argocd-dex-server-tls","secret":{"secretName":"argocd-dex-server-tls","defaultMode":420,"optional":true,"items":[{"path":"tls.crt","key":"tls.crt"},{"path":"ca.crt","key":"ca.crt"}]}},{"projected":{"sources":[{"serviceAccountToken":{"path":"token","expirationSeconds":3607}},{"configMap":{"name":"kube-root-ca.crt","items":[{"path":"ca.crt","key":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}},{"configMap":{"name":"openshift-service-ca.crt","items":[{"path":"service-ca.crt","key":"service-ca.crt"}]}}],"defaultMode":420},"name":"kube-api-access-9qjnw"}],"serviceAccount":"argocd-server","securityContext":{"seLinuxOptions":{"level":"s0:c26,c0"},"fsGroup":1000,"supplementalGroups":[1000]},"priority":0,"restartPolicy":"Always","preemptionPolicy":"PreemptLowerPriority","nodeSelector":{"demo-purpose":"tools"},"tolerations":[{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","tolerationSeconds":300,"key":"node.kubernetes.io/unreachable","operator":"Exists"}],"containers":[{"image":"quay.io/argoproj/argocd:v2.9.0","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":5,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz?full=true","scheme":"HTTP","port":8080}},"terminationMessagePolicy":"File","terminationMessagePath":"/dev/termination-log","resources":{},"securityContext":{"runAsUser":1000,"capabilities":{"drop":["ALL"]},"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"runAsNonRoot":true,"readOnlyRootFilesystem":true},"env":[{"name":"ARGOCD_API_SERVER_REPLICAS","value":"2"},{"name":"ARGOCD_SERVER_INSECURE","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.insecure"}}},{"name":"ARGOCD_SERVER_BASEHREF","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.basehref"}}},{"name":"ARGOCD_SERVER_ROOTPATH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.rootpath"}}},{"name":"ARGOCD_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.format"}}},{"name":"ARGOCD_SERVER_LOG_LEVEL","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.log.level"}}},{"name":"ARGOCD_SERVER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"repo.server"}}},{"name":"ARGOCD_SERVER_DEX_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server"}}},{"name":"ARGOCD_SERVER_DISABLE_AUTH","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.disable.auth"}}},{"name":"ARGOCD_SERVER_ENABLE_GZIP","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.gzip"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.timeout.seconds"}}},{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.x.frame.options"}}},{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.content.security.policy"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.plaintext"}}},{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.repo.server.strict.tls"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.plaintext"}}},{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.dex.server.strict.tls"}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.minversion"}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.maxversion"}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.tls.ciphers"}}},{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.connection.status.cache.expiration"}}},{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.oidc.cache.expiration"}}},{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.login.attempts.expiration"}}},{"name":"ARGOCD_SERVER_STATIC_ASSETS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.staticassets"}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.app.state.cache.expiration"}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.server"}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.compression"}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"redis.db"}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.default.cache.expiration"}}},{"name":"ARGOCD_MAX_COOKIE_NUMBER","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.http.cookie.maxnumber"}}},{"name":"ARGOCD_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.listen.address"}}},{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.metrics.listen.address"}}},{"name":"ARGOCD_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"otlp.address"}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"application.namespaces"}}},{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION","valueFrom":{"configMapKeyRef":{"name":"argocd-cmd-params-cm","optional":true,"key":"server.enable.proxy.extension"}}}],"ports":[{"protocol":"TCP","containerPort":8080},{"protocol":"TCP","containerPort":8083}],"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/dex/tls","name":"argocd-dex-server-tls"},{"mountPath":"/home/argocd","name":"plugins-home"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-9qjnw","readOnly":true}],"args":["/usr/local/bin/argocd-server"],"name":"argocd-server","readinessProbe":{"failureThreshold":3,"periodSeconds":30,"timeoutSeconds":1,"successThreshold":1,"initialDelaySeconds":3,"httpGet":{"path":"/healthz","scheme":"HTTP","port":8080}}}],"schedulerName":"default-scheduler","affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"}],"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}}},"status":{"phase":"Running","podIP":"172.30.218.93","containerStatuses":[{"image":"quay.io/argoproj/argocd:v2.9.0","imageID":"quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816","restartCount":0,"ready":true,"name":"argocd-server","started":true,"state":{"running":{"startedAt":"2023-11-15T21:36:45Z"}},"containerID":"cri-o://7530efea599e0f6c0313a03e0eb16a0718792c0b6eb79c4d3b375cf16eb0ba82","lastState":{}}],"hostIP":"10.134.76.36","startTime":"2023-11-15T21:36:23Z","qosClass":"BestEffort","conditions":[{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"Initialized","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:54Z","type":"Ready","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:54Z","type":"ContainersReady","status":"True"},{"lastTransitionTime":"2023-11-15T21:36:23Z","type":"PodScheduled","status":"True"}],"podIPs":[{"ip":"172.30.218.93"}]}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-applicationset-controller", "labels": [{"app.kubernetes.io/name": "argocd-applicationset-controller"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "applicationset-controller"}]}, 
"details":  {"metadata":{"uid":"7fbdfbb6-6ca3-4504-a74c-ef5ad7b893a7","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":7000,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":8080,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-05-31T12:28:52Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"718314631","creationTimestamp":"2022-07-12T08:35:10Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"webhook\",\"port\":7000,\"protocol\":\"TCP\",\"targetPort\":\"webhook\"},{\"name\":\"metrics\",\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":\"metrics\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.75.54"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-applicationset-controller"},"ports":[{"protocol":"TCP","port":7000,"name":"webhook","targetPort":"webhook"},{"protocol":"TCP","port":8080,"name":"metrics","targetPort":"metrics"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.75.54"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-dex-server", "labels": [{"app.kubernetes.io/name": "argocd-dex-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "dex-server"}]}, 
"details":  {"metadata":{"uid":"a07e0ca1-0180-4d4f-92ee-40edb200e087","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":5556,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":5558,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":5557,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:28Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:ports":{"k:{\"port\":5556,\"protocol\":\"TCP\"}":{"f:appProtocol":{}}}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:06Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"940154016","creationTimestamp":"2021-05-27T11:16:28Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"appProtocol\":\"TCP\",\"name\":\"http\",\"port\":5556,\"protocol\":\"TCP\",\"targetPort\":5556},{\"name\":\"grpc\",\"port\":5557,\"protocol\":\"TCP\",\"targetPort\":5557},{\"name\":\"metrics\",\"port\":5558,\"protocol\":\"TCP\",\"targetPort\":5558}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.144.109"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-dex-server"},"ports":[{"protocol":"TCP","port":5556,"appProtocol":"TCP","name":"http","targetPort":5556},{"protocol":"TCP","port":5557,"name":"grpc","targetPort":5557},{"protocol":"TCP","port":5558,"name":"metrics","targetPort":5558}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.144.109"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-metrics", "labels": [{"app.kubernetes.io/name": "argocd-metrics"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "metrics"}]}, 
"details":  {"metadata":{"uid":"4da1961b-e01a-42eb-926a-4dedfe426ec9","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{"f:app.kubernetes.io/name":{},".":{}},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":8082,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:29Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55748","creationTimestamp":"2021-05-27T11:16:29Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/name\":\"argocd-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":8082,\"protocol\":\"TCP\",\"targetPort\":8082}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.9.208"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-application-controller"},"ports":[{"protocol":"TCP","port":8082,"name":"metrics","targetPort":8082}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.9.208"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-notifications-controller-metrics", "labels": [{"app.kubernetes.io/name": "argocd-notifications-controller-metrics"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "notifications-controller"}]}, 
"details":  {"metadata":{"uid":"cb4753db-99cf-4840-bf20-1e79dda970b9","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{},"f:labels":{"f:app.kubernetes.io/name":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":9001,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl","time":"2021-05-27T11:18:30Z","operation":"Update","fieldsType":"FieldsV1"},{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{}}}},"manager":"kubectl-client-side-apply","time":"2023-05-31T12:28:52Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"718314634","creationTimestamp":"2021-05-27T11:18:30Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":9001,\"protocol\":\"TCP\",\"targetPort\":9001}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.236.143"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-notifications-controller"},"ports":[{"protocol":"TCP","port":9001,"name":"metrics","targetPort":9001}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.236.143"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis", "labels": [{"app.kubernetes.io/name": "argocd-redis"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"fec115e1-1717-4cb7-91c1-e146d67498d8","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-01-05T12:44:58Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"518322859","creationTimestamp":"2023-01-05T12:44:58Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.106.43"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis"},"ports":[{"protocol":"TCP","port":6379,"name":"tcp-redis","targetPort":6379}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.106.43"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis-ha", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"12692c11-1bd8-40cf-b412-f4dd530e13e6","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:clusterIP":{},"f:ports":{"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":26379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-02-06T16:31:39Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"560705528","creationTimestamp":"2023-02-06T16:31:39Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha\",\"namespace\":\"argocd\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"},\"type\":\"ClusterIP\"}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["None"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis-ha"},"ports":[{"protocol":"TCP","port":6379,"name":"tcp-server","targetPort":"redis"},{"protocol":"TCP","port":26379,"name":"tcp-sentinel","targetPort":"sentinel"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"None"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis-ha-announce-0", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"c325d6d2-46dc-4252-9534-286cc85cebd8","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},"f:service.alpha.kubernetes.io/tolerate-unready-endpoints":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:publishNotReadyAddresses":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":26379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-02-06T16:31:39Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"560705535","creationTimestamp":"2023-02-06T16:31:39Z","namespace":"argocd","annotations":{"service.alpha.kubernetes.io/tolerate-unready-endpoints":"true","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-0\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-0\"},\"type\":\"ClusterIP\"}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.194.115"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis-ha","statefulset.kubernetes.io/pod-name":"argocd-redis-ha-server-0"},"publishNotReadyAddresses":true,"ports":[{"protocol":"TCP","port":6379,"name":"tcp-server","targetPort":"redis"},{"protocol":"TCP","port":26379,"name":"tcp-sentinel","targetPort":"sentinel"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.194.115"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis-ha-announce-1", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"e7a14c8c-9c6e-44f9-b315-2bde10549d17","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},"f:service.alpha.kubernetes.io/tolerate-unready-endpoints":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:publishNotReadyAddresses":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":26379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-02-06T16:31:39Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"560705541","creationTimestamp":"2023-02-06T16:31:39Z","namespace":"argocd","annotations":{"service.alpha.kubernetes.io/tolerate-unready-endpoints":"true","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-1\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-1\"},\"type\":\"ClusterIP\"}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.30.202"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis-ha","statefulset.kubernetes.io/pod-name":"argocd-redis-ha-server-1"},"publishNotReadyAddresses":true,"ports":[{"protocol":"TCP","port":6379,"name":"tcp-server","targetPort":"redis"},{"protocol":"TCP","port":26379,"name":"tcp-sentinel","targetPort":"sentinel"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.30.202"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis-ha-announce-2", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"a1394cf3-f704-4a29-a7b1-52330807c2b6","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},"f:service.alpha.kubernetes.io/tolerate-unready-endpoints":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:publishNotReadyAddresses":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":26379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-02-06T16:31:39Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"560705545","creationTimestamp":"2023-02-06T16:31:39Z","namespace":"argocd","annotations":{"service.alpha.kubernetes.io/tolerate-unready-endpoints":"true","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-2\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-2\"},\"type\":\"ClusterIP\"}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.72.56"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis-ha","statefulset.kubernetes.io/pod-name":"argocd-redis-ha-server-2"},"publishNotReadyAddresses":true,"ports":[{"protocol":"TCP","port":6379,"name":"tcp-server","targetPort":"redis"},{"protocol":"TCP","port":26379,"name":"tcp-sentinel","targetPort":"sentinel"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.72.56"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-redis-ha-haproxy", "labels": [{"app.kubernetes.io/name": "argocd-redis-ha-haproxy"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "redis"}]}, 
"details":  {"metadata":{"uid":"600ee387-9d64-4022-b6c8-8be04d5a4cf0","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:type":{},"f:selector":{},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":9101,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":6379,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"kubectl-client-side-apply","time":"2023-11-08T14:09:07Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"940154027","creationTimestamp":"2023-02-06T16:31:39Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-haproxy\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-haproxy\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"http-exporter-port\",\"port\":9101,\"protocol\":\"TCP\",\"targetPort\":\"metrics-port\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"},\"type\":\"ClusterIP\"}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.254.234"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-redis-ha-haproxy"},"ports":[{"protocol":"TCP","port":6379,"name":"tcp-haproxy","targetPort":"redis"},{"protocol":"TCP","port":9101,"name":"http-exporter-port","targetPort":"metrics-port"}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.254.234"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-repo-server", "labels": [{"app.kubernetes.io/name": "argocd-repo-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "repo-server"}]}, 
"details":  {"metadata":{"uid":"cb467de1-f716-49d8-9521-10719bc4cf42","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{"f:app.kubernetes.io/name":{},".":{}},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":8084,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":8081,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:31Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55789","creationTimestamp":"2021-05-27T11:16:31Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"server\",\"port\":8081,\"protocol\":\"TCP\",\"targetPort\":8081},{\"name\":\"metrics\",\"port\":8084,\"protocol\":\"TCP\",\"targetPort\":8084}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.72.150"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-repo-server"},"ports":[{"protocol":"TCP","port":8081,"name":"server","targetPort":8081},{"protocol":"TCP","port":8084,"name":"metrics","targetPort":8084}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.72.150"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-server", "labels": [{"app.kubernetes.io/name": "argocd-server"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "server"}]}, 
"details":  {"metadata":{"uid":"da7bedf3-2d27-4a28-8d20-79b68b0cad25","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{"f:app.kubernetes.io/name":{},".":{}},"f:sessionAffinity":{},"f:ports":{"k:{\"port\":443,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},"k:{\"port\":80,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}},".":{}}}},"manager":"oc","time":"2021-05-27T11:16:31Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55794","creationTimestamp":"2021-05-27T11:16:31Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-server\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.180.176"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-server"},"ports":[{"protocol":"TCP","port":80,"name":"http","targetPort":8080},{"protocol":"TCP","port":443,"name":"https","targetPort":8080}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.180.176"},"status":{"loadBalancer":{}}} 
} 
, {
"title": {"kind": "Service", "name": "argocd-server-metrics", "labels": [{"app.kubernetes.io/name": "argocd-server-metrics"}, {"app.kubernetes.io/part-of": "argocd"}, {"app.kubernetes.io/component": "server"}]}, 
"details":  {"metadata":{"uid":"7b2a4096-a25f-469f-9d42-b6fa7af03cec","managedFields":[{"apiVersion":"v1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{},".":{}},"f:labels":{"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/part-of":{},".":{}}},"f:spec":{"f:type":{},"f:selector":{"f:app.kubernetes.io/name":{},".":{}},"f:sessionAffinity":{},"f:ports":{".":{},"k:{\"port\":8083,\"protocol\":\"TCP\"}":{"f:port":{},"f:targetPort":{},"f:protocol":{},"f:name":{},".":{}}}}},"manager":"oc","time":"2021-05-27T11:16:32Z","operation":"Update","fieldsType":"FieldsV1"}],"resourceVersion":"55802","creationTimestamp":"2021-05-27T11:16:32Z","namespace":"argocd","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":8083,\"protocol\":\"TCP\",\"targetPort\":8083}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-server\"}}}\n"}},"apiVersion":"v1","spec":{"clusterIPs":["172.21.160.36"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","sessionAffinity":"None","selector":{"app.kubernetes.io/name":"argocd-server"},"ports":[{"protocol":"TCP","port":8083,"name":"metrics","targetPort":8083}],"type":"ClusterIP","internalTrafficPolicy":"Cluster","clusterIP":"172.21.160.36"},"status":{"loadBalancer":{}}} 
} 
]