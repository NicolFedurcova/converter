{
  "masterUrl": null,
  "apiVersion": null,
  "namespace": null,
  "rootPaths": null,
  "apiGroups": null,
  "configuration": null,
  "componentStatuses": null,
  "bindings": null,
  "endpoints": [
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:36:42Z"
        },
        "creationTimestamp": "2022-07-12T08:35:11Z",
        "labels": {
          "app.kubernetes.io/component": "applicationset-controller",
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:42Z"
          }
        ],
        "name": "argocd-applicationset-controller",
        "namespace": "argocd",
        "resourceVersion": "950230921",
        "uid": "8bcb87c8-991f-457a-b796-65ff89f95e8b"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.218.99",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-applicationset-controller-b57cbdbd7-f59bz",
                "namespace": "argocd",
                "uid": "7a9c6041-e275-42ac-98ca-82add8b2a5b5"
              }
            }
          ],
          "ports": [
            { "name": "metrics", "port": 8080, "protocol": "TCP" },
            { "name": "webhook", "port": 7000, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:37:27Z"
        },
        "creationTimestamp": "2021-05-27T11:16:28Z",
        "labels": {
          "app.kubernetes.io/component": "dex-server",
          "app.kubernetes.io/name": "argocd-dex-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:37:27Z"
          }
        ],
        "name": "argocd-dex-server",
        "namespace": "argocd",
        "resourceVersion": "950231926",
        "uid": "86d18670-cd1f-422d-8fa4-8dec1a634c26"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.218.121",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-dex-server-5c9848874c-8l5kv",
                "namespace": "argocd",
                "uid": "c80e5092-fef1-41bd-9cfc-fdd75c27e2ec"
              }
            }
          ],
          "ports": [
            { "name": "metrics", "port": 5558, "protocol": "TCP" },
            { "name": "grpc", "port": 5557, "protocol": "TCP" },
            {
              "appProtocol": "TCP",
              "name": "http",
              "port": 5556,
              "protocol": "TCP"
            }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:37:04Z"
        },
        "creationTimestamp": "2021-05-27T11:16:29Z",
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/name": "argocd-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:37:04Z"
          }
        ],
        "name": "argocd-metrics",
        "namespace": "argocd",
        "resourceVersion": "950231376",
        "uid": "3c0e260c-f236-499c-ace1-76a4bdd01b48"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.218.100",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-application-controller-0",
                "namespace": "argocd",
                "uid": "63afd637-9a30-426f-bd97-9e1ae947fe87"
              }
            }
          ],
          "ports": [{ "name": "metrics", "port": 8082, "protocol": "TCP" }]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:36:45Z"
        },
        "creationTimestamp": "2021-05-27T11:18:30Z",
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/name": "argocd-notifications-controller-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:45Z"
          }
        ],
        "name": "argocd-notifications-controller-metrics",
        "namespace": "argocd",
        "resourceVersion": "950231018",
        "uid": "0567362f-d309-475b-b0fa-3b23d101a467"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.218.112",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-notifications-controller-77657944f8-24fmr",
                "namespace": "argocd",
                "uid": "ac76b6ab-d519-475b-bed6-1eaccd533923"
              }
            }
          ],
          "ports": [{ "name": "metrics", "port": 9001, "protocol": "TCP" }]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "creationTimestamp": "2023-01-05T12:44:58Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-06-26T12:29:54Z"
          }
        ],
        "name": "argocd-redis",
        "namespace": "argocd",
        "resourceVersion": "770364797",
        "uid": "9302be44-f4f2-4755-b02c-9aa9521000ac"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:49:33Z"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd",
          "service.kubernetes.io/headless": ""
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:service.kubernetes.io/headless": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:49:33Z"
          }
        ],
        "name": "argocd-redis-ha",
        "namespace": "argocd",
        "resourceVersion": "950244968",
        "uid": "e63cff07-8109-4ab9-843b-74ffab2e7498"
      },
      "subsets": [
        {
          "addresses": [
            {
              "hostname": "argocd-redis-ha-server-0",
              "ip": "172.30.137.46",
              "nodeName": "10.134.76.38",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-0",
                "namespace": "argocd",
                "uid": "498e2121-8f77-4cce-aec9-1a0c87978e5a"
              }
            },
            {
              "hostname": "argocd-redis-ha-server-2",
              "ip": "172.30.191.228",
              "nodeName": "10.134.76.39",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-2",
                "namespace": "argocd",
                "uid": "019bb324-2a32-44ef-a01e-7985777025b0"
              }
            },
            {
              "hostname": "argocd-redis-ha-server-1",
              "ip": "172.30.218.84",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-1",
                "namespace": "argocd",
                "uid": "2d211d73-83ba-4e9e-8d32-218cdae1c807"
              }
            }
          ],
          "ports": [
            { "name": "tcp-sentinel", "port": 26379, "protocol": "TCP" },
            { "name": "tcp-server", "port": 6379, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:48:32Z"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:48:39Z"
          }
        ],
        "name": "argocd-redis-ha-announce-0",
        "namespace": "argocd",
        "resourceVersion": "950244116",
        "uid": "54beac30-4d39-48fc-a9ec-9bc7e9ca59df"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.137.46",
              "nodeName": "10.134.76.38",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-0",
                "namespace": "argocd",
                "uid": "498e2121-8f77-4cce-aec9-1a0c87978e5a"
              }
            }
          ],
          "ports": [
            { "name": "tcp-sentinel", "port": 26379, "protocol": "TCP" },
            { "name": "tcp-server", "port": 6379, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:26:13Z"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:26:20Z"
          }
        ],
        "name": "argocd-redis-ha-announce-1",
        "namespace": "argocd",
        "resourceVersion": "950219831",
        "uid": "5574af1a-4df0-4840-97db-07688f536480"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.218.84",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-1",
                "namespace": "argocd",
                "uid": "2d211d73-83ba-4e9e-8d32-218cdae1c807"
              }
            }
          ],
          "ports": [
            { "name": "tcp-sentinel", "port": 26379, "protocol": "TCP" },
            { "name": "tcp-server", "port": 6379, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:37:25Z"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:37:40Z"
          }
        ],
        "name": "argocd-redis-ha-announce-2",
        "namespace": "argocd",
        "resourceVersion": "950232122",
        "uid": "e8a70033-15dd-4534-a3f9-6aa43b36cf18"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.191.228",
              "nodeName": "10.134.76.39",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-server-2",
                "namespace": "argocd",
                "uid": "019bb324-2a32-44ef-a01e-7985777025b0"
              }
            }
          ],
          "ports": [
            { "name": "tcp-sentinel", "port": 26379, "protocol": "TCP" },
            { "name": "tcp-server", "port": 6379, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:48:27Z"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:48:28Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy",
        "namespace": "argocd",
        "resourceVersion": "950243891",
        "uid": "5d9a1041-d2db-407a-84e9-00cd0f1551e6"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.137.39",
              "nodeName": "10.134.76.38",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-haproxy-559d8d9d98-b729m",
                "namespace": "argocd",
                "uid": "4f308dd9-3241-42bd-b47c-051e4ebef4ad"
              }
            },
            {
              "ip": "172.30.191.227",
              "nodeName": "10.134.76.39",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-haproxy-559d8d9d98-q99bg",
                "namespace": "argocd",
                "uid": "cc4f6323-24bb-4b60-9a66-e02997e6b012"
              }
            },
            {
              "ip": "172.30.218.126",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-redis-ha-haproxy-559d8d9d98-hck87",
                "namespace": "argocd",
                "uid": "4651466c-d12a-4eb4-8946-fa4d348810be"
              }
            }
          ],
          "ports": [
            { "name": "tcp-haproxy", "port": 6379, "protocol": "TCP" },
            { "name": "http-exporter-port", "port": 9101, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T20:51:10Z"
        },
        "creationTimestamp": "2021-05-27T11:16:31Z",
        "labels": {
          "app.kubernetes.io/component": "repo-server",
          "app.kubernetes.io/name": "argocd-repo-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T20:51:10Z"
          }
        ],
        "name": "argocd-repo-server",
        "namespace": "argocd",
        "resourceVersion": "950181383",
        "uid": "713761de-a84b-4f00-8bd3-6eae160bc5f8"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.114.7",
              "nodeName": "10.134.76.16",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-repo-server-c8bfd55cc-tgnvb",
                "namespace": "argocd",
                "uid": "822ca2e1-e364-41c6-b6dd-d3b12f363f9a"
              }
            },
            {
              "ip": "172.30.195.120",
              "nodeName": "10.134.76.4",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-repo-server-c8bfd55cc-k8z56",
                "namespace": "argocd",
                "uid": "53a8245e-9fdd-413f-8d65-f7fd8b835f0b"
              }
            }
          ],
          "ports": [
            { "name": "metrics", "port": 8084, "protocol": "TCP" },
            { "name": "server", "port": 8081, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:47:58Z"
        },
        "creationTimestamp": "2021-05-27T11:16:31Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:47:58Z"
          }
        ],
        "name": "argocd-server",
        "namespace": "argocd",
        "resourceVersion": "950243310",
        "uid": "95b531c1-1a89-47fa-8524-e2f595735660"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.191.242",
              "nodeName": "10.134.76.39",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-server-6c6f49884d-5ppjs",
                "namespace": "argocd",
                "uid": "25a8fb84-8a5d-4e7a-8685-010001eb35dc"
              }
            },
            {
              "ip": "172.30.218.93",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-server-6c6f49884d-zjfxh",
                "namespace": "argocd",
                "uid": "8332bdde-41d8-4fe3-82f8-6f9490c47d4f"
              }
            }
          ],
          "ports": [
            { "name": "https", "port": 8080, "protocol": "TCP" },
            { "name": "http", "port": 8080, "protocol": "TCP" }
          ]
        }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "Endpoints",
      "metadata": {
        "annotations": {
          "endpoints.kubernetes.io/last-change-trigger-time": "2023-11-15T21:47:58Z"
        },
        "creationTimestamp": "2021-05-27T11:16:32Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:subsets": {}
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:47:58Z"
          }
        ],
        "name": "argocd-server-metrics",
        "namespace": "argocd",
        "resourceVersion": "950243309",
        "uid": "73876cc1-ad67-479a-bd23-5d87e37e7377"
      },
      "subsets": [
        {
          "addresses": [
            {
              "ip": "172.30.191.242",
              "nodeName": "10.134.76.39",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-server-6c6f49884d-5ppjs",
                "namespace": "argocd",
                "uid": "25a8fb84-8a5d-4e7a-8685-010001eb35dc"
              }
            },
            {
              "ip": "172.30.218.93",
              "nodeName": "10.134.76.36",
              "targetRef": {
                "kind": "Pod",
                "name": "argocd-server-6c6f49884d-zjfxh",
                "namespace": "argocd",
                "uid": "8332bdde-41d8-4fe3-82f8-6f9490c47d4f"
              }
            }
          ],
          "ports": [{ "name": "metrics", "port": 8083, "protocol": "TCP" }]
        }
      ]
    }
  ],
  "namespaces": null,
  "nodes": null,
  "persistentVolumes": null,
  "persistentVolumeClaims": [],
  "pods": [
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "f42a7adb3c7e70d23cabffe502ea2df1a01b84d63ee4c4171b4719b5d7e012ef",
          "cni.projectcalico.org/podIP": "172.30.218.100/32",
          "cni.projectcalico.org/podIPs": "172.30.218.100/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.100\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "allow-jenkins-agent"
        },
        "creationTimestamp": "2023-11-15T21:36:34Z",
        "generateName": "argocd-application-controller-",
        "labels": {
          "app.kubernetes.io/name": "argocd-application-controller",
          "controller-revision-hash": "argocd-application-controller-6d6d7c8fc9",
          "statefulset.kubernetes.io/pod-name": "argocd-application-controller-0"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"e1d30156-033c-4b1f-8d6d-e46c01cfdbcf\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"argocd-application-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_CONTROLLER_REPLICAS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_CONTROLLER_SHARDING_ALGORITHM\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_HARD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8082,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/controller/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    },
                    "f:workingDir": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-home\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:34Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:39Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:40Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.100\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:04Z"
          }
        ],
        "name": "argocd-application-controller-0",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-application-controller",
            "uid": "e1d30156-033c-4b1f-8d6d-e46c01cfdbcf"
          }
        ],
        "resourceVersion": "950231373",
        "uid": "63afd637-9a30-426f-bd97-9e1ae947fe87"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-application-controller"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                },
                "weight": 100
              },
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                },
                "weight": 5
              }
            ]
          }
        },
        "containers": [
          {
            "args": ["/usr/local/bin/argocd-application-controller"],
            "env": [
              { "name": "ARGOCD_CONTROLLER_REPLICAS", "value": "1" },
              {
                "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "timeout.reconciliation",
                    "name": "argocd-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_HARD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "timeout.hard.reconciliation",
                    "name": "argocd-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "repo.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.repo.server.timeout.seconds",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.status.processors",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.operation.processors",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.metrics.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.self.heal.timeout.seconds",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.repo.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.repo.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.resource.health.persist",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.app.state.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.compression",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.db",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.default.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "otlp.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "application.namespaces",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_CONTROLLER_SHARDING_ALGORITHM",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.sharding.algorithm",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "controller.kubectl.parallelism.limit",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "name": "argocd-application-controller",
            "ports": [{ "containerPort": 8082, "protocol": "TCP" }],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8082, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/app/config/controller/tls",
                "name": "argocd-repo-server-tls"
              },
              { "mountPath": "/home/argocd", "name": "argocd-home" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-wdmns",
                "readOnly": true
              }
            ],
            "workingDir": "/home/argocd"
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "hostname": "argocd-application-controller-0",
        "imagePullSecrets": [
          { "name": "argocd-application-controller-dockercfg-2k2mx" }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "supplementalGroups": [1000]
        },
        "serviceAccount": "argocd-application-controller",
        "serviceAccountName": "argocd-application-controller",
        "subdomain": "argocd-application-controller",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          { "emptyDir": {}, "name": "argocd-home" },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          {
            "name": "kube-api-access-wdmns",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:34Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:04Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:04Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:34Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://c3fa3f9de02491b762a353c01a400db8aca514242e1d7ccce49c54a12d7da6c1",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-application-controller",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:36:53Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "phase": "Running",
        "podIP": "172.30.218.100",
        "podIPs": [{ "ip": "172.30.218.100" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:34Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "df991302f6434ca57501b88a457b66a18bd3de1ebab0f5c104aa06f666274e16",
          "cni.projectcalico.org/podIP": "172.30.218.99/32",
          "cni.projectcalico.org/podIPs": "172.30.218.99/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.99\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:36:23Z",
        "generateName": "argocd-applicationset-controller-b57cbdbd7-",
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "b57cbdbd7"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4a3efddc-a9ba-4ab5-b189-3ad8a7e984e5\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"argocd-applicationset-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"gpg-keyring\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keys\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:24Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.99\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:42Z"
          }
        ],
        "name": "argocd-applicationset-controller-b57cbdbd7-f59bz",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller-b57cbdbd7",
            "uid": "4a3efddc-a9ba-4ab5-b189-3ad8a7e984e5"
          }
        ],
        "resourceVersion": "950230919",
        "uid": "7a9c6041-e275-42ac-98ca-82add8b2a5b5"
      },
      "spec": {
        "containers": [
          {
            "args": ["/usr/local/bin/argocd-applicationset-controller"],
            "env": [
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.global.preserved.annotations",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.global.preserved.labels",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.enable.leader.election",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "repo.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.policy",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.enable.policy.override",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.debug",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.dryrun",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_MODULES_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.enable.git.submodule",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.enable.progressive.syncs",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.enable.new.git.file.globbing",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.repo.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.repo.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.repo.server.timeout.seconds",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.concurrent.reconciliations.max",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.namespaces",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.scm.root.ca.path",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "applicationsetcontroller.allowed.scm.providers",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "name": "argocd-applicationset-controller",
            "ports": [
              { "containerPort": 7000, "name": "webhook", "protocol": "TCP" },
              { "containerPort": 8080, "name": "metrics", "protocol": "TCP" }
            ],
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
              { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
              { "mountPath": "/tmp", "name": "tmp" },
              {
                "mountPath": "/app/config/reposerver/tls",
                "name": "argocd-repo-server-tls"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-mqpxv",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [
          { "name": "argocd-applicationset-controller-dockercfg-6t685" }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-applicationset-controller",
        "serviceAccountName": "argocd-applicationset-controller",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-ssh-known-hosts-cm"
            },
            "name": "ssh-known-hosts"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-gpg-keys-cm" },
            "name": "gpg-keys"
          },
          { "emptyDir": {}, "name": "gpg-keyring" },
          { "emptyDir": {}, "name": "tmp" },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          {
            "name": "kube-api-access-mqpxv",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:42Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:42Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://e81b104df111ccf72c83bac83b678370bbc43e4a387aec7570e9f832c6a8efd9",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-applicationset-controller",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:36:42Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "phase": "Running",
        "podIP": "172.30.218.99",
        "podIPs": [{ "ip": "172.30.218.99" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:23Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "b48250bdb32e67f93ccb757b16440a71bbfe35ab8a3d8d8f0993e52df52bd8d6",
          "cni.projectcalico.org/podIP": "172.30.218.121/32",
          "cni.projectcalico.org/podIPs": "172.30.218.121/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.121\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:36:23Z",
        "generateName": "argocd-dex-server-5c9848874c-",
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "5c9848874c"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"b516f9e9-5223-4947-bc9a-c703b51de2e6\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"dex\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/shared\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"copyutil\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/shared\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-dex-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"dexconfig\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"static-files\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.121\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:27Z"
          }
        ],
        "name": "argocd-dex-server-5c9848874c-8l5kv",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server-5c9848874c",
            "uid": "b516f9e9-5223-4947-bc9a-c703b51de2e6"
          }
        ],
        "resourceVersion": "950231923",
        "uid": "c80e5092-fef1-41bd-9cfc-fdd75c27e2ec"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                },
                "weight": 5
              }
            ]
          }
        },
        "containers": [
          {
            "command": ["/shared/argocd-dex", "rundex"],
            "env": [
              {
                "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "dexserver.disable.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "ghcr.io/dexidp/dex:v2.37.0",
            "imagePullPolicy": "Always",
            "name": "dex",
            "ports": [
              { "containerPort": 5556, "protocol": "TCP" },
              { "containerPort": 5557, "protocol": "TCP" },
              { "containerPort": 5558, "protocol": "TCP" }
            ],
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/shared", "name": "static-files" },
              { "mountPath": "/tmp", "name": "dexconfig" },
              { "mountPath": "/tls", "name": "argocd-dex-server-tls" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-slmjp",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [{ "name": "argocd-dex-server-dockercfg-hvxr5" }],
        "initContainers": [
          {
            "command": [
              "/bin/cp",
              "-n",
              "/usr/local/bin/argocd",
              "/shared/argocd-dex"
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "name": "copyutil",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/shared", "name": "static-files" },
              { "mountPath": "/tmp", "name": "dexconfig" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-slmjp",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-dex-server",
        "serviceAccountName": "argocd-dex-server",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          { "emptyDir": {}, "name": "static-files" },
          { "emptyDir": {}, "name": "dexconfig" },
          {
            "name": "argocd-dex-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-dex-server-tls"
            }
          },
          {
            "name": "kube-api-access-slmjp",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:54Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:27Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:27Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://743c4512b0d404717610a9c2d066d933569d41b62438706d13b97aa59bb3e7c2",
            "image": "ghcr.io/dexidp/dex:v2.37.0",
            "imageID": "ghcr.io/dexidp/dex@sha256:79b85ec1ff1d41a53a234418054892d863825b85dea9c7fc47dcd3ffe9eefa1e",
            "lastState": {},
            "name": "dex",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:37:27Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://165126ee6d2a154db4fd054b015f1a600de457353e87ab33506e796a4d92c7c9",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "copyutil",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://165126ee6d2a154db4fd054b015f1a600de457353e87ab33506e796a4d92c7c9",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:36:52Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:36:51Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.218.121",
        "podIPs": [{ "ip": "172.30.218.121" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:23Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "8b137502fcecca69929fabc2eba1464fd13126dc2f0b9aa25a73497c41ed920d",
          "cni.projectcalico.org/podIP": "172.30.218.112/32",
          "cni.projectcalico.org/podIPs": "172.30.218.112/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.112\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:36:23Z",
        "generateName": "argocd-notifications-controller-77657944f8-",
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "77657944f8"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"1b26ccdc-3ea3-4e46-a1bb-cf6db3447c04\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"argocd-notifications-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:tcpSocket": { ".": {}, "f:port": {} },
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    },
                    "f:workingDir": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": { ".": {}, "f:type": {} }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.112\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:45Z"
          }
        ],
        "name": "argocd-notifications-controller-77657944f8-24fmr",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller-77657944f8",
            "uid": "1b26ccdc-3ea3-4e46-a1bb-cf6db3447c04"
          }
        ],
        "resourceVersion": "950231017",
        "uid": "ac76b6ab-d519-475b-bed6-1eaccd533923"
      },
      "spec": {
        "containers": [
          {
            "args": ["/usr/local/bin/argocd-notifications"],
            "env": [
              {
                "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "notificationscontroller.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "notificationscontroller.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "application.namespaces",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "livenessProbe": {
              "failureThreshold": 3,
              "periodSeconds": 10,
              "successThreshold": 1,
              "tcpSocket": { "port": 9001 },
              "timeoutSeconds": 1
            },
            "name": "argocd-notifications-controller",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsUser": 1000650000
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              {
                "mountPath": "/app/config/reposerver/tls",
                "name": "argocd-repo-server-tls"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-6n9z7",
                "readOnly": true
              }
            ],
            "workingDir": "/app"
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [
          { "name": "argocd-notifications-controller-dockercfg-xdcwb" }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "runAsNonRoot": true,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-notifications-controller",
        "serviceAccountName": "argocd-notifications-controller",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          {
            "name": "kube-api-access-6n9z7",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:45Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:45Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://32cf4f38cee2c79137ff7a77cd0a3a6fe429452587f55e87ff325fc78958aa33",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-notifications-controller",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:36:44Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "phase": "Running",
        "podIP": "172.30.218.112",
        "podIPs": [{ "ip": "172.30.218.112" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:23Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/config": "492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae",
          "cni.projectcalico.org/containerID": "07df666a9c1001ee01b49380483ea7431543411bedc497a426d2dd9c610194e0",
          "cni.projectcalico.org/podIP": "172.30.137.39/32",
          "cni.projectcalico.org/podIPs": "172.30.137.39/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.137.39\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "prometheus.io/path": "/metrics",
          "prometheus.io/port": "9101",
          "prometheus.io/scrape": "true",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:47:30Z",
        "generateName": "argocd-redis-ha-haproxy-559d8d9d98-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "pod-template-hash": "559d8d9d98"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/config": {},
                  "f:prometheus.io/path": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"haproxy\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/run/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"shared-socket\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:47:30Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"PodScheduled\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  }
                }
              }
            },
            "manager": "kube-scheduler",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:30Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:13Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:13Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.137.39\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:28Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy-559d8d9d98-b729m",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-haproxy-559d8d9d98",
            "uid": "47e0d752-bdce-41c3-a2eb-19be1b431977"
          }
        ],
        "resourceVersion": "950243890",
        "uid": "4f308dd9-3241-42bd-b47c-051e4ebef4ad"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "haproxy",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
              {
                "containerPort": 9101,
                "name": "metrics-port",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
              { "mountPath": "/run/haproxy", "name": "shared-socket" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-pjvn7",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [
          { "name": "argocd-redis-ha-haproxy-dockercfg-wqk2p" }
        ],
        "initContainers": [
          {
            "args": ["/readonly/haproxy_init.sh"],
            "command": ["sh"],
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly",
                "name": "config-volume",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-pjvn7",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.38",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha-haproxy",
        "serviceAccountName": "argocd-redis-ha-haproxy",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config-volume"
          },
          { "emptyDir": {}, "name": "shared-socket" },
          { "emptyDir": {}, "name": "data" },
          {
            "name": "kube-api-access-pjvn7",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:48:19Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:48:27Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:48:27Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:48:12Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://f20e1dc70a04d508bd74b722ba69f2f3e0d2e9d0ed55d623a34d8d55d74adf4c",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "haproxy",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:48:20Z" } }
          }
        ],
        "hostIP": "10.134.76.38",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://f701621e7f1a3a1dee1cfd90e75eaa9ca90200d3ca2921b4141497927f166771",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://f701621e7f1a3a1dee1cfd90e75eaa9ca90200d3ca2921b4141497927f166771",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:48:18Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:48:18Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.137.39",
        "podIPs": [{ "ip": "172.30.137.39" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:48:12Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/config": "492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae",
          "cni.projectcalico.org/containerID": "88130dbc8c987f8a689fca41496fb8ff63aa216a063956f7df0bec1a73e1f420",
          "cni.projectcalico.org/podIP": "172.30.218.126/32",
          "cni.projectcalico.org/podIPs": "172.30.218.126/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.126\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "prometheus.io/path": "/metrics",
          "prometheus.io/port": "9101",
          "prometheus.io/scrape": "true",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:25:11Z",
        "generateName": "argocd-redis-ha-haproxy-559d8d9d98-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "pod-template-hash": "559d8d9d98"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/config": {},
                  "f:prometheus.io/path": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"haproxy\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/run/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"shared-socket\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:25:11Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:25:12Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:25:12Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.126\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:25:23Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy-559d8d9d98-hck87",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-haproxy-559d8d9d98",
            "uid": "47e0d752-bdce-41c3-a2eb-19be1b431977"
          }
        ],
        "resourceVersion": "950218880",
        "uid": "4651466c-d12a-4eb4-8946-fa4d348810be"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "haproxy",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
              {
                "containerPort": 9101,
                "name": "metrics-port",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
              { "mountPath": "/run/haproxy", "name": "shared-socket" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-sgscw",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [
          { "name": "argocd-redis-ha-haproxy-dockercfg-wqk2p" }
        ],
        "initContainers": [
          {
            "args": ["/readonly/haproxy_init.sh"],
            "command": ["sh"],
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly",
                "name": "config-volume",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-sgscw",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha-haproxy",
        "serviceAccountName": "argocd-redis-ha-haproxy",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config-volume"
          },
          { "emptyDir": {}, "name": "shared-socket" },
          { "emptyDir": {}, "name": "data" },
          {
            "name": "kube-api-access-sgscw",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:25:17Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:25:23Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:25:23Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:25:11Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://c7856f1f4f5e0f5c3467e471eb16be1c95e349a34bf262f9a73cfee3361f877b",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "haproxy",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:25:18Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://2b4c4c03ac01469331eb667ed65558b672c50b31af08ac0e0c44cae6fbcb535f",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://2b4c4c03ac01469331eb667ed65558b672c50b31af08ac0e0c44cae6fbcb535f",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:25:17Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:25:16Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.218.126",
        "podIPs": [{ "ip": "172.30.218.126" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:25:11Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/config": "492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae",
          "cni.projectcalico.org/containerID": "62c9e93bb49980ad0e18c1975da76089b1d3f3fba6ea117b152828aac80103a5",
          "cni.projectcalico.org/podIP": "172.30.191.227/32",
          "cni.projectcalico.org/podIPs": "172.30.191.227/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.227\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "prometheus.io/path": "/metrics",
          "prometheus.io/port": "9101",
          "prometheus.io/scrape": "true",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:36:23Z",
        "generateName": "argocd-redis-ha-haproxy-559d8d9d98-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "pod-template-hash": "559d8d9d98"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/config": {},
                  "f:prometheus.io/path": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"47e0d752-bdce-41c3-a2eb-19be1b431977\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"haproxy\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/run/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"shared-socket\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"PodScheduled\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  }
                }
              }
            },
            "manager": "kube-scheduler",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:45Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:45Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.191.227\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:57Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy-559d8d9d98-q99bg",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-haproxy-559d8d9d98",
            "uid": "47e0d752-bdce-41c3-a2eb-19be1b431977"
          }
        ],
        "resourceVersion": "950231243",
        "uid": "cc4f6323-24bb-4b60-9a66-e02997e6b012"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "haproxy",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
              {
                "containerPort": 9101,
                "name": "metrics-port",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 3,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
              { "mountPath": "/run/haproxy", "name": "shared-socket" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-xc847",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [
          { "name": "argocd-redis-ha-haproxy-dockercfg-wqk2p" }
        ],
        "initContainers": [
          {
            "args": ["/readonly/haproxy_init.sh"],
            "command": ["sh"],
            "image": "haproxy:2.6.14-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly",
                "name": "config-volume",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-xc847",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.39",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha-haproxy",
        "serviceAccountName": "argocd-redis-ha-haproxy",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config-volume"
          },
          { "emptyDir": {}, "name": "shared-socket" },
          { "emptyDir": {}, "name": "data" },
          {
            "name": "kube-api-access-xc847",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:52Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:57Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:57Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:44Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://698547c0048c99b50a74843873893036e40c37a8de5a77e2429a6dc7a17fc076",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "haproxy",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:36:52Z" } }
          }
        ],
        "hostIP": "10.134.76.39",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://4d8194cb539499148b1f0b087570237bb9ad58c9e1386d6d90dc5e6a9002bd3b",
            "image": "docker.io/library/haproxy:2.6.14-alpine",
            "imageID": "docker.io/library/haproxy@sha256:57d7cb3b17815f3b201d59d351cd88f95c2ea7debebc6687cdff1ca851b27a0b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://4d8194cb539499148b1f0b087570237bb9ad58c9e1386d6d90dc5e6a9002bd3b",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:36:51Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:36:51Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.191.227",
        "podIPs": [{ "ip": "172.30.191.227" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:44Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/init-config": "69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75",
          "cni.projectcalico.org/containerID": "37b703ec0494bf2f4981fff408e02ed50464a7c7c2266c4fd1f206f554aa7efd",
          "cni.projectcalico.org/podIP": "172.30.137.46/32",
          "cni.projectcalico.org/podIPs": "172.30.137.46/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.137.46\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:48:32Z",
        "generateName": "argocd-redis-ha-server-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "controller-revision-hash": "argocd-redis-ha-server-5f967c88db",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-0"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { ".": {}, "f:checksum/init-config": {} },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"redis\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": { ".": {}, "f:command": {} }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  },
                  "k:{\"name\":\"sentinel\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":26379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"split-brain-fix\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"health\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:48:32Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:33Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:33Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.137.46\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:49:33Z"
          }
        ],
        "name": "argocd-redis-ha-server-0",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-server",
            "uid": "90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed"
          }
        ],
        "resourceVersion": "950244966",
        "uid": "498e2121-8f77-4cce-aec9-1a0c87978e5a"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "automountServiceAccountToken": false,
        "containers": [
          {
            "args": ["/data/conf/redis.conf"],
            "command": ["redis-server"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "/readonly-config/trigger-failover-if-master.sh"
                  ]
                }
              }
            },
            "livenessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "redis",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/data/conf/sentinel.conf"],
            "command": ["redis-sentinel"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "sentinel",
            "ports": [
              { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 3,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/readonly-config/fix-split-brain.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "split-brain-fix",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "hostname": "argocd-redis-ha-server-0",
        "imagePullSecrets": [{ "name": "argocd-redis-ha-dockercfg-q5k4x" }],
        "initContainers": [
          {
            "args": ["/readonly-config/init.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "nodeName": "10.134.76.38",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha",
        "serviceAccountName": "argocd-redis-ha",
        "subdomain": "argocd-redis-ha",
        "terminationGracePeriodSeconds": 60,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config"
          },
          {
            "configMap": {
              "defaultMode": 493,
              "name": "argocd-redis-ha-health-configmap"
            },
            "name": "health"
          },
          { "emptyDir": {}, "name": "data" }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:48:39Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:49:33Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:49:33Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:48:32Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://187fad0e4a6b728d6c8bd41456c9fda258a939c5ba0a82526cbd306c3e7d083e",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "redis",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:48:40Z" } }
          },
          {
            "containerID": "cri-o://082b79b82a0d27051c8effb95e873e2fd93c152ba10e068858b984e29bffafe0",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "sentinel",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:48:40Z" } }
          },
          {
            "containerID": "cri-o://17994a5abb4900b53ac6f7a2b71860f3f1ceb4b3b0355651745e99bedcd8957a",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "split-brain-fix",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:48:41Z" } }
          }
        ],
        "hostIP": "10.134.76.38",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://8558d77ffdd066d0ff70d387664d6076b89b5915001b6370bc604b2ba62b9830",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://8558d77ffdd066d0ff70d387664d6076b89b5915001b6370bc604b2ba62b9830",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:48:38Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:48:38Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.137.46",
        "podIPs": [{ "ip": "172.30.137.46" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:48:32Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/init-config": "69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75",
          "cni.projectcalico.org/containerID": "443f290beea2afbc581c0c4eccaa2d851d85dc5fdb7a0574ea91a1a5f36f7c81",
          "cni.projectcalico.org/podIP": "172.30.218.84/32",
          "cni.projectcalico.org/podIPs": "172.30.218.84/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.84\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:26:13Z",
        "generateName": "argocd-redis-ha-server-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "controller-revision-hash": "argocd-redis-ha-server-5f967c88db",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-1"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:26:13Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { ".": {}, "f:checksum/init-config": {} },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"redis\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": { ".": {}, "f:command": {} }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  },
                  "k:{\"name\":\"sentinel\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":26379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"split-brain-fix\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"health\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:26:13Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:26:14Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.84\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:27:13Z"
          }
        ],
        "name": "argocd-redis-ha-server-1",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-server",
            "uid": "90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed"
          }
        ],
        "resourceVersion": "950220672",
        "uid": "2d211d73-83ba-4e9e-8d32-218cdae1c807"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "automountServiceAccountToken": false,
        "containers": [
          {
            "args": ["/data/conf/redis.conf"],
            "command": ["redis-server"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "/readonly-config/trigger-failover-if-master.sh"
                  ]
                }
              }
            },
            "livenessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "redis",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/data/conf/sentinel.conf"],
            "command": ["redis-sentinel"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "sentinel",
            "ports": [
              { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 3,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/readonly-config/fix-split-brain.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "split-brain-fix",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "hostname": "argocd-redis-ha-server-1",
        "imagePullSecrets": [{ "name": "argocd-redis-ha-dockercfg-q5k4x" }],
        "initContainers": [
          {
            "args": ["/readonly-config/init.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha",
        "serviceAccountName": "argocd-redis-ha",
        "subdomain": "argocd-redis-ha",
        "terminationGracePeriodSeconds": 60,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config"
          },
          {
            "configMap": {
              "defaultMode": 493,
              "name": "argocd-redis-ha-health-configmap"
            },
            "name": "health"
          },
          { "emptyDir": {}, "name": "data" }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:26:20Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:27:13Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:27:13Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:26:13Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://df4d9a5584b2ecd097fd05bc1540aef4de854603091ebf858422b4c7e24e734f",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "redis",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:26:20Z" } }
          },
          {
            "containerID": "cri-o://16f9688f179280d0d796f43888fd5882c941ee5d3ff4012c1a6ac49431c6ff13",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "sentinel",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:26:20Z" } }
          },
          {
            "containerID": "cri-o://efd77134b2cfcbc994c5c45ef3c3bfb35726ec6602b695432eb952be75f94efb",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "split-brain-fix",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:26:21Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://f51081cb534649d7ed0afe7118224f16977d32bee77a98e4d84bd91fbeb94343",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://f51081cb534649d7ed0afe7118224f16977d32bee77a98e4d84bd91fbeb94343",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:26:19Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:26:19Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.218.84",
        "podIPs": [{ "ip": "172.30.218.84" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:26:13Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "checksum/init-config": "69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75",
          "cni.projectcalico.org/containerID": "9507917f5f12a15bb28179ae7ff41208a6acc28a190f3ae3af45223d41069ce5",
          "cni.projectcalico.org/podIP": "172.30.191.228/32",
          "cni.projectcalico.org/podIPs": "172.30.191.228/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.228\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "restricted-v2",
          "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
        },
        "creationTimestamp": "2023-11-15T21:37:25Z",
        "generateName": "argocd-redis-ha-server-",
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "controller-revision-hash": "argocd-redis-ha-server-5f967c88db",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-2"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { ".": {}, "f:checksum/init-config": {} },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"redis\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": { ".": {}, "f:command": {} }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  },
                  "k:{\"name\":\"sentinel\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":26379,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:exec": { ".": {}, "f:command": {} },
                      "f:failureThreshold": {},
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/health\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"split-brain-fix\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"config-init\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"SENTINEL_ID_0\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_1\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SENTINEL_ID_2\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/data\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/readonly-config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"data\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"health\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:37:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:28Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:28Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.191.228\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:38:41Z"
          }
        ],
        "name": "argocd-redis-ha-server-2",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-server",
            "uid": "90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed"
          }
        ],
        "resourceVersion": "950233077",
        "uid": "019bb324-2a32-44ef-a01e-7985777025b0"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "automountServiceAccountToken": false,
        "containers": [
          {
            "args": ["/data/conf/redis.conf"],
            "command": ["redis-server"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "/readonly-config/trigger-failover-if-master.sh"
                  ]
                }
              }
            },
            "livenessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "redis",
            "ports": [
              { "containerPort": 6379, "name": "redis", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/data/conf/sentinel.conf"],
            "command": ["redis-sentinel"],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {},
            "livenessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 1,
              "timeoutSeconds": 15
            },
            "name": "sentinel",
            "ports": [
              { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
            ],
            "readinessProbe": {
              "exec": {
                "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
              },
              "failureThreshold": 5,
              "initialDelaySeconds": 30,
              "periodSeconds": 15,
              "successThreshold": 3,
              "timeoutSeconds": 15
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/data", "name": "data" },
              { "mountPath": "/health", "name": "health" }
            ]
          },
          {
            "args": ["/readonly-config/fix-split-brain.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "split-brain-fix",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "hostname": "argocd-redis-ha-server-2",
        "imagePullSecrets": [{ "name": "argocd-redis-ha-dockercfg-q5k4x" }],
        "initContainers": [
          {
            "args": ["/readonly-config/init.sh"],
            "command": ["sh"],
            "env": [
              {
                "name": "SENTINEL_ID_0",
                "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
              },
              {
                "name": "SENTINEL_ID_1",
                "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
              },
              {
                "name": "SENTINEL_ID_2",
                "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
              }
            ],
            "image": "redis:7.0.11-alpine",
            "imagePullPolicy": "IfNotPresent",
            "name": "config-init",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000650000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/readonly-config",
                "name": "config",
                "readOnly": true
              },
              { "mountPath": "/data", "name": "data" }
            ]
          }
        ],
        "nodeName": "10.134.76.39",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000650000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "seccompProfile": { "type": "RuntimeDefault" }
        },
        "serviceAccount": "argocd-redis-ha",
        "serviceAccountName": "argocd-redis-ha",
        "subdomain": "argocd-redis-ha",
        "terminationGracePeriodSeconds": 60,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-redis-ha-configmap"
            },
            "name": "config"
          },
          {
            "configMap": {
              "defaultMode": 493,
              "name": "argocd-redis-ha-health-configmap"
            },
            "name": "health"
          },
          { "emptyDir": {}, "name": "data" }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:37:41Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:38:41Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:38:41Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:25Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://49ed542cce7d0c728c99e48e098f99498db3caea52eebf4d98d2be8d1c735b6b",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "redis",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:37:42Z" } }
          },
          {
            "containerID": "cri-o://7d433a4a3e465bdb1db2c8dcdb408821d6faa80bb3182675a98d83a05e4dd02f",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "sentinel",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:37:43Z" } }
          },
          {
            "containerID": "cri-o://acce3b0e7c8ce753ee9098978e2a4796fb24ff7d992bdb50e66f22298768488f",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "split-brain-fix",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:37:43Z" } }
          }
        ],
        "hostIP": "10.134.76.39",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://a3ab7b82a2044fda3e74dbb1526562e033ee972226ffb4bf9d3e276654bdacae",
            "image": "docker.io/library/redis:7.0.11-alpine",
            "imageID": "docker.io/library/redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b",
            "lastState": {},
            "name": "config-init",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://a3ab7b82a2044fda3e74dbb1526562e033ee972226ffb4bf9d3e276654bdacae",
                "exitCode": 0,
                "finishedAt": "2023-11-15T21:37:40Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T21:37:40Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.191.228",
        "podIPs": [{ "ip": "172.30.191.228" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:37:25Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "cc74623020b29c0f93ac4879e04abc990ceabbd0902ea327254d87918274dad2",
          "cni.projectcalico.org/podIP": "172.30.195.120/32",
          "cni.projectcalico.org/podIPs": "172.30.195.120/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.195.120\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "privileged"
        },
        "creationTimestamp": "2023-11-15T18:55:27Z",
        "generateName": "argocd-repo-server-c8bfd55cc-",
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "c8bfd55cc"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"3b1d8700-ccde-4b05-99d0-10776a8bb8b6\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"argocd-repo-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_DATA_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/helm-working-dir\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"avp\"}": {
                    ".": {},
                    "f:command": {},
                    "f:envFrom": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/var/run/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"copyutil\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/var/run/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"download-tools\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"AVP_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/custom-tools\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"cmp-plugin\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"custom-tools\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keyring\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keys\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"helm-working-dir\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"plugins\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"var-files\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T18:55:27Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T18:55:29Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T18:55:29Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.195.120\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T18:56:57Z"
          }
        ],
        "name": "argocd-repo-server-c8bfd55cc-k8z56",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server-c8bfd55cc",
            "uid": "3b1d8700-ccde-4b05-99d0-10776a8bb8b6"
          }
        ],
        "resourceVersion": "950055571",
        "uid": "53a8245e-9fdd-413f-8d65-f7fd8b835f0b"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-repo-server"
                    }
                  },
                  "topologyKey": "topology.kubernetes.io/zone"
                },
                "weight": 100
              }
            ],
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-repo-server"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "automountServiceAccountToken": true,
        "containers": [
          {
            "command": [
              "bash",
              "-c",
              "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
            ],
            "envFrom": [
              { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
            ],
            "image": "registry.access.redhat.com/ubi8",
            "imagePullPolicy": "Always",
            "name": "avp",
            "resources": {},
            "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/var/run/argocd", "name": "var-files" },
              {
                "mountPath": "/home/argocd/cmp-server/plugins",
                "name": "plugins"
              },
              { "mountPath": "/tmp", "name": "tmp" },
              {
                "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                "name": "cmp-plugin",
                "subPath": "avp.yaml"
              },
              {
                "mountPath": "/usr/local/bin/argocd-vault-plugin",
                "name": "custom-tools",
                "subPath": "argocd-vault-plugin"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-98svv",
                "readOnly": true
              }
            ]
          },
          {
            "args": ["/usr/local/bin/argocd-repo-server"],
            "env": [
              {
                "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "timeout.reconciliation",
                    "name": "argocd-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.parallelism.limit",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.metrics.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.disable.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.minversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.maxversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.ciphers",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.repo.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.compression",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.db",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.default.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "otlp.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.max.combined.directory.manifests.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.plugin.tar.exclusions",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.allow.oob.symlinks",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.streamed.manifest.max.tar.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.streamed.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.helm.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.disable.helm.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_MODULES_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.enable.git.submodule",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
              { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
              { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "path": "/healthz?full=true",
                "port": 8084,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 30,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "name": "argocd-repo-server",
            "ports": [
              { "containerPort": 8081, "protocol": "TCP" },
              { "containerPort": 8084, "protocol": "TCP" }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8084, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
              { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
              {
                "mountPath": "/app/config/reposerver/tls",
                "name": "argocd-repo-server-tls"
              },
              { "mountPath": "/tmp", "name": "tmp" },
              { "mountPath": "/helm-working-dir", "name": "helm-working-dir" },
              {
                "mountPath": "/home/argocd/cmp-server/plugins",
                "name": "plugins"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-98svv",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [{ "name": "argocd-repo-server-dockercfg-rzmwd" }],
        "initContainers": [
          {
            "args": [
              "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
            ],
            "command": ["sh", "-c"],
            "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
            "image": "registry.access.redhat.com/ubi8",
            "imagePullPolicy": "Always",
            "name": "download-tools",
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/custom-tools", "name": "custom-tools" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-98svv",
                "readOnly": true
              }
            ]
          },
          {
            "command": [
              "/bin/cp",
              "-n",
              "/usr/local/bin/argocd",
              "/var/run/argocd/argocd-cmp-server"
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "IfNotPresent",
            "name": "copyutil",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/var/run/argocd", "name": "var-files" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-98svv",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.4",
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "serviceAccount": "argocd-repo-server",
        "serviceAccountName": "argocd-repo-server",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
            "name": "cmp-plugin"
          },
          { "emptyDir": {}, "name": "custom-tools" },
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-ssh-known-hosts-cm"
            },
            "name": "ssh-known-hosts"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-gpg-keys-cm" },
            "name": "gpg-keys"
          },
          { "emptyDir": {}, "name": "gpg-keyring" },
          { "emptyDir": {}, "name": "tmp" },
          { "emptyDir": {}, "name": "helm-working-dir" },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          { "emptyDir": {}, "name": "var-files" },
          { "emptyDir": {}, "name": "plugins" },
          {
            "name": "kube-api-access-98svv",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T18:56:45Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T18:56:57Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T18:56:57Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T18:55:27Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://240e809b3d56d0bd47f737f9caca150bcdb903a3ec35633ef2d6aa14c62ac6e9",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-repo-server",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T18:56:49Z" } }
          },
          {
            "containerID": "cri-o://63033899046f338b00ded6565236a09fd4ded620aee1cf5d9d94f45c6feb11a4",
            "image": "registry.access.redhat.com/ubi8:latest",
            "imageID": "registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3",
            "lastState": {},
            "name": "avp",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T18:56:46Z" } }
          }
        ],
        "hostIP": "10.134.76.4",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://5f65cec8069bc4832532a9ec705fb51aa1aa77de9b3fbda71a48d8385048778c",
            "image": "registry.access.redhat.com/ubi8:latest",
            "imageID": "registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3",
            "lastState": {},
            "name": "download-tools",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://5f65cec8069bc4832532a9ec705fb51aa1aa77de9b3fbda71a48d8385048778c",
                "exitCode": 0,
                "finishedAt": "2023-11-15T18:56:10Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T18:56:09Z"
              }
            }
          },
          {
            "containerID": "cri-o://bb786772824eb40d8a4ac15126b813386a3c540c17b005b88d6ba500a1827c4e",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "copyutil",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://bb786772824eb40d8a4ac15126b813386a3c540c17b005b88d6ba500a1827c4e",
                "exitCode": 0,
                "finishedAt": "2023-11-15T18:56:45Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T18:56:44Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.195.120",
        "podIPs": [{ "ip": "172.30.195.120" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T18:55:27Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "19dad6adffa14e518af61cb53cd3e8b3ac87fbb4d9ea84cb98c5fb193933b0bb",
          "cni.projectcalico.org/podIP": "172.30.114.7/32",
          "cni.projectcalico.org/podIPs": "172.30.114.7/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.114.7\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "privileged"
        },
        "creationTimestamp": "2023-11-15T20:47:29Z",
        "generateName": "argocd-repo-server-c8bfd55cc-",
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "c8bfd55cc"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"3b1d8700-ccde-4b05-99d0-10776a8bb8b6\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"argocd-repo-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_DATA_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/helm-working-dir\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"avp\"}": {
                    ".": {},
                    "f:command": {},
                    "f:envFrom": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/var/run/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"copyutil\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/var/run/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"download-tools\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"AVP_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/custom-tools\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"cmp-plugin\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"custom-tools\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keyring\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keys\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"helm-working-dir\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"plugins\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"var-files\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T20:47:29Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T20:47:31Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T20:47:31Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.114.7\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T20:51:10Z"
          }
        ],
        "name": "argocd-repo-server-c8bfd55cc-tgnvb",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server-c8bfd55cc",
            "uid": "3b1d8700-ccde-4b05-99d0-10776a8bb8b6"
          }
        ],
        "resourceVersion": "950181381",
        "uid": "822ca2e1-e364-41c6-b6dd-d3b12f363f9a"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-repo-server"
                    }
                  },
                  "topologyKey": "topology.kubernetes.io/zone"
                },
                "weight": 100
              }
            ],
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-repo-server"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "automountServiceAccountToken": true,
        "containers": [
          {
            "command": [
              "bash",
              "-c",
              "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
            ],
            "envFrom": [
              { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
            ],
            "image": "registry.access.redhat.com/ubi8",
            "imagePullPolicy": "Always",
            "name": "avp",
            "resources": {},
            "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/var/run/argocd", "name": "var-files" },
              {
                "mountPath": "/home/argocd/cmp-server/plugins",
                "name": "plugins"
              },
              { "mountPath": "/tmp", "name": "tmp" },
              {
                "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                "name": "cmp-plugin",
                "subPath": "avp.yaml"
              },
              {
                "mountPath": "/usr/local/bin/argocd-vault-plugin",
                "name": "custom-tools",
                "subPath": "argocd-vault-plugin"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-zn6rp",
                "readOnly": true
              }
            ]
          },
          {
            "args": ["/usr/local/bin/argocd-repo-server"],
            "env": [
              {
                "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "timeout.reconciliation",
                    "name": "argocd-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.parallelism.limit",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.metrics.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.disable.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.minversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.maxversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.tls.ciphers",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.repo.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.compression",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.db",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.default.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "otlp.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.max.combined.directory.manifests.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.plugin.tar.exclusions",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.allow.oob.symlinks",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.streamed.manifest.max.tar.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.streamed.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.helm.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.disable.helm.manifest.max.extracted.size",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_MODULES_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "reposerver.enable.git.submodule",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
              { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
              { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "path": "/healthz?full=true",
                "port": 8084,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 30,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "name": "argocd-repo-server",
            "ports": [
              { "containerPort": 8081, "protocol": "TCP" },
              { "containerPort": 8084, "protocol": "TCP" }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8084, "scheme": "HTTP" },
              "initialDelaySeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
              { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
              {
                "mountPath": "/app/config/reposerver/tls",
                "name": "argocd-repo-server-tls"
              },
              { "mountPath": "/tmp", "name": "tmp" },
              { "mountPath": "/helm-working-dir", "name": "helm-working-dir" },
              {
                "mountPath": "/home/argocd/cmp-server/plugins",
                "name": "plugins"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-zn6rp",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [{ "name": "argocd-repo-server-dockercfg-rzmwd" }],
        "initContainers": [
          {
            "args": [
              "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
            ],
            "command": ["sh", "-c"],
            "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
            "image": "registry.access.redhat.com/ubi8",
            "imagePullPolicy": "Always",
            "name": "download-tools",
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/custom-tools", "name": "custom-tools" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-zn6rp",
                "readOnly": true
              }
            ]
          },
          {
            "command": [
              "/bin/cp",
              "-n",
              "/usr/local/bin/argocd",
              "/var/run/argocd/argocd-cmp-server"
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "IfNotPresent",
            "name": "copyutil",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/var/run/argocd", "name": "var-files" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-zn6rp",
                "readOnly": true
              }
            ]
          }
        ],
        "nodeName": "10.134.76.16",
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "serviceAccount": "argocd-repo-server",
        "serviceAccountName": "argocd-repo-server",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          {
            "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
            "name": "cmp-plugin"
          },
          { "emptyDir": {}, "name": "custom-tools" },
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-ssh-known-hosts-cm"
            },
            "name": "ssh-known-hosts"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-gpg-keys-cm" },
            "name": "gpg-keys"
          },
          { "emptyDir": {}, "name": "gpg-keyring" },
          { "emptyDir": {}, "name": "tmp" },
          { "emptyDir": {}, "name": "helm-working-dir" },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          { "emptyDir": {}, "name": "var-files" },
          { "emptyDir": {}, "name": "plugins" },
          {
            "name": "kube-api-access-zn6rp",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T20:50:56Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T20:51:10Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T20:51:10Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T20:47:29Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://7c5b0b20477647f7e72d7956806d2d5a8db0ed0853e3a4f9e991a49be2789f0c",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-repo-server",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T20:51:00Z" } }
          },
          {
            "containerID": "cri-o://f06134c4b2b9727b9851dd6dcefc546175df9cbda14cd1f2a9a283d822abda28",
            "image": "registry.access.redhat.com/ubi8:latest",
            "imageID": "registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3",
            "lastState": {},
            "name": "avp",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T20:50:58Z" } }
          }
        ],
        "hostIP": "10.134.76.16",
        "initContainerStatuses": [
          {
            "containerID": "cri-o://68114e7b2125c91650d11d05b8764d321c4678b6970108295c39be54b04b96ac",
            "image": "registry.access.redhat.com/ubi8:latest",
            "imageID": "registry.access.redhat.com/ubi8@sha256:449da7f8f2ef6285a8445a1e31af57a97b9dae5dcf009b1629c59742c89c68c3",
            "lastState": {},
            "name": "download-tools",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://68114e7b2125c91650d11d05b8764d321c4678b6970108295c39be54b04b96ac",
                "exitCode": 0,
                "finishedAt": "2023-11-15T20:48:50Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T20:48:49Z"
              }
            }
          },
          {
            "containerID": "cri-o://2dcd9f40e00dfd9875c1a0147efd439aeac397c722dbab1b3a1dee91302e7ff2",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "copyutil",
            "ready": true,
            "restartCount": 0,
            "state": {
              "terminated": {
                "containerID": "cri-o://2dcd9f40e00dfd9875c1a0147efd439aeac397c722dbab1b3a1dee91302e7ff2",
                "exitCode": 0,
                "finishedAt": "2023-11-15T20:50:55Z",
                "reason": "Completed",
                "startedAt": "2023-11-15T20:50:55Z"
              }
            }
          }
        ],
        "phase": "Running",
        "podIP": "172.30.114.7",
        "podIPs": [{ "ip": "172.30.114.7" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T20:47:29Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "410b027a54e3e78a7d7cb9f41e44e1cb25e1b174925072a70b03ac5edb17d37e",
          "cni.projectcalico.org/podIP": "172.30.191.242/32",
          "cni.projectcalico.org/podIPs": "172.30.191.242/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.191.242\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "allow-jenkins-agent"
        },
        "creationTimestamp": "2023-11-15T21:47:30Z",
        "generateName": "argocd-server-6c6f49884d-",
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "6c6f49884d"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"2862f7f0-eb68-4d52-9496-9baca408a8e8\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"argocd-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-dex-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"plugins-home\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:47:30Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:31Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:31Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.191.242\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:58Z"
          }
        ],
        "name": "argocd-server-6c6f49884d-5ppjs",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server-6c6f49884d",
            "uid": "2862f7f0-eb68-4d52-9496-9baca408a8e8"
          }
        ],
        "resourceVersion": "950243308",
        "uid": "25a8fb84-8a5d-4e7a-8685-010001eb35dc"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                  },
                  "topologyKey": "topology.kubernetes.io/zone"
                },
                "weight": 100
              }
            ],
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "args": ["/usr/local/bin/argocd-server"],
            "env": [
              { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
              {
                "name": "ARGOCD_SERVER_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.insecure",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_BASEHREF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.basehref",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ROOTPATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.rootpath",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOG_LEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "repo.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DISABLE_AUTH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.disable.auth",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_GZIP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.enable.gzip",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.timeout.seconds",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.x.frame.options",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.content.security.policy",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.minversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.maxversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.ciphers",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.connection.status.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.oidc.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.login.attempts.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_STATIC_ASSETS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.staticassets",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.app.state.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.compression",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.db",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.default.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_MAX_COOKIE_NUMBER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.http.cookie.maxnumber",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.metrics.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "otlp.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "application.namespaces",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.enable.proxy.extension",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "path": "/healthz?full=true",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 3,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "name": "argocd-server",
            "ports": [
              { "containerPort": 8080, "protocol": "TCP" },
              { "containerPort": 8083, "protocol": "TCP" }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8080, "scheme": "HTTP" },
              "initialDelaySeconds": 3,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              {
                "mountPath": "/app/config/server/tls",
                "name": "argocd-repo-server-tls"
              },
              {
                "mountPath": "/app/config/dex/tls",
                "name": "argocd-dex-server-tls"
              },
              { "mountPath": "/home/argocd", "name": "plugins-home" },
              { "mountPath": "/tmp", "name": "tmp" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-gszk5",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [{ "name": "argocd-server-dockercfg-7jss9" }],
        "nodeName": "10.134.76.39",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "supplementalGroups": [1000]
        },
        "serviceAccount": "argocd-server",
        "serviceAccountName": "argocd-server",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          { "emptyDir": {}, "name": "plugins-home" },
          { "emptyDir": {}, "name": "tmp" },
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-ssh-known-hosts-cm"
            },
            "name": "ssh-known-hosts"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          {
            "name": "argocd-dex-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-dex-server-tls"
            }
          },
          {
            "name": "kube-api-access-gszk5",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:47:30Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:47:58Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:47:58Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:47:30Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://707b89b8933c666a6deb0ec869e654ce543434c00265f052a3b9af525dc978f8",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-server",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:47:55Z" } }
          }
        ],
        "hostIP": "10.134.76.39",
        "phase": "Running",
        "podIP": "172.30.191.242",
        "podIPs": [{ "ip": "172.30.191.242" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:47:30Z"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "cni.projectcalico.org/containerID": "0133bfa44f6506d657e54f6359900a73983a647e29e7978f35f757fdfaae0b84",
          "cni.projectcalico.org/podIP": "172.30.218.93/32",
          "cni.projectcalico.org/podIPs": "172.30.218.93/32",
          "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"172.30.218.93\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
          "openshift.io/scc": "allow-jenkins-agent"
        },
        "creationTimestamp": "2023-11-15T21:36:23Z",
        "generateName": "argocd-server-6c6f49884d-",
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "6c6f49884d"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"2862f7f0-eb68-4d52-9496-9baca408a8e8\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"argocd-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": { ".": {}, "f:drop": {} },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-dex-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"plugins-home\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-15T21:36:23Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:cni.projectcalico.org/containerID": {},
                  "f:cni.projectcalico.org/podIP": {},
                  "f:cni.projectcalico.org/podIPs": {}
                }
              }
            },
            "manager": "calico",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:k8s.v1.cni.cncf.io/network-status": {} }
              }
            },
            "manager": "multus",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"172.30.218.93\"}": { ".": {}, "f:ip": {} }
                },
                "f:startTime": {}
              }
            },
            "manager": "kubelet",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:54Z"
          }
        ],
        "name": "argocd-server-6c6f49884d-zjfxh",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server-6c6f49884d",
            "uid": "2862f7f0-eb68-4d52-9496-9baca408a8e8"
          }
        ],
        "resourceVersion": "950231185",
        "uid": "8332bdde-41d8-4fe3-82f8-6f9490c47d4f"
      },
      "spec": {
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                  },
                  "topologyKey": "topology.kubernetes.io/zone"
                },
                "weight": 100
              }
            ],
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "args": ["/usr/local/bin/argocd-server"],
            "env": [
              { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
              {
                "name": "ARGOCD_SERVER_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.insecure",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_BASEHREF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.basehref",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ROOTPATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.rootpath",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.log.format",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOG_LEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.log.level",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "repo.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DISABLE_AUTH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.disable.auth",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_GZIP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.enable.gzip",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.timeout.seconds",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.x.frame.options",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.content.security.policy",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.repo.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server.plaintext",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.dex.server.strict.tls",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.minversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.maxversion",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.tls.ciphers",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.connection.status.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.oidc.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.login.attempts.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_STATIC_ASSETS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.staticassets",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.app.state.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.server",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.compression",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "redis.db",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.default.cache.expiration",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_MAX_COOKIE_NUMBER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.http.cookie.maxnumber",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.metrics.listen.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "otlp.address",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "application.namespaces",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "key": "server.enable.proxy.extension",
                    "name": "argocd-cmd-params-cm",
                    "optional": true
                  }
                }
              }
            ],
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imagePullPolicy": "Always",
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "path": "/healthz?full=true",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 3,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "name": "argocd-server",
            "ports": [
              { "containerPort": 8080, "protocol": "TCP" },
              { "containerPort": 8083, "protocol": "TCP" }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": { "path": "/healthz", "port": 8080, "scheme": "HTTP" },
              "initialDelaySeconds": 3,
              "periodSeconds": 30,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": { "drop": ["ALL"] },
              "readOnlyRootFilesystem": true,
              "runAsNonRoot": true,
              "runAsUser": 1000,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
              { "mountPath": "/app/config/tls", "name": "tls-certs" },
              {
                "mountPath": "/app/config/server/tls",
                "name": "argocd-repo-server-tls"
              },
              {
                "mountPath": "/app/config/dex/tls",
                "name": "argocd-dex-server-tls"
              },
              { "mountPath": "/home/argocd", "name": "plugins-home" },
              { "mountPath": "/tmp", "name": "tmp" },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-9qjnw",
                "readOnly": true
              }
            ]
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "imagePullSecrets": [{ "name": "argocd-server-dockercfg-7jss9" }],
        "nodeName": "10.134.76.36",
        "nodeSelector": { "demo-purpose": "tools" },
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 1000,
          "seLinuxOptions": { "level": "s0:c26,c0" },
          "supplementalGroups": [1000]
        },
        "serviceAccount": "argocd-server",
        "serviceAccountName": "argocd-server",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300
          }
        ],
        "volumes": [
          { "emptyDir": {}, "name": "plugins-home" },
          { "emptyDir": {}, "name": "tmp" },
          {
            "configMap": {
              "defaultMode": 420,
              "name": "argocd-ssh-known-hosts-cm"
            },
            "name": "ssh-known-hosts"
          },
          {
            "configMap": { "defaultMode": 420, "name": "argocd-tls-certs-cm" },
            "name": "tls-certs"
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "tls.key", "path": "tls.key" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-repo-server-tls"
            }
          },
          {
            "name": "argocd-dex-server-tls",
            "secret": {
              "defaultMode": 420,
              "items": [
                { "key": "tls.crt", "path": "tls.crt" },
                { "key": "ca.crt", "path": "ca.crt" }
              ],
              "optional": true,
              "secretName": "argocd-dex-server-tls"
            }
          },
          {
            "name": "kube-api-access-9qjnw",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "items": [{ "key": "ca.crt", "path": "ca.crt" }],
                    "name": "kube-root-ca.crt"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        },
                        "path": "namespace"
                      }
                    ]
                  }
                },
                {
                  "configMap": {
                    "items": [
                      { "key": "service-ca.crt", "path": "service-ca.crt" }
                    ],
                    "name": "openshift-service-ca.crt"
                  }
                }
              ]
            }
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "Initialized"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:54Z",
            "status": "True",
            "type": "Ready"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:54Z",
            "status": "True",
            "type": "ContainersReady"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:23Z",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "cri-o://7530efea599e0f6c0313a03e0eb16a0718792c0b6eb79c4d3b375cf16eb0ba82",
            "image": "quay.io/argoproj/argocd:v2.9.0",
            "imageID": "quay.io/argoproj/argocd@sha256:1be54db1f0f5d1c0da4c9b592f8ee1921aa7b5441a780dd90ca2cad135131816",
            "lastState": {},
            "name": "argocd-server",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": { "running": { "startedAt": "2023-11-15T21:36:45Z" } }
          }
        ],
        "hostIP": "10.134.76.36",
        "phase": "Running",
        "podIP": "172.30.218.93",
        "podIPs": [{ "ip": "172.30.218.93" }],
        "qosClass": "BestEffort",
        "startTime": "2023-11-15T21:36:23Z"
      }
    }
  ],
  "replicationControllers": [],
  "resourceQuotas": [],
  "secrets": [
    "argocd-application-controller-dockercfg-2k2mx",
    "argocd-application-controller-token-pmr4p",
    "argocd-application-controller-token-zp2ww",
    "argocd-applicationset-controller-dockercfg-6t685",
    "argocd-applicationset-controller-token-8m26s",
    "argocd-applicationset-controller-token-n47kg",
    "argocd-dex-server-dockercfg-hvxr5",
    "argocd-dex-server-token-r5n59",
    "argocd-dex-server-token-vhwnq",
    "argocd-initial-admin-secret",
    "argocd-notifications-controller-dockercfg-xdcwb",
    "argocd-notifications-controller-token-l7dxv",
    "argocd-notifications-controller-token-lfjv2",
    "argocd-notifications-secret",
    "argocd-redis-dockercfg-xvc68",
    "argocd-redis-ha-dockercfg-q5k4x",
    "argocd-redis-ha-haproxy-dockercfg-wqk2p",
    "argocd-redis-ha-haproxy-token-ggbpd",
    "argocd-redis-ha-haproxy-token-w69zx",
    "argocd-redis-ha-token-2x7gj",
    "argocd-redis-ha-token-z5jsw",
    "argocd-redis-token-47kxk",
    "argocd-redis-token-mm4hs",
    "argocd-repo-server-dockercfg-rzmwd",
    "argocd-repo-server-token-mh8k4",
    "argocd-repo-server-token-qwm7h",
    "argocd-secret",
    "argocd-server-dockercfg-7jss9",
    "argocd-server-token-4tgbt",
    "argocd-server-token-msgbc",
    "argocd-vault-plugin-credentials",
    "builder-dockercfg-kzhvz",
    "builder-token-2wj8s",
    "builder-token-9lbg5",
    "creds-2399356179",
    "creds-250222738",
    "creds-931459463",
    "default-dockercfg-cr28h",
    "default-token-4zxs9",
    "default-token-w5sh8",
    "deployer-dockercfg-6px7w",
    "deployer-token-2h4fb",
    "deployer-token-49sw7",
    "pipeline-dockercfg-zs459",
    "pipeline-token-mjnq4",
    "pipeline-token-xqx28",
    "repo-106955694",
    "repo-114614951",
    "repo-1758889974",
    "repo-1984995315",
    "repo-2737110482",
    "repo-3055308290",
    "repo-3560252630",
    "repo-362174046",
    "repo-4152968330",
    "repo-421388688",
    "repo-4243261590"
  ],
  "services": [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"webhook\",\"port\":7000,\"protocol\":\"TCP\",\"targetPort\":\"webhook\"},{\"name\":\"metrics\",\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":\"metrics\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}}}\n"
        },
        "creationTimestamp": "2022-07-12T08:35:10Z",
        "labels": {
          "app.kubernetes.io/component": "applicationset-controller",
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":7000,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":8080,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-05-31T12:28:52Z"
          }
        ],
        "name": "argocd-applicationset-controller",
        "namespace": "argocd",
        "resourceVersion": "718314631",
        "uid": "7fbdfbb6-6ca3-4504-a74c-ef5ad7b893a7"
      },
      "spec": {
        "clusterIP": "172.21.75.54",
        "clusterIPs": ["172.21.75.54"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "webhook",
            "port": 7000,
            "protocol": "TCP",
            "targetPort": "webhook"
          },
          {
            "name": "metrics",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": "metrics"
          }
        ],
        "selector": {
          "app.kubernetes.io/name": "argocd-applicationset-controller"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"appProtocol\":\"TCP\",\"name\":\"http\",\"port\":5556,\"protocol\":\"TCP\",\"targetPort\":5556},{\"name\":\"grpc\",\"port\":5557,\"protocol\":\"TCP\",\"targetPort\":5557},{\"name\":\"metrics\",\"port\":5558,\"protocol\":\"TCP\",\"targetPort\":5558}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:28Z",
        "labels": {
          "app.kubernetes.io/component": "dex-server",
          "app.kubernetes.io/name": "argocd-dex-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":5556,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":5557,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":5558,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:28Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  "k:{\"port\":5556,\"protocol\":\"TCP\"}": {
                    "f:appProtocol": {}
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:06Z"
          }
        ],
        "name": "argocd-dex-server",
        "namespace": "argocd",
        "resourceVersion": "940154016",
        "uid": "a07e0ca1-0180-4d4f-92ee-40edb200e087"
      },
      "spec": {
        "clusterIP": "172.21.144.109",
        "clusterIPs": ["172.21.144.109"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "appProtocol": "TCP",
            "name": "http",
            "port": 5556,
            "protocol": "TCP",
            "targetPort": 5556
          },
          {
            "name": "grpc",
            "port": 5557,
            "protocol": "TCP",
            "targetPort": 5557
          },
          {
            "name": "metrics",
            "port": 5558,
            "protocol": "TCP",
            "targetPort": 5558
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-dex-server" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/name\":\"argocd-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":8082,\"protocol\":\"TCP\",\"targetPort\":8082}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:29Z",
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/name": "argocd-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":8082,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": { ".": {}, "f:app.kubernetes.io/name": {} },
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:29Z"
          }
        ],
        "name": "argocd-metrics",
        "namespace": "argocd",
        "resourceVersion": "55748",
        "uid": "4da1961b-e01a-42eb-926a-4dedfe426ec9"
      },
      "spec": {
        "clusterIP": "172.21.9.208",
        "clusterIPs": ["172.21.9.208"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "metrics",
            "port": 8082,
            "protocol": "TCP",
            "targetPort": 8082
          }
        ],
        "selector": {
          "app.kubernetes.io/name": "argocd-application-controller"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":9001,\"protocol\":\"TCP\",\"targetPort\":9001}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:18:30Z",
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/name": "argocd-notifications-controller-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":9001,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2021-05-27T11:18:30Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-05-31T12:28:52Z"
          }
        ],
        "name": "argocd-notifications-controller-metrics",
        "namespace": "argocd",
        "resourceVersion": "718314634",
        "uid": "cb4753db-99cf-4840-bf20-1e79dda970b9"
      },
      "spec": {
        "clusterIP": "172.21.236.143",
        "clusterIPs": ["172.21.236.143"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "metrics",
            "port": 9001,
            "protocol": "TCP",
            "targetPort": 9001
          }
        ],
        "selector": {
          "app.kubernetes.io/name": "argocd-notifications-controller"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis\"}}}\n"
        },
        "creationTimestamp": "2023-01-05T12:44:58Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-01-05T12:44:58Z"
          }
        ],
        "name": "argocd-redis",
        "namespace": "argocd",
        "resourceVersion": "518322859",
        "uid": "fec115e1-1717-4cb7-91c1-e146d67498d8"
      },
      "spec": {
        "clusterIP": "172.21.106.43",
        "clusterIPs": ["172.21.106.43"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-redis",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": 6379
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-redis" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha\",\"namespace\":\"argocd\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"},\"type\":\"ClusterIP\"}}\n"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:clusterIP": {},
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":26379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-02-06T16:31:39Z"
          }
        ],
        "name": "argocd-redis-ha",
        "namespace": "argocd",
        "resourceVersion": "560705528",
        "uid": "12692c11-1bd8-40cf-b412-f4dd530e13e6"
      },
      "spec": {
        "clusterIP": "None",
        "clusterIPs": ["None"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-server",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": "redis"
          },
          {
            "name": "tcp-sentinel",
            "port": 26379,
            "protocol": "TCP",
            "targetPort": "sentinel"
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-redis-ha" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-0\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-0\"},\"type\":\"ClusterIP\"}}\n",
          "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {},
                  "f:service.alpha.kubernetes.io/tolerate-unready-endpoints": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":26379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:publishNotReadyAddresses": {},
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-02-06T16:31:39Z"
          }
        ],
        "name": "argocd-redis-ha-announce-0",
        "namespace": "argocd",
        "resourceVersion": "560705535",
        "uid": "c325d6d2-46dc-4252-9534-286cc85cebd8"
      },
      "spec": {
        "clusterIP": "172.21.194.115",
        "clusterIPs": ["172.21.194.115"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-server",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": "redis"
          },
          {
            "name": "tcp-sentinel",
            "port": 26379,
            "protocol": "TCP",
            "targetPort": "sentinel"
          }
        ],
        "publishNotReadyAddresses": true,
        "selector": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-0"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-1\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-1\"},\"type\":\"ClusterIP\"}}\n",
          "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {},
                  "f:service.alpha.kubernetes.io/tolerate-unready-endpoints": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":26379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:publishNotReadyAddresses": {},
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-02-06T16:31:39Z"
          }
        ],
        "name": "argocd-redis-ha-announce-1",
        "namespace": "argocd",
        "resourceVersion": "560705541",
        "uid": "e7a14c8c-9c6e-44f9-b315-2bde10549d17"
      },
      "spec": {
        "clusterIP": "172.21.30.202",
        "clusterIPs": ["172.21.30.202"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-server",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": "redis"
          },
          {
            "name": "tcp-sentinel",
            "port": 26379,
            "protocol": "TCP",
            "targetPort": "sentinel"
          }
        ],
        "publishNotReadyAddresses": true,
        "selector": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-1"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"service.alpha.kubernetes.io/tolerate-unready-endpoints\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-announce-2\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-server\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"tcp-sentinel\",\"port\":26379,\"protocol\":\"TCP\",\"targetPort\":\"sentinel\"}],\"publishNotReadyAddresses\":true,\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"statefulset.kubernetes.io/pod-name\":\"argocd-redis-ha-server-2\"},\"type\":\"ClusterIP\"}}\n",
          "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {},
                  "f:service.alpha.kubernetes.io/tolerate-unready-endpoints": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":26379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:publishNotReadyAddresses": {},
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-02-06T16:31:39Z"
          }
        ],
        "name": "argocd-redis-ha-announce-2",
        "namespace": "argocd",
        "resourceVersion": "560705545",
        "uid": "a1394cf3-f704-4a29-a7b1-52330807c2b6"
      },
      "spec": {
        "clusterIP": "172.21.72.56",
        "clusterIPs": ["172.21.72.56"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-server",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": "redis"
          },
          {
            "name": "tcp-sentinel",
            "port": 26379,
            "protocol": "TCP",
            "targetPort": "sentinel"
          }
        ],
        "publishNotReadyAddresses": true,
        "selector": {
          "app.kubernetes.io/name": "argocd-redis-ha",
          "statefulset.kubernetes.io/pod-name": "argocd-redis-ha-server-2"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-haproxy\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"tcp-haproxy\",\"port\":6379,\"protocol\":\"TCP\",\"targetPort\":\"redis\"},{\"name\":\"http-exporter-port\",\"port\":9101,\"protocol\":\"TCP\",\"targetPort\":\"metrics-port\"}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"},\"type\":\"ClusterIP\"}}\n"
        },
        "creationTimestamp": "2023-02-06T16:31:39Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:internalTrafficPolicy": {},
                "f:ports": {
                  ".": {},
                  "k:{\"port\":6379,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":9101,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": {},
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy",
        "namespace": "argocd",
        "resourceVersion": "940154027",
        "uid": "600ee387-9d64-4022-b6c8-8be04d5a4cf0"
      },
      "spec": {
        "clusterIP": "172.21.254.234",
        "clusterIPs": ["172.21.254.234"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "tcp-haproxy",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": "redis"
          },
          {
            "name": "http-exporter-port",
            "port": 9101,
            "protocol": "TCP",
            "targetPort": "metrics-port"
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-redis-ha-haproxy" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"server\",\"port\":8081,\"protocol\":\"TCP\",\"targetPort\":8081},{\"name\":\"metrics\",\"port\":8084,\"protocol\":\"TCP\",\"targetPort\":8084}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:31Z",
        "labels": {
          "app.kubernetes.io/component": "repo-server",
          "app.kubernetes.io/name": "argocd-repo-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":8081,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":8084,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": { ".": {}, "f:app.kubernetes.io/name": {} },
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:31Z"
          }
        ],
        "name": "argocd-repo-server",
        "namespace": "argocd",
        "resourceVersion": "55789",
        "uid": "cb467de1-f716-49d8-9521-10719bc4cf42"
      },
      "spec": {
        "clusterIP": "172.21.72.150",
        "clusterIPs": ["172.21.72.150"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "server",
            "port": 8081,
            "protocol": "TCP",
            "targetPort": 8081
          },
          {
            "name": "metrics",
            "port": 8084,
            "protocol": "TCP",
            "targetPort": 8084
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-repo-server" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-server\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:31Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  },
                  "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": { ".": {}, "f:app.kubernetes.io/name": {} },
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:31Z"
          }
        ],
        "name": "argocd-server",
        "namespace": "argocd",
        "resourceVersion": "55794",
        "uid": "da7bedf3-2d27-4a28-8d20-79b68b0cad25"
      },
      "spec": {
        "clusterIP": "172.21.180.176",
        "clusterIPs": ["172.21.180.176"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          { "name": "http", "port": 80, "protocol": "TCP", "targetPort": 8080 },
          {
            "name": "https",
            "port": 443,
            "protocol": "TCP",
            "targetPort": 8080
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-server" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server-metrics\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server-metrics\",\"namespace\":\"argocd\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":8083,\"protocol\":\"TCP\",\"targetPort\":8083}],\"selector\":{\"app.kubernetes.io/name\":\"argocd-server\"}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:32Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server-metrics",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ports": {
                  ".": {},
                  "k:{\"port\":8083,\"protocol\":\"TCP\"}": {
                    ".": {},
                    "f:name": {},
                    "f:port": {},
                    "f:protocol": {},
                    "f:targetPort": {}
                  }
                },
                "f:selector": { ".": {}, "f:app.kubernetes.io/name": {} },
                "f:sessionAffinity": {},
                "f:type": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:32Z"
          }
        ],
        "name": "argocd-server-metrics",
        "namespace": "argocd",
        "resourceVersion": "55802",
        "uid": "7b2a4096-a25f-469f-9d42-b6fa7af03cec"
      },
      "spec": {
        "clusterIP": "172.21.160.36",
        "clusterIPs": ["172.21.160.36"],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": ["IPv4"],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "metrics",
            "port": 8083,
            "protocol": "TCP",
            "targetPort": 8083
          }
        ],
        "selector": { "app.kubernetes.io/name": "argocd-server" },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": { "loadBalancer": {} }
    }
  ],
  "serviceAccounts": [
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"application-controller\",\"app.kubernetes.io/name\":\"argocd-application-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-application-controller\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:19Z",
        "labels": {
          "app.kubernetes.io/component": "application-controller",
          "app.kubernetes.io/name": "argocd-application-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-application-controller-token-pmr4p\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-application-controller-dockercfg-2k2mx\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          }
        ],
        "name": "argocd-application-controller",
        "namespace": "argocd",
        "resourceVersion": "55624",
        "uid": "5b80694b-77dd-4766-a38b-dd9fd8b49944"
      },
      "imagePullSecrets": [
        { "name": "argocd-application-controller-dockercfg-2k2mx" }
      ],
      "secrets": [
        { "name": "argocd-application-controller-token-pmr4p" },
        { "name": "argocd-application-controller-dockercfg-2k2mx" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2022-07-12T08:35:04Z",
        "labels": {
          "app.kubernetes.io/component": "applicationset-controller",
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-applicationset-controller-token-8m26s\"}": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-12T08:35:04Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2022-07-12T08:35:04Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-applicationset-controller-dockercfg-6t685\"}": {}
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2022-07-12T08:35:04Z"
          }
        ],
        "name": "argocd-applicationset-controller",
        "namespace": "argocd",
        "resourceVersion": "718314581",
        "uid": "a63c9caa-c38d-4a59-a441-1da981129a57"
      },
      "imagePullSecrets": [
        { "name": "argocd-applicationset-controller-dockercfg-6t685" }
      ],
      "secrets": [
        { "name": "argocd-applicationset-controller-token-8m26s" },
        { "name": "argocd-applicationset-controller-dockercfg-6t685" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:19Z",
        "labels": {
          "app.kubernetes.io/component": "dex-server",
          "app.kubernetes.io/name": "argocd-dex-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-dex-server-token-r5n59\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-dex-server-dockercfg-hvxr5\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:19Z"
          }
        ],
        "name": "argocd-dex-server",
        "namespace": "argocd",
        "resourceVersion": "55632",
        "uid": "7e81222a-c87f-495c-8b63-d44d0b7047b4"
      },
      "imagePullSecrets": [{ "name": "argocd-dex-server-dockercfg-hvxr5" }],
      "secrets": [
        { "name": "argocd-dex-server-token-r5n59" },
        { "name": "argocd-dex-server-dockercfg-hvxr5" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:18:27Z",
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-notifications-controller-token-lfjv2\"}": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:18:27Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:metadata": { "f:annotations": {} } },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2021-05-27T11:18:27Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-notifications-controller-dockercfg-xdcwb\"}": {}
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:18:27Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-01-05T10:04:41Z"
          }
        ],
        "name": "argocd-notifications-controller",
        "namespace": "argocd",
        "resourceVersion": "518170737",
        "uid": "87faf13c-510f-467a-841a-3915d7927564"
      },
      "imagePullSecrets": [
        { "name": "argocd-notifications-controller-dockercfg-xdcwb" }
      ],
      "secrets": [
        { "name": "argocd-notifications-controller-token-lfjv2" },
        { "name": "argocd-notifications-controller-dockercfg-xdcwb" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2023-01-05T12:44:57Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-redis-token-47kxk\"}": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T12:44:57Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-01-05T12:44:57Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-redis-dockercfg-xvc68\"}": {}
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T12:44:57Z"
          }
        ],
        "name": "argocd-redis",
        "namespace": "argocd",
        "resourceVersion": "518322841",
        "uid": "01f32075-4dde-4b93-91e6-3551038e1b6d"
      },
      "imagePullSecrets": [{ "name": "argocd-redis-dockercfg-xvc68" }],
      "secrets": [
        { "name": "argocd-redis-token-47kxk" },
        { "name": "argocd-redis-dockercfg-xvc68" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:20Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-redis-ha-token-2x7gj\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-redis-ha-dockercfg-q5k4x\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          }
        ],
        "name": "argocd-redis-ha",
        "namespace": "argocd",
        "resourceVersion": "55644",
        "uid": "fcff519c-8f0d-4228-b3f2-83922732518e"
      },
      "imagePullSecrets": [{ "name": "argocd-redis-ha-dockercfg-q5k4x" }],
      "secrets": [
        { "name": "argocd-redis-ha-token-2x7gj" },
        { "name": "argocd-redis-ha-dockercfg-q5k4x" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-haproxy\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:20Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-redis-ha-haproxy-token-ggbpd\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-redis-ha-haproxy-dockercfg-wqk2p\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:20Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy",
        "namespace": "argocd",
        "resourceVersion": "55656",
        "uid": "1fcb85d0-6899-480b-820d-7ef1917ac005"
      },
      "imagePullSecrets": [
        { "name": "argocd-redis-ha-haproxy-dockercfg-wqk2p" }
      ],
      "secrets": [
        { "name": "argocd-redis-ha-haproxy-token-ggbpd" },
        { "name": "argocd-redis-ha-haproxy-dockercfg-wqk2p" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2022-07-12T08:35:06Z",
        "labels": {
          "app.kubernetes.io/component": "repo-server",
          "app.kubernetes.io/name": "argocd-repo-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-repo-server-token-qwm7h\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-12T08:35:06Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2022-07-12T08:35:06Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-repo-server-dockercfg-rzmwd\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2022-07-12T08:35:06Z"
          }
        ],
        "name": "argocd-repo-server",
        "namespace": "argocd",
        "resourceVersion": "251093600",
        "uid": "37d6cd98-11b3-44c5-9ec8-5ae46c6e0c82"
      },
      "imagePullSecrets": [{ "name": "argocd-repo-server-dockercfg-rzmwd" }],
      "secrets": [
        { "name": "argocd-repo-server-token-qwm7h" },
        { "name": "argocd-repo-server-dockercfg-rzmwd" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:21Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:secrets": {
                ".": {},
                "k:{\"name\":\"argocd-server-token-4tgbt\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:21Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:21Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:imagePullSecrets": {},
              "f:secrets": {
                "k:{\"name\":\"argocd-server-dockercfg-7jss9\"}": {
                  ".": {},
                  "f:name": {}
                }
              }
            },
            "manager": "openshift-controller-manager",
            "operation": "Update",
            "time": "2021-05-27T11:16:21Z"
          }
        ],
        "name": "argocd-server",
        "namespace": "argocd",
        "resourceVersion": "55666",
        "uid": "474b0251-beb6-4837-b306-fa102ad42a9d"
      },
      "imagePullSecrets": [{ "name": "argocd-server-dockercfg-7jss9" }],
      "secrets": [
        { "name": "argocd-server-token-4tgbt" },
        { "name": "argocd-server-dockercfg-7jss9" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "creationTimestamp": "2021-05-27T11:16:14Z",
        "name": "builder",
        "namespace": "argocd",
        "resourceVersion": "55517",
        "uid": "7bbb20af-39c7-4607-8855-95d2f7fc8a81"
      },
      "imagePullSecrets": [{ "name": "builder-dockercfg-kzhvz" }],
      "secrets": [
        { "name": "builder-token-9lbg5" },
        { "name": "builder-dockercfg-kzhvz" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "creationTimestamp": "2021-05-27T11:16:14Z",
        "name": "default",
        "namespace": "argocd",
        "resourceVersion": "55520",
        "uid": "5d33079a-5608-4df1-9a29-47e6f568ed65"
      },
      "imagePullSecrets": [{ "name": "default-dockercfg-cr28h" }],
      "secrets": [
        { "name": "default-token-4zxs9" },
        { "name": "default-dockercfg-cr28h" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "creationTimestamp": "2021-05-27T11:16:14Z",
        "name": "deployer",
        "namespace": "argocd",
        "resourceVersion": "55519",
        "uid": "f1d3de4e-279c-4fc2-95be-a8ecb41cb283"
      },
      "imagePullSecrets": [{ "name": "deployer-dockercfg-6px7w" }],
      "secrets": [
        { "name": "deployer-token-49sw7" },
        { "name": "deployer-dockercfg-6px7w" }
      ]
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "creationTimestamp": "2021-07-20T12:06:55Z",
        "name": "pipeline",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "operator.tekton.dev/v1alpha1",
            "kind": "TektonInstallerSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "rhosp-rbac-pnjlq",
            "uid": "1b4b11f4-fb8c-4c84-b871-7024b20ae7ae"
          }
        ],
        "resourceVersion": "270926105",
        "uid": "3a82cac4-6726-4b5d-ad0f-2bb45ada7e75"
      },
      "imagePullSecrets": [{ "name": "pipeline-dockercfg-zs459" }],
      "secrets": [
        { "name": "pipeline-token-mjnq4" },
        { "name": "pipeline-dockercfg-zs459" }
      ]
    }
  ],
  "apiServices": null,
  "configMaps": [
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"dex.config\":\"connectors:\\n  # GitHub enterprise example\\n  - type: github\\n    id: github\\n    name: GitHub\\n    config:\\n      hostName: github.net\\n      clientID: 02d01b261a8e748ce87b\\n      clientSecret: $dex.github.clientSecret\\n      orgs:\\n      - name: demo-CSS-Ops\\n        teams:\\n        - viewers\\n        - devops-toolchain-admins\\n\",\"repositories\":\"- name: gitops-toolchain-infra\\n  type: git\\n  url: git@github.net:demo-CSS-Ops/gitops-toolchain-infra.git\\n- name: gitops-toolchain-ega\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-ega.git\\n- name: gitops-toolchain-demo-css\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-demo-css.git\\n- name: gitops-toolchain-dkv\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-dkv.git\\n- name: demo-nexus\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/demo-nexus.git\\n- name: demo-jenkins\\n  type: git\\n  url: git@github..net:demo-CSS-Ops/demo-jenkins.git\\n- name: demo-helm-hashicorp\\n  type: helm\\n  url: https://nexus.demo-css.demo-devops.net/repository/demo-helm-hashicorp/\\n- type: git\\n  url: https://github.com/grafana/helm-charts.git\\n\",\"repository.credentials\":\"- sshPrivateKeySecret:\\n    key: sshPrivateKey\\n    name: creds-250222738\\n  url: git@github..net:demo-CSS-Ops/\\n- passwordSecret:\\n    key: password\\n    name: creds-2399356179\\n  url: https://nexus.demo-css.demo-devops.net/\\n  usernameSecret:\\n    key: username\\n    name: creds-2399356179\\n\",\"resource.customizations\":\"bitnami.com/SealedSecret:\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Healthy\\\"\\n    hs.message = \\\"Controller doesn't report resource status\\\"\\n    return hs\\nnetworking.k8s.io/Ingress:\\n  health.lua: |\\n      hs = {}\\n      hs.status = \\\"Healthy\\\"\\n      return hs\\n\",\"url\":\"https://argocd.cluster.demo-devops.net\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":\"2021-05-27T11:16:26Z\",\"labels\":{\"app.kubernetes.io/name\":\"argocd-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-cm\",\"namespace\":\"argocd\",\"resourceVersion\":\"560752076\",\"uid\":\"f7726ce4-4109-46e5-b5c3-1375ce417293\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:26Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:46Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { "f:repositories": {}, "f:repository.credentials": {} }
            },
            "manager": "argocd-server",
            "operation": "Update",
            "time": "2021-11-11T08:30:45Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { "f:resource.customizations": {}, "f:url": {} }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-01-05T13:19:32Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { ".": {}, "f:dex.config": {} },
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-09-07T10:10:57Z"
          }
        ],
        "name": "argocd-cm",
        "namespace": "argocd",
        "resourceVersion": "854063519",
        "uid": "f7726ce4-4109-46e5-b5c3-1375ce417293"
      },
      "data": {
        "dex.config": "connectors:\n  # GitHub enterprise example\n  - type: github\n    id: github-\n    name: GitHub\n    config:\n      hostName: github..net\n      clientID: 02d01b261a8e748ce87b\n      clientSecret: $dex.github.clientSecret\n      orgs:\n      - name: demo-CSS-Ops\n        teams:\n        - viewers\n        - devops-toolchain-admins\n",
        "repositories": "- name: gitops-toolchain-infra\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-infra.git\n- name: gitops-toolchain-ega\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-ega.git\n- name: gitops-toolchain-demo-css\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-demo-css.git\n- name: gitops-toolchain-dkv\n  type: git\n  url: git@github..net:demo-CSS-Ops/gitops-toolchain-dkv.git\n- name: demo-nexus\n  type: git\n  url: git@github..net:demo-CSS-Ops/demo-nexus.git\n- name: demo-jenkins\n  type: git\n  url: git@github..net:demo-CSS-Ops/demo-jenkins.git\n- name: demo-helm-hashicorp\n  type: helm\n  url: https://nexus.demo-css.demo-devops.net/repository/demo-helm-hashicorp/\n- type: git\n  url: https://github.com/grafana/helm-charts.git\n",
        "repository.credentials": "- sshPrivateKeySecret:\n    key: sshPrivateKey\n    name: creds-250222738\n  url: git@github..net:demo-CSS-Ops/\n- passwordSecret:\n    key: password\n    name: creds-2399356179\n  url: https://nexus.demo-css.demo-devops.net/\n  usernameSecret:\n    key: username\n    name: creds-2399356179\n",
        "resource.customizations": "bitnami.com/SealedSecret:\n  health.lua: |\n    hs = {}\n    hs.status = \"Healthy\"\n    hs.message = \"Controller doesn't report resource status\"\n    return hs\nnetworking.k8s.io/Ingress:\n  health.lua: |\n      hs = {}\n      hs.status = \"Healthy\"\n      return hs\n",
        "url": "https://argocd.cluster.demo-devops.net"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"redis.server\":\"argocd-redis-ha-haproxy:6379\",\"server.insecure\":\"true\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-cmd-params-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-cmd-params-cm\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2022-07-12T08:39:56Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-cmd-params-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:redis.server": {},
                "f:server.insecure": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-05-31T12:28:51Z"
          }
        ],
        "name": "argocd-cmd-params-cm",
        "namespace": "argocd",
        "resourceVersion": "718314622",
        "uid": "92b82b46-732a-4805-b362-6907d169e0bf"
      },
      "data": {
        "redis.server": "argocd-redis-ha-haproxy:6379",
        "server.insecure": "true"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-gpg-keys-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-gpg-keys-cm\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:26Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-gpg-keys-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:26Z"
          }
        ],
        "name": "argocd-gpg-keys-cm",
        "namespace": "argocd",
        "resourceVersion": "55716",
        "uid": "85f0a48c-6c19-45bf-9b9e-7123c922600a"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"template.app-deployed\":\"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-health-degraded\":\"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-failed\":\"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-running\":\"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-status-unknown\":\"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |-\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n\",\"template.app-sync-succeeded\":\"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: \\\"[{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"{{ .app.metadata.name}}\\\\\\\",\\\\n  \\\\\\\"title_link\\\\\\\":\\\\\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\\\\\",\\\\n  \\\\\\\"color\\\\\\\": \\\\\\\"#18be52\\\\\\\",\\\\n  \\\\\\\"fields\\\\\\\": [\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Sync Status\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{.app.status.sync.status}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  },\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Repository\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{.app.spec.source.repoURL}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  }\\\\n  {{range $index, $c := .app.status.conditions}}\\\\n  {{if not $index}},{{end}}\\\\n  {{if $index}},{{end}}\\\\n  {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"{{$c.type}}\\\\\\\",\\\\n    \\\\\\\"value\\\\\\\": \\\\\\\"{{$c.message}}\\\\\\\",\\\\n    \\\\\\\"short\\\\\\\": true\\\\n  }\\\\n  {{end}}\\\\n  ]\\\\n}]    \\\"\\n\",\"trigger.on-deployed\":\"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.sync.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'\\n\",\"trigger.on-health-degraded\":\"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\\n\",\"trigger.on-sync-failed\":\"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\\n\",\"trigger.on-sync-running\":\"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\\n\",\"trigger.on-sync-status-unknown\":\"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\\n\",\"trigger.on-sync-succeeded\":\"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"name\":\"argocd-notifications-cm\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:18:29Z",
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:service.slack": {},
                "f:template.app-deployed": {},
                "f:template.app-health-degraded": {},
                "f:template.app-sync-failed": {},
                "f:template.app-sync-running": {},
                "f:template.app-sync-status-unknown": {},
                "f:template.app-sync-succeeded": {},
                "f:trigger.on-deployed": {},
                "f:trigger.on-health-degraded": {},
                "f:trigger.on-sync-failed": {},
                "f:trigger.on-sync-running": {},
                "f:trigger.on-sync-status-unknown": {},
                "f:trigger.on-sync-succeeded": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2021-05-27T11:18:34Z"
          }
        ],
        "name": "argocd-notifications-cm",
        "namespace": "argocd",
        "resourceVersion": "57040",
        "uid": "72f1767a-f810-46f8-a64d-f17e1bcbf322"
      },
      "data": {
        "service.slack": "{ apiURL: https://hooks.slack.com/services/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, token: $slack-token }",
        "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n",
        "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n",
        "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n",
        "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n",
        "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |-\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n",
        "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: \"[{\\n  \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n  \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n  \\\"color\\\": \\\"#18be52\\\",\\n  \\\"fields\\\": [\\n  {\\n    \\\"title\\\": \\\"Sync Status\\\",\\n    \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n    \\\"short\\\": true\\n  },\\n  {\\n    \\\"title\\\": \\\"Repository\\\",\\n    \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n    \\\"short\\\": true\\n  }\\n  {{range $index, $c := .app.status.conditions}}\\n  {{if not $index}},{{end}}\\n  {{if $index}},{{end}}\\n  {\\n    \\\"title\\\": \\\"{{$c.type}}\\\",\\n    \\\"value\\\": \\\"{{$c.message}}\\\",\\n    \\\"short\\\": true\\n  }\\n  {{end}}\\n  ]\\n}]    \"\n",
        "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.sync.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'\n",
        "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'\n",
        "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']\n",
        "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']\n",
        "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'\n",
        "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"policy.csv\":\"g, demo-CSS-Ops:devops-toolchain-admins, role:admin\\n\",\"policy.default\":\"role:readonly\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-rbac-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-rbac-cm\",\"namespace\":\"argocd\",\"selfLink\":\"/api/v1/namespaces/argocd/configmaps/argocd-rbac-cm\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:26Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-rbac-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:46Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { ".": {}, "f:policy.csv": {}, "f:policy.default": {} },
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2021-07-22T08:52:48Z"
          }
        ],
        "name": "argocd-rbac-cm",
        "namespace": "argocd",
        "resourceVersion": "27916971",
        "uid": "62f0e5fc-e90d-4470-9c85-c04ce0ec135a"
      },
      "data": {
        "policy.csv": "g, demo-CSS-Ops:devops-toolchain-admins, role:admin\n",
        "policy.default": "role:readonly"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"fix-split-brain.sh\":\"HOSTNAME=\\\"$(hostname)\\\"\\nINDEX=\\\"${HOSTNAME##*-}\\\"\\nSENTINEL_PORT=26379\\nANNOUNCE_IP=''\\nMASTER=''\\nMASTER_GROUP=\\\"argocd\\\"\\nQUORUM=\\\"2\\\"\\nREDIS_CONF=/data/conf/redis.conf\\nREDIS_PORT=6379\\nREDIS_TLS_PORT=\\nSENTINEL_CONF=/data/conf/sentinel.conf\\nSENTINEL_TLS_PORT=\\nSERVICE=argocd-redis-ha\\nSENTINEL_TLS_REPLICATION_ENABLED=false\\nREDIS_TLS_REPLICATION_ENABLED=false\\n\\nROLE=''\\nREDIS_MASTER=''\\n\\nset -eu\\nsentinel_get_master() {\\nset +e\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    else\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    fi\\nset -e\\n}\\n\\nsentinel_get_master_retry() {\\n    master=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        master=$(sentinel_get_master)\\n        if [ -n \\\"${master}\\\" ]; then\\n            break\\n        fi\\n        sleep $((sleep + i))\\n    done\\n    echo \\\"${master}\\\"\\n}\\n\\nidentify_master() {\\n    echo \\\"Identifying redis master (get-master-addr-by-name)..\\\"\\n    echo \\\"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\\\"\\n    MASTER=\\\"$(sentinel_get_master_retry 3)\\\"\\n    if [ -n \\\"${MASTER}\\\" ]; then\\n        echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n    else\\n        echo \\\"  $(date) Did not find redis master (${MASTER})\\\"\\n    fi\\n}\\n\\nsentinel_update() {\\n    echo \\\"Updating sentinel config..\\\"\\n    echo \\\"  evaluating sentinel id (\\\\${SENTINEL_ID_${INDEX}})\\\"\\n    eval MY_SENTINEL_ID=\\\"\\\\$SENTINEL_ID_${INDEX}\\\"\\n    echo \\\"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\\\"\\n    sed -i \\\"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    if [ \\\"$SENTINEL_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    else\\n        echo \\\"  redis master (${1}:${REDIS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    fi\\n    echo \\\"sentinel announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_TLS_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    else\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    fi\\n}\\n\\nredis_update() {\\n    echo \\\"Updating redis config..\\\"\\n    if [ \\\"$REDIS_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_TLS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_TLS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    else\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    fi\\n    echo \\\"slave-announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ncopy_config() {\\n    echo \\\"Copying default redis config..\\\"\\n    echo \\\"  to '${REDIS_CONF}'\\\"\\n    cp /readonly-config/redis.conf \\\"${REDIS_CONF}\\\"\\n    echo \\\"Copying default sentinel config..\\\"\\n    echo \\\"  to '${SENTINEL_CONF}'\\\"\\n    cp /readonly-config/sentinel.conf \\\"${SENTINEL_CONF}\\\"\\n}\\n\\nsetup_defaults() {\\n    echo \\\"Setting up defaults..\\\"\\n    echo \\\"  using statefulset index (${INDEX})\\\"\\n    if [ \\\"${INDEX}\\\" = \\\"0\\\" ]; then\\n        echo \\\"Setting this pod as master for redis and sentinel..\\\"\\n        echo \\\"  using announce (${ANNOUNCE_IP})\\\"\\n        redis_update \\\"${ANNOUNCE_IP}\\\"\\n        sentinel_update \\\"${ANNOUNCE_IP}\\\"\\n        echo \\\"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\\\"\\n        sed -i \\\"s/^.*slaveof.*//\\\" \\\"${REDIS_CONF}\\\"\\n    else\\n        echo \\\"Getting redis master ip..\\\"\\n        echo \\\"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\\\"\\n        DEFAULT_MASTER=\\\"$(getent_hosts 0 | awk '{ print $1 }')\\\"\\n        if [ -z \\\"${DEFAULT_MASTER}\\\" ]; then\\n            echo \\\"Error: Unable to resolve redis master (getent hosts).\\\"\\n            exit 1\\n        fi\\n        echo \\\"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\\\"\\n        echo \\\"Setting default slave config for redis and sentinel..\\\"\\n        echo \\\"  using master ip (${DEFAULT_MASTER})\\\"\\n        redis_update \\\"${DEFAULT_MASTER}\\\"\\n        sentinel_update \\\"${DEFAULT_MASTER}\\\"\\n    fi\\n}\\n\\nredis_ping() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\\n    else\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_PORT}\\\" ping\\n    fi\\nset -e\\n}\\n\\nredis_ping_retry() {\\n    ping=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        if [ \\\"$(redis_ping)\\\" = \\\"PONG\\\" ]; then\\n           ping='PONG'\\n           break\\n        fi\\n        sleep $((sleep + i))\\n        MASTER=$(sentinel_get_master)\\n    done\\n    echo \\\"${ping}\\\"\\n}\\n\\nfind_master() {\\n    echo \\\"Verifying redis master..\\\"\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"  ping (${MASTER}:${REDIS_TLS_PORT})\\\"\\n    else\\n        echo \\\"  ping (${MASTER}:${REDIS_PORT})\\\"\\n    fi\\n    if [ \\\"$(redis_ping_retry 3)\\\" != \\\"PONG\\\" ]; then\\n        echo \\\"  $(date) Can't ping redis master (${MASTER})\\\"\\n        echo \\\"Attempting to force failover (sentinel failover)..\\\"\\n\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        else\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        fi\\n\\n        echo \\\"Hold on for 10sec\\\"\\n        sleep 10\\n        echo \\\"We should get redis master's ip now. Asking (get-master-addr-by-name)..\\\"\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        else\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        fi\\n        MASTER=\\\"$(sentinel_get_master)\\\"\\n        if [ \\\"${MASTER}\\\" ]; then\\n            echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n            echo \\\"Updating redis and sentinel config..\\\"\\n            sentinel_update \\\"${MASTER}\\\"\\n            redis_update \\\"${MASTER}\\\"\\n        else\\n            echo \\\"$(date) Error: Could not failover, exiting...\\\"\\n            exit 1\\n        fi\\n    else\\n        echo \\\"  $(date) Found reachable redis master (${MASTER})\\\"\\n        echo \\\"Updating redis and sentinel config..\\\"\\n        sentinel_update \\\"${MASTER}\\\"\\n        redis_update \\\"${MASTER}\\\"\\n    fi\\n}\\n\\nredis_ro_update() {\\n    echo \\\"Updating read-only redis config..\\\"\\n    echo \\\"  redis.conf set 'replica-priority 0'\\\"\\n    echo \\\"replica-priority 0\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ngetent_hosts() {\\n    index=${1:-${INDEX}}\\n    service=\\\"${SERVICE}-announce-${index}\\\"\\n    host=$(getent hosts \\\"${service}\\\")\\n    echo \\\"${host}\\\"\\n}\\n\\nidentify_announce_ip() {\\n    echo \\\"Identify announce ip for this pod..\\\"\\n    echo \\\"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\\\"\\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\\n    echo \\\"  identified announce (${ANNOUNCE_IP})\\\"\\n}\\n\\nredis_role() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        ROLE=$(redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep role | sed 's/role://' | sed 's/\\\\r//')\\n    else\\n        ROLE=$(redis-cli  -p \\\"${REDIS_PORT}\\\" info | grep role | sed 's/role://' | sed 's/\\\\r//')\\n    fi\\nset -e\\n}\\n\\nidentify_redis_master() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        REDIS_MASTER=$(redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep master_host | sed 's/master_host://' | sed 's/\\\\r//')\\n    else\\n        REDIS_MASTER=$(redis-cli  -p \\\"${REDIS_PORT}\\\" info | grep master_host | sed 's/master_host://' | sed 's/\\\\r//')\\n    fi\\nset -e\\n}\\n\\nreinit() {\\nset +e\\n    sh /readonly-config/init.sh\\n\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"shutdown\\\" | redis-cli  -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key\\n    else\\n        echo \\\"shutdown\\\" | redis-cli  -p \\\"${REDIS_PORT}\\\"\\n    fi\\nset -e\\n}\\n\\nidentify_announce_ip\\n\\nwhile [ -z \\\"${ANNOUNCE_IP}\\\" ]; do\\n    echo \\\"Error: Could not resolve the announce ip for this pod.\\\"\\n    sleep 30\\n    identify_announce_ip\\ndone\\n\\nwhile true; do\\n    sleep 60\\n\\n    # where is redis master\\n    identify_master\\n\\n    if [ \\\"$MASTER\\\" = \\\"$ANNOUNCE_IP\\\" ]; then\\n        redis_role\\n        if [ \\\"$ROLE\\\" != \\\"master\\\" ]; then\\n            reinit\\n        fi\\n    elif [ \\\"${MASTER}\\\" ]; then\\n        identify_redis_master\\n        if [ \\\"$REDIS_MASTER\\\" != \\\"$MASTER\\\" ]; then\\n            reinit\\n        fi\\n    fi\\ndone\\n\",\"haproxy.cfg\":\"defaults REDIS\\n  mode tcp\\n  timeout connect 4s\\n  timeout server 6m\\n  timeout client 6m\\n  timeout check 2s\\n\\nlisten health_check_http_url\\n  bind :8888  \\n  mode http\\n  monitor-uri /healthz\\n  option      dontlognull\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_0\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE0\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_1\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE1\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n# Check Sentinel and whether they are nominated master\\nbackend check_if_redis_is_master_2\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send SENTINEL\\\\ get-master-addr-by-name\\\\ argocd\\\\r\\\\n\\n  tcp-check expect string REPLACE_ANNOUNCE2\\n  tcp-check send QUIT\\\\r\\\\n\\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\\n\\n# decide redis backend to use\\n#master\\nfrontend ft_redis_master\\n  bind :6379 \\n  use_backend bk_redis_master\\n# Check all redis servers to see if they think they are master\\nbackend bk_redis_master\\n  mode tcp\\n  option tcp-check\\n  tcp-check connect\\n  tcp-check send PING\\\\r\\\\n\\n  tcp-check expect string +PONG\\n  tcp-check send info\\\\ replication\\\\r\\\\n\\n  tcp-check expect string role:master\\n  tcp-check send QUIT\\\\r\\\\n\\n  tcp-check expect string +OK\\n  use-server R0 if { srv_is_up(R0) } { nbsrv(check_if_redis_is_master_0) ge 2 }\\n  server R0 argocd-redis-ha-announce-0:6379 check inter 3s fall 1 rise 1\\n  use-server R1 if { srv_is_up(R1) } { nbsrv(check_if_redis_is_master_1) ge 2 }\\n  server R1 argocd-redis-ha-announce-1:6379 check inter 3s fall 1 rise 1\\n  use-server R2 if { srv_is_up(R2) } { nbsrv(check_if_redis_is_master_2) ge 2 }\\n  server R2 argocd-redis-ha-announce-2:6379 check inter 3s fall 1 rise 1\\nfrontend stats\\n  mode http\\n  bind :9101 \\n  http-request use-service prometheus-exporter if { path /metrics }\\n  stats enable\\n  stats uri /stats\\n  stats refresh 10s\\n\",\"haproxy_init.sh\":\"HAPROXY_CONF=/data/haproxy.cfg\\ncp /readonly/haproxy.cfg \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-0 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-0 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP0=$(getent hosts \\\"argocd-redis-ha-announce-0\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP0\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-0\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE0/$ANNOUNCE_IP0/\\\" \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-1 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-1 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP1=$(getent hosts \\\"argocd-redis-ha-announce-1\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP1\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-1\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE1/$ANNOUNCE_IP1/\\\" \\\"$HAPROXY_CONF\\\"\\nfor loop in $(seq 1 10); do\\n  getent hosts argocd-redis-ha-announce-2 \\u0026\\u0026 break\\n  echo \\\"Waiting for service argocd-redis-ha-announce-2 to be ready ($loop) ...\\\" \\u0026\\u0026 sleep 1\\ndone\\nANNOUNCE_IP2=$(getent hosts \\\"argocd-redis-ha-announce-2\\\" | awk '{ print $1 }')\\nif [ -z \\\"$ANNOUNCE_IP2\\\" ]; then\\n  echo \\\"Could not resolve the announce ip for argocd-redis-ha-announce-2\\\"\\n  exit 1\\nfi\\nsed -i \\\"s/REPLACE_ANNOUNCE2/$ANNOUNCE_IP2/\\\" \\\"$HAPROXY_CONF\\\"\\n\",\"init.sh\":\"echo \\\"$(date) Start...\\\"\\nHOSTNAME=\\\"$(hostname)\\\"\\nINDEX=\\\"${HOSTNAME##*-}\\\"\\nSENTINEL_PORT=26379\\nANNOUNCE_IP=''\\nMASTER=''\\nMASTER_GROUP=\\\"argocd\\\"\\nQUORUM=\\\"2\\\"\\nREDIS_CONF=/data/conf/redis.conf\\nREDIS_PORT=6379\\nREDIS_TLS_PORT=\\nSENTINEL_CONF=/data/conf/sentinel.conf\\nSENTINEL_TLS_PORT=\\nSERVICE=argocd-redis-ha\\nSENTINEL_TLS_REPLICATION_ENABLED=false\\nREDIS_TLS_REPLICATION_ENABLED=false\\n\\nset -eu\\nsentinel_get_master() {\\nset +e\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    else\\n        redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel get-master-addr-by-name \\\"${MASTER_GROUP}\\\" |\\\\\\n        grep -E '((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?s*$))'\\n    fi\\nset -e\\n}\\n\\nsentinel_get_master_retry() {\\n    master=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        master=$(sentinel_get_master)\\n        if [ -n \\\"${master}\\\" ]; then\\n            break\\n        fi\\n        sleep $((sleep + i))\\n    done\\n    echo \\\"${master}\\\"\\n}\\n\\nidentify_master() {\\n    echo \\\"Identifying redis master (get-master-addr-by-name)..\\\"\\n    echo \\\"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\\\"\\n    MASTER=\\\"$(sentinel_get_master_retry 3)\\\"\\n    if [ -n \\\"${MASTER}\\\" ]; then\\n        echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n    else\\n        echo \\\"  $(date) Did not find redis master (${MASTER})\\\"\\n    fi\\n}\\n\\nsentinel_update() {\\n    echo \\\"Updating sentinel config..\\\"\\n    echo \\\"  evaluating sentinel id (\\\\${SENTINEL_ID_${INDEX}})\\\"\\n    eval MY_SENTINEL_ID=\\\"\\\\$SENTINEL_ID_${INDEX}\\\"\\n    echo \\\"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\\\"\\n    sed -i \\\"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    if [ \\\"$SENTINEL_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    else\\n        echo \\\"  redis master (${1}:${REDIS_PORT})\\\"\\n        sed -i \\\"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\\\\\n/\\\" \\\"${SENTINEL_CONF}\\\"\\n    fi\\n    echo \\\"sentinel announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_TLS_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    else\\n        echo \\\"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\\\"\\n        echo \\\"sentinel announce-port ${SENTINEL_PORT}\\\" \\u003e\\u003e ${SENTINEL_CONF}\\n    fi\\n}\\n\\nredis_update() {\\n    echo \\\"Updating redis config..\\\"\\n    if [ \\\"$REDIS_TLS_REPLICATION_ENABLED\\\" = true ]; then\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_TLS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_TLS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    else\\n        echo \\\"  we are slave of redis master (${1}:${REDIS_PORT})\\\"\\n        echo \\\"slaveof ${1} ${REDIS_PORT}\\\" \\u003e\\u003e \\\"${REDIS_CONF}\\\"\\n        echo \\\"slave-announce-port ${REDIS_PORT}\\\" \\u003e\\u003e ${REDIS_CONF}\\n    fi\\n    echo \\\"slave-announce-ip ${ANNOUNCE_IP}\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ncopy_config() {\\n    echo \\\"Copying default redis config..\\\"\\n    echo \\\"  to '${REDIS_CONF}'\\\"\\n    cp /readonly-config/redis.conf \\\"${REDIS_CONF}\\\"\\n    echo \\\"Copying default sentinel config..\\\"\\n    echo \\\"  to '${SENTINEL_CONF}'\\\"\\n    cp /readonly-config/sentinel.conf \\\"${SENTINEL_CONF}\\\"\\n}\\n\\nsetup_defaults() {\\n    echo \\\"Setting up defaults..\\\"\\n    echo \\\"  using statefulset index (${INDEX})\\\"\\n    if [ \\\"${INDEX}\\\" = \\\"0\\\" ]; then\\n        echo \\\"Setting this pod as master for redis and sentinel..\\\"\\n        echo \\\"  using announce (${ANNOUNCE_IP})\\\"\\n        redis_update \\\"${ANNOUNCE_IP}\\\"\\n        sentinel_update \\\"${ANNOUNCE_IP}\\\"\\n        echo \\\"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\\\"\\n        sed -i \\\"s/^.*slaveof.*//\\\" \\\"${REDIS_CONF}\\\"\\n    else\\n        echo \\\"Getting redis master ip..\\\"\\n        echo \\\"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\\\"\\n        DEFAULT_MASTER=\\\"$(getent_hosts 0 | awk '{ print $1 }')\\\"\\n        if [ -z \\\"${DEFAULT_MASTER}\\\" ]; then\\n            echo \\\"Error: Unable to resolve redis master (getent hosts).\\\"\\n            exit 1\\n        fi\\n        echo \\\"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\\\"\\n        echo \\\"Setting default slave config for redis and sentinel..\\\"\\n        echo \\\"  using master ip (${DEFAULT_MASTER})\\\"\\n        redis_update \\\"${DEFAULT_MASTER}\\\"\\n        sentinel_update \\\"${DEFAULT_MASTER}\\\"\\n    fi\\n}\\n\\nredis_ping() {\\nset +e\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_TLS_PORT}\\\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\\n    else\\n        redis-cli -h \\\"${MASTER}\\\" -p \\\"${REDIS_PORT}\\\" ping\\n    fi\\nset -e\\n}\\n\\nredis_ping_retry() {\\n    ping=''\\n    retry=${1}\\n    sleep=3\\n    for i in $(seq 1 \\\"${retry}\\\"); do\\n        if [ \\\"$(redis_ping)\\\" = \\\"PONG\\\" ]; then\\n           ping='PONG'\\n           break\\n        fi\\n        sleep $((sleep + i))\\n        MASTER=$(sentinel_get_master)\\n    done\\n    echo \\\"${ping}\\\"\\n}\\n\\nfind_master() {\\n    echo \\\"Verifying redis master..\\\"\\n    if [ \\\"$REDIS_PORT\\\" -eq 0 ]; then\\n        echo \\\"  ping (${MASTER}:${REDIS_TLS_PORT})\\\"\\n    else\\n        echo \\\"  ping (${MASTER}:${REDIS_PORT})\\\"\\n    fi\\n    if [ \\\"$(redis_ping_retry 3)\\\" != \\\"PONG\\\" ]; then\\n        echo \\\"  $(date) Can't ping redis master (${MASTER})\\\"\\n        echo \\\"Attempting to force failover (sentinel failover)..\\\"\\n\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_TLS_PORT}\\\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        else\\n            echo \\\"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n            if redis-cli -h \\\"${SERVICE}\\\" -p \\\"${SENTINEL_PORT}\\\"  sentinel failover \\\"${MASTER_GROUP}\\\" | grep -q 'NOGOODSLAVE' ; then\\n                echo \\\"  $(date) Failover returned with 'NOGOODSLAVE'\\\"\\n                echo \\\"Setting defaults for this pod..\\\"\\n                setup_defaults\\n                return 0\\n            fi\\n        fi\\n\\n        echo \\\"Hold on for 10sec\\\"\\n        sleep 10\\n        echo \\\"We should get redis master's ip now. Asking (get-master-addr-by-name)..\\\"\\n        if [ \\\"$SENTINEL_PORT\\\" -eq 0 ]; then\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        else\\n            echo \\\"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\\\"\\n        fi\\n        MASTER=\\\"$(sentinel_get_master)\\\"\\n        if [ \\\"${MASTER}\\\" ]; then\\n            echo \\\"  $(date) Found redis master (${MASTER})\\\"\\n            echo \\\"Updating redis and sentinel config..\\\"\\n            sentinel_update \\\"${MASTER}\\\"\\n            redis_update \\\"${MASTER}\\\"\\n        else\\n            echo \\\"$(date) Error: Could not failover, exiting...\\\"\\n            exit 1\\n        fi\\n    else\\n        echo \\\"  $(date) Found reachable redis master (${MASTER})\\\"\\n        echo \\\"Updating redis and sentinel config..\\\"\\n        sentinel_update \\\"${MASTER}\\\"\\n        redis_update \\\"${MASTER}\\\"\\n    fi\\n}\\n\\nredis_ro_update() {\\n    echo \\\"Updating read-only redis config..\\\"\\n    echo \\\"  redis.conf set 'replica-priority 0'\\\"\\n    echo \\\"replica-priority 0\\\" \\u003e\\u003e ${REDIS_CONF}\\n}\\n\\ngetent_hosts() {\\n    index=${1:-${INDEX}}\\n    service=\\\"${SERVICE}-announce-${index}\\\"\\n    host=$(getent hosts \\\"${service}\\\")\\n    echo \\\"${host}\\\"\\n}\\n\\nidentify_announce_ip() {\\n    echo \\\"Identify announce ip for this pod..\\\"\\n    echo \\\"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\\\"\\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\\n    echo \\\"  identified announce (${ANNOUNCE_IP})\\\"\\n}\\n\\nmkdir -p /data/conf/\\n\\necho \\\"Initializing config..\\\"\\ncopy_config\\n\\n# where is redis master\\nidentify_master\\n\\nidentify_announce_ip\\n\\nif [ -z \\\"${ANNOUNCE_IP}\\\" ]; then\\n    \\\"Error: Could not resolve the announce ip for this pod.\\\"\\n    exit 1\\nelif [ \\\"${MASTER}\\\" ]; then\\n    find_master\\nelse\\n    setup_defaults\\nfi\\n\\nif [ \\\"${AUTH:-}\\\" ]; then\\n    echo \\\"Setting redis auth values..\\\"\\n    ESCAPED_AUTH=$(echo \\\"${AUTH}\\\" | sed -e 's/[\\\\/\\u0026]/\\\\\\\\\\u0026/g');\\n    sed -i \\\"s/replace-default-auth/${ESCAPED_AUTH}/\\\" \\\"${REDIS_CONF}\\\" \\\"${SENTINEL_CONF}\\\"\\nfi\\n\\nif [ \\\"${SENTINELAUTH:-}\\\" ]; then\\n    echo \\\"Setting sentinel auth values\\\"\\n    ESCAPED_AUTH_SENTINEL=$(echo \\\"$SENTINELAUTH\\\" | sed -e 's/[\\\\/\\u0026]/\\\\\\\\\\u0026/g');\\n    sed -i \\\"s/replace-default-sentinel-auth/${ESCAPED_AUTH_SENTINEL}/\\\" \\\"$SENTINEL_CONF\\\"\\nfi\\n\\necho \\\"$(date) Ready...\\\"\\n\",\"redis.conf\":\"dir \\\"/data\\\"\\nport 6379\\nrename-command FLUSHDB \\\"\\\"\\nrename-command FLUSHALL \\\"\\\"\\nbind 0.0.0.0\\nmaxmemory 0\\nmaxmemory-policy volatile-lru\\nmin-replicas-max-lag 5\\nmin-replicas-to-write 1\\nrdbchecksum yes\\nrdbcompression yes\\nrepl-diskless-sync yes\\nsave \\\"\\\"\\n\",\"sentinel.conf\":\"dir \\\"/data\\\"\\nport 26379\\nbind 0.0.0.0\\n    sentinel down-after-milliseconds argocd 10000\\n    sentinel failover-timeout argocd 180000\\n    maxclients 10000\\n    sentinel parallel-syncs argocd 5\\n\",\"trigger-failover-if-master.sh\":\"get_redis_role() {\\n  is_master=$(\\n    redis-cli \\\\\\n      -h localhost \\\\\\n      -p 6379 \\\\\\n      info | grep -c 'role:master' || true\\n  )\\n}\\nget_redis_role\\nif [[ \\\"$is_master\\\" -eq 1 ]]; then\\n  echo \\\"This node is currently master, we trigger a failover.\\\"\\n  response=$(\\n    redis-cli \\\\\\n      -h localhost \\\\\\n      -p 26379 \\\\\\n      SENTINEL failover argocd\\n  )\\n  if [[ \\\"$response\\\" != \\\"OK\\\" ]] ; then\\n    echo \\\"$response\\\"\\n    exit 1\\n  fi\\n  timeout=30\\n  while [[ \\\"$is_master\\\" -eq 1 \\u0026\\u0026 $timeout -gt 0 ]]; do\\n    sleep 1\\n    get_redis_role\\n    timeout=$((timeout - 1))\\n  done\\n  echo \\\"Failover successful\\\"\\nfi\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-configmap\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:27Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {},
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:27Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                "f:fix-split-brain.sh": {},
                "f:haproxy.cfg": {},
                "f:haproxy_init.sh": {},
                "f:init.sh": {},
                "f:redis.conf": {},
                "f:sentinel.conf": {},
                "f:trigger-failover-if-master.sh": {}
              },
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:06Z"
          }
        ],
        "name": "argocd-redis-ha-configmap",
        "namespace": "argocd",
        "resourceVersion": "940154015",
        "uid": "1a317f7b-ab52-4b76-b631-fb368d23bac8"
      },
      "data": {
        "fix-split-brain.sh": "HOSTNAME=\"$(hostname)\"\nINDEX=\"${HOSTNAME##*-}\"\nSENTINEL_PORT=26379\nANNOUNCE_IP=''\nMASTER=''\nMASTER_GROUP=\"argocd\"\nQUORUM=\"2\"\nREDIS_CONF=/data/conf/redis.conf\nREDIS_PORT=6379\nREDIS_TLS_PORT=\nSENTINEL_CONF=/data/conf/sentinel.conf\nSENTINEL_TLS_PORT=\nSERVICE=argocd-redis-ha\nSENTINEL_TLS_REPLICATION_ENABLED=false\nREDIS_TLS_REPLICATION_ENABLED=false\n\nROLE=''\nREDIS_MASTER=''\n\nset -eu\nsentinel_get_master() {\nset +e\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    else\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    fi\nset -e\n}\n\nsentinel_get_master_retry() {\n    master=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        master=$(sentinel_get_master)\n        if [ -n \"${master}\" ]; then\n            break\n        fi\n        sleep $((sleep + i))\n    done\n    echo \"${master}\"\n}\n\nidentify_master() {\n    echo \"Identifying redis master (get-master-addr-by-name)..\"\n    echo \"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\"\n    MASTER=\"$(sentinel_get_master_retry 3)\"\n    if [ -n \"${MASTER}\" ]; then\n        echo \"  $(date) Found redis master (${MASTER})\"\n    else\n        echo \"  $(date) Did not find redis master (${MASTER})\"\n    fi\n}\n\nsentinel_update() {\n    echo \"Updating sentinel config..\"\n    echo \"  evaluating sentinel id (\\${SENTINEL_ID_${INDEX}})\"\n    eval MY_SENTINEL_ID=\"\\$SENTINEL_ID_${INDEX}\"\n    echo \"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\"\n    sed -i \"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\n/\" \"${SENTINEL_CONF}\"\n    if [ \"$SENTINEL_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  redis master (${1}:${REDIS_TLS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    else\n        echo \"  redis master (${1}:${REDIS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    fi\n    echo \"sentinel announce-ip ${ANNOUNCE_IP}\" >> ${SENTINEL_CONF}\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_TLS_PORT}\" >> ${SENTINEL_CONF}\n    else\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_PORT}\" >> ${SENTINEL_CONF}\n    fi\n}\n\nredis_update() {\n    echo \"Updating redis config..\"\n    if [ \"$REDIS_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_TLS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_TLS_PORT}\" >> ${REDIS_CONF}\n    else\n        echo \"  we are slave of redis master (${1}:${REDIS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_PORT}\" >> ${REDIS_CONF}\n    fi\n    echo \"slave-announce-ip ${ANNOUNCE_IP}\" >> ${REDIS_CONF}\n}\n\ncopy_config() {\n    echo \"Copying default redis config..\"\n    echo \"  to '${REDIS_CONF}'\"\n    cp /readonly-config/redis.conf \"${REDIS_CONF}\"\n    echo \"Copying default sentinel config..\"\n    echo \"  to '${SENTINEL_CONF}'\"\n    cp /readonly-config/sentinel.conf \"${SENTINEL_CONF}\"\n}\n\nsetup_defaults() {\n    echo \"Setting up defaults..\"\n    echo \"  using statefulset index (${INDEX})\"\n    if [ \"${INDEX}\" = \"0\" ]; then\n        echo \"Setting this pod as master for redis and sentinel..\"\n        echo \"  using announce (${ANNOUNCE_IP})\"\n        redis_update \"${ANNOUNCE_IP}\"\n        sentinel_update \"${ANNOUNCE_IP}\"\n        echo \"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\"\n        sed -i \"s/^.*slaveof.*//\" \"${REDIS_CONF}\"\n    else\n        echo \"Getting redis master ip..\"\n        echo \"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\"\n        DEFAULT_MASTER=\"$(getent_hosts 0 | awk '{ print $1 }')\"\n        if [ -z \"${DEFAULT_MASTER}\" ]; then\n            echo \"Error: Unable to resolve redis master (getent hosts).\"\n            exit 1\n        fi\n        echo \"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\"\n        echo \"Setting default slave config for redis and sentinel..\"\n        echo \"  using master ip (${DEFAULT_MASTER})\"\n        redis_update \"${DEFAULT_MASTER}\"\n        sentinel_update \"${DEFAULT_MASTER}\"\n    fi\n}\n\nredis_ping() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\n    else\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_PORT}\" ping\n    fi\nset -e\n}\n\nredis_ping_retry() {\n    ping=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        if [ \"$(redis_ping)\" = \"PONG\" ]; then\n           ping='PONG'\n           break\n        fi\n        sleep $((sleep + i))\n        MASTER=$(sentinel_get_master)\n    done\n    echo \"${ping}\"\n}\n\nfind_master() {\n    echo \"Verifying redis master..\"\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"  ping (${MASTER}:${REDIS_TLS_PORT})\"\n    else\n        echo \"  ping (${MASTER}:${REDIS_PORT})\"\n    fi\n    if [ \"$(redis_ping_retry 3)\" != \"PONG\" ]; then\n        echo \"  $(date) Can't ping redis master (${MASTER})\"\n        echo \"Attempting to force failover (sentinel failover)..\"\n\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        else\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        fi\n\n        echo \"Hold on for 10sec\"\n        sleep 10\n        echo \"We should get redis master's ip now. Asking (get-master-addr-by-name)..\"\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n        else\n            echo \"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n        fi\n        MASTER=\"$(sentinel_get_master)\"\n        if [ \"${MASTER}\" ]; then\n            echo \"  $(date) Found redis master (${MASTER})\"\n            echo \"Updating redis and sentinel config..\"\n            sentinel_update \"${MASTER}\"\n            redis_update \"${MASTER}\"\n        else\n            echo \"$(date) Error: Could not failover, exiting...\"\n            exit 1\n        fi\n    else\n        echo \"  $(date) Found reachable redis master (${MASTER})\"\n        echo \"Updating redis and sentinel config..\"\n        sentinel_update \"${MASTER}\"\n        redis_update \"${MASTER}\"\n    fi\n}\n\nredis_ro_update() {\n    echo \"Updating read-only redis config..\"\n    echo \"  redis.conf set 'replica-priority 0'\"\n    echo \"replica-priority 0\" >> ${REDIS_CONF}\n}\n\ngetent_hosts() {\n    index=${1:-${INDEX}}\n    service=\"${SERVICE}-announce-${index}\"\n    host=$(getent hosts \"${service}\")\n    echo \"${host}\"\n}\n\nidentify_announce_ip() {\n    echo \"Identify announce ip for this pod..\"\n    echo \"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\"\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\n    echo \"  identified announce (${ANNOUNCE_IP})\"\n}\n\nredis_role() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        ROLE=$(redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep role | sed 's/role://' | sed 's/\\r//')\n    else\n        ROLE=$(redis-cli  -p \"${REDIS_PORT}\" info | grep role | sed 's/role://' | sed 's/\\r//')\n    fi\nset -e\n}\n\nidentify_redis_master() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        REDIS_MASTER=$(redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key info | grep master_host | sed 's/master_host://' | sed 's/\\r//')\n    else\n        REDIS_MASTER=$(redis-cli  -p \"${REDIS_PORT}\" info | grep master_host | sed 's/master_host://' | sed 's/\\r//')\n    fi\nset -e\n}\n\nreinit() {\nset +e\n    sh /readonly-config/init.sh\n\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"shutdown\" | redis-cli  -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key\n    else\n        echo \"shutdown\" | redis-cli  -p \"${REDIS_PORT}\"\n    fi\nset -e\n}\n\nidentify_announce_ip\n\nwhile [ -z \"${ANNOUNCE_IP}\" ]; do\n    echo \"Error: Could not resolve the announce ip for this pod.\"\n    sleep 30\n    identify_announce_ip\ndone\n\nwhile true; do\n    sleep 60\n\n    # where is redis master\n    identify_master\n\n    if [ \"$MASTER\" = \"$ANNOUNCE_IP\" ]; then\n        redis_role\n        if [ \"$ROLE\" != \"master\" ]; then\n            reinit\n        fi\n    elif [ \"${MASTER}\" ]; then\n        identify_redis_master\n        if [ \"$REDIS_MASTER\" != \"$MASTER\" ]; then\n            reinit\n        fi\n    fi\ndone\n",
        "haproxy.cfg": "defaults REDIS\n  mode tcp\n  timeout connect 4s\n  timeout server 6m\n  timeout client 6m\n  timeout check 2s\n\nlisten health_check_http_url\n  bind :8888  \n  mode http\n  monitor-uri /healthz\n  option      dontlognull\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_0\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE0\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_1\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE1\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n# Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_2\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE2\n  tcp-check send QUIT\\r\\n\n  server R0 argocd-redis-ha-announce-0:26379 check inter 3s\n  server R1 argocd-redis-ha-announce-1:26379 check inter 3s\n  server R2 argocd-redis-ha-announce-2:26379 check inter 3s\n\n# decide redis backend to use\n#master\nfrontend ft_redis_master\n  bind :6379 \n  use_backend bk_redis_master\n# Check all redis servers to see if they think they are master\nbackend bk_redis_master\n  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send info\\ replication\\r\\n\n  tcp-check expect string role:master\n  tcp-check send QUIT\\r\\n\n  tcp-check expect string +OK\n  use-server R0 if { srv_is_up(R0) } { nbsrv(check_if_redis_is_master_0) ge 2 }\n  server R0 argocd-redis-ha-announce-0:6379 check inter 3s fall 1 rise 1\n  use-server R1 if { srv_is_up(R1) } { nbsrv(check_if_redis_is_master_1) ge 2 }\n  server R1 argocd-redis-ha-announce-1:6379 check inter 3s fall 1 rise 1\n  use-server R2 if { srv_is_up(R2) } { nbsrv(check_if_redis_is_master_2) ge 2 }\n  server R2 argocd-redis-ha-announce-2:6379 check inter 3s fall 1 rise 1\nfrontend stats\n  mode http\n  bind :9101 \n  http-request use-service prometheus-exporter if { path /metrics }\n  stats enable\n  stats uri /stats\n  stats refresh 10s\n",
        "haproxy_init.sh": "HAPROXY_CONF=/data/haproxy.cfg\ncp /readonly/haproxy.cfg \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-0 && break\n  echo \"Waiting for service argocd-redis-ha-announce-0 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP0=$(getent hosts \"argocd-redis-ha-announce-0\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP0\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-0\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE0/$ANNOUNCE_IP0/\" \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-1 && break\n  echo \"Waiting for service argocd-redis-ha-announce-1 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP1=$(getent hosts \"argocd-redis-ha-announce-1\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP1\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-1\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE1/$ANNOUNCE_IP1/\" \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argocd-redis-ha-announce-2 && break\n  echo \"Waiting for service argocd-redis-ha-announce-2 to be ready ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP2=$(getent hosts \"argocd-redis-ha-announce-2\" | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP2\" ]; then\n  echo \"Could not resolve the announce ip for argocd-redis-ha-announce-2\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE2/$ANNOUNCE_IP2/\" \"$HAPROXY_CONF\"\n",
        "init.sh": "echo \"$(date) Start...\"\nHOSTNAME=\"$(hostname)\"\nINDEX=\"${HOSTNAME##*-}\"\nSENTINEL_PORT=26379\nANNOUNCE_IP=''\nMASTER=''\nMASTER_GROUP=\"argocd\"\nQUORUM=\"2\"\nREDIS_CONF=/data/conf/redis.conf\nREDIS_PORT=6379\nREDIS_TLS_PORT=\nSENTINEL_CONF=/data/conf/sentinel.conf\nSENTINEL_TLS_PORT=\nSERVICE=argocd-redis-ha\nSENTINEL_TLS_REPLICATION_ENABLED=false\nREDIS_TLS_REPLICATION_ENABLED=false\n\nset -eu\nsentinel_get_master() {\nset +e\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    else\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?s*$))'\n    fi\nset -e\n}\n\nsentinel_get_master_retry() {\n    master=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        master=$(sentinel_get_master)\n        if [ -n \"${master}\" ]; then\n            break\n        fi\n        sleep $((sleep + i))\n    done\n    echo \"${master}\"\n}\n\nidentify_master() {\n    echo \"Identifying redis master (get-master-addr-by-name)..\"\n    echo \"  using sentinel (argocd-redis-ha), sentinel group name (argocd)\"\n    MASTER=\"$(sentinel_get_master_retry 3)\"\n    if [ -n \"${MASTER}\" ]; then\n        echo \"  $(date) Found redis master (${MASTER})\"\n    else\n        echo \"  $(date) Did not find redis master (${MASTER})\"\n    fi\n}\n\nsentinel_update() {\n    echo \"Updating sentinel config..\"\n    echo \"  evaluating sentinel id (\\${SENTINEL_ID_${INDEX}})\"\n    eval MY_SENTINEL_ID=\"\\$SENTINEL_ID_${INDEX}\"\n    echo \"  sentinel id (${MY_SENTINEL_ID}), sentinel grp (${MASTER_GROUP}), quorum (${QUORUM})\"\n    sed -i \"1s/^/sentinel myid ${MY_SENTINEL_ID}\\\\n/\" \"${SENTINEL_CONF}\"\n    if [ \"$SENTINEL_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  redis master (${1}:${REDIS_TLS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    else\n        echo \"  redis master (${1}:${REDIS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    fi\n    echo \"sentinel announce-ip ${ANNOUNCE_IP}\" >> ${SENTINEL_CONF}\n    if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_TLS_PORT}\" >> ${SENTINEL_CONF}\n    else\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\"\n        echo \"sentinel announce-port ${SENTINEL_PORT}\" >> ${SENTINEL_CONF}\n    fi\n}\n\nredis_update() {\n    echo \"Updating redis config..\"\n    if [ \"$REDIS_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  we are slave of redis master (${1}:${REDIS_TLS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_TLS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_TLS_PORT}\" >> ${REDIS_CONF}\n    else\n        echo \"  we are slave of redis master (${1}:${REDIS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_PORT}\" >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_PORT}\" >> ${REDIS_CONF}\n    fi\n    echo \"slave-announce-ip ${ANNOUNCE_IP}\" >> ${REDIS_CONF}\n}\n\ncopy_config() {\n    echo \"Copying default redis config..\"\n    echo \"  to '${REDIS_CONF}'\"\n    cp /readonly-config/redis.conf \"${REDIS_CONF}\"\n    echo \"Copying default sentinel config..\"\n    echo \"  to '${SENTINEL_CONF}'\"\n    cp /readonly-config/sentinel.conf \"${SENTINEL_CONF}\"\n}\n\nsetup_defaults() {\n    echo \"Setting up defaults..\"\n    echo \"  using statefulset index (${INDEX})\"\n    if [ \"${INDEX}\" = \"0\" ]; then\n        echo \"Setting this pod as master for redis and sentinel..\"\n        echo \"  using announce (${ANNOUNCE_IP})\"\n        redis_update \"${ANNOUNCE_IP}\"\n        sentinel_update \"${ANNOUNCE_IP}\"\n        echo \"  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\"\n        sed -i \"s/^.*slaveof.*//\" \"${REDIS_CONF}\"\n    else\n        echo \"Getting redis master ip..\"\n        echo \"  blindly assuming (${SERVICE}-announce-0) or (${SERVICE}-server-0) are master\"\n        DEFAULT_MASTER=\"$(getent_hosts 0 | awk '{ print $1 }')\"\n        if [ -z \"${DEFAULT_MASTER}\" ]; then\n            echo \"Error: Unable to resolve redis master (getent hosts).\"\n            exit 1\n        fi\n        echo \"  identified redis (may be redis master) ip (${DEFAULT_MASTER})\"\n        echo \"Setting default slave config for redis and sentinel..\"\n        echo \"  using master ip (${DEFAULT_MASTER})\"\n        redis_update \"${DEFAULT_MASTER}\"\n        sentinel_update \"${DEFAULT_MASTER}\"\n    fi\n}\n\nredis_ping() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\n    else\n        redis-cli -h \"${MASTER}\" -p \"${REDIS_PORT}\" ping\n    fi\nset -e\n}\n\nredis_ping_retry() {\n    ping=''\n    retry=${1}\n    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        if [ \"$(redis_ping)\" = \"PONG\" ]; then\n           ping='PONG'\n           break\n        fi\n        sleep $((sleep + i))\n        MASTER=$(sentinel_get_master)\n    done\n    echo \"${ping}\"\n}\n\nfind_master() {\n    echo \"Verifying redis master..\"\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n        echo \"  ping (${MASTER}:${REDIS_TLS_PORT})\"\n    else\n        echo \"  ping (${MASTER}:${REDIS_PORT})\"\n    fi\n    if [ \"$(redis_ping_retry 3)\" != \"PONG\" ]; then\n        echo \"  $(date) Can't ping redis master (${MASTER})\"\n        echo \"Attempting to force failover (sentinel failover)..\"\n\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        else\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n            if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel failover \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults for this pod..\"\n                setup_defaults\n                return 0\n            fi\n        fi\n\n        echo \"Hold on for 10sec\"\n        sleep 10\n        echo \"We should get redis master's ip now. Asking (get-master-addr-by-name)..\"\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n        else\n            echo \"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel grp (${MASTER_GROUP})\"\n        fi\n        MASTER=\"$(sentinel_get_master)\"\n        if [ \"${MASTER}\" ]; then\n            echo \"  $(date) Found redis master (${MASTER})\"\n            echo \"Updating redis and sentinel config..\"\n            sentinel_update \"${MASTER}\"\n            redis_update \"${MASTER}\"\n        else\n            echo \"$(date) Error: Could not failover, exiting...\"\n            exit 1\n        fi\n    else\n        echo \"  $(date) Found reachable redis master (${MASTER})\"\n        echo \"Updating redis and sentinel config..\"\n        sentinel_update \"${MASTER}\"\n        redis_update \"${MASTER}\"\n    fi\n}\n\nredis_ro_update() {\n    echo \"Updating read-only redis config..\"\n    echo \"  redis.conf set 'replica-priority 0'\"\n    echo \"replica-priority 0\" >> ${REDIS_CONF}\n}\n\ngetent_hosts() {\n    index=${1:-${INDEX}}\n    service=\"${SERVICE}-announce-${index}\"\n    host=$(getent hosts \"${service}\")\n    echo \"${host}\"\n}\n\nidentify_announce_ip() {\n    echo \"Identify announce ip for this pod..\"\n    echo \"  using (${SERVICE}-announce-${INDEX}) or (${SERVICE}-server-${INDEX})\"\n    ANNOUNCE_IP=$(getent_hosts | awk '{ print $1 }')\n    echo \"  identified announce (${ANNOUNCE_IP})\"\n}\n\nmkdir -p /data/conf/\n\necho \"Initializing config..\"\ncopy_config\n\n# where is redis master\nidentify_master\n\nidentify_announce_ip\n\nif [ -z \"${ANNOUNCE_IP}\" ]; then\n    \"Error: Could not resolve the announce ip for this pod.\"\n    exit 1\nelif [ \"${MASTER}\" ]; then\n    find_master\nelse\n    setup_defaults\nfi\n\nif [ \"${AUTH:-}\" ]; then\n    echo \"Setting redis auth values..\"\n    ESCAPED_AUTH=$(echo \"${AUTH}\" | sed -e 's/[\\/&]/\\\\&/g');\n    sed -i \"s/replace-default-auth/${ESCAPED_AUTH}/\" \"${REDIS_CONF}\" \"${SENTINEL_CONF}\"\nfi\n\nif [ \"${SENTINELAUTH:-}\" ]; then\n    echo \"Setting sentinel auth values\"\n    ESCAPED_AUTH_SENTINEL=$(echo \"$SENTINELAUTH\" | sed -e 's/[\\/&]/\\\\&/g');\n    sed -i \"s/replace-default-sentinel-auth/${ESCAPED_AUTH_SENTINEL}/\" \"$SENTINEL_CONF\"\nfi\n\necho \"$(date) Ready...\"\n",
        "redis.conf": "dir \"/data\"\nport 6379\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\nbind 0.0.0.0\nmaxmemory 0\nmaxmemory-policy volatile-lru\nmin-replicas-max-lag 5\nmin-replicas-to-write 1\nrdbchecksum yes\nrdbcompression yes\nrepl-diskless-sync yes\nsave \"\"\n",
        "sentinel.conf": "dir \"/data\"\nport 26379\nbind 0.0.0.0\n    sentinel down-after-milliseconds argocd 10000\n    sentinel failover-timeout argocd 180000\n    maxclients 10000\n    sentinel parallel-syncs argocd 5\n",
        "trigger-failover-if-master.sh": "get_redis_role() {\n  is_master=$(\n    redis-cli \\\n      -h localhost \\\n      -p 6379 \\\n      info | grep -c 'role:master' || true\n  )\n}\nget_redis_role\nif [[ \"$is_master\" -eq 1 ]]; then\n  echo \"This node is currently master, we trigger a failover.\"\n  response=$(\n    redis-cli \\\n      -h localhost \\\n      -p 26379 \\\n      SENTINEL failover argocd\n  )\n  if [[ \"$response\" != \"OK\" ]] ; then\n    echo \"$response\"\n    exit 1\n  fi\n  timeout=30\n  while [[ \"$is_master\" -eq 1 && $timeout -gt 0 ]]; do\n    sleep 1\n    get_redis_role\n    timeout=$((timeout - 1))\n  done\n  echo \"Failover successful\"\nfi\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"redis_liveness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 6379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ] \\u0026\\u0026 [ \\\"${response:0:7}\\\" != \\\"LOADING\\\" ] ; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\",\"redis_readiness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 6379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ] ; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\",\"sentinel_liveness.sh\":\"response=$(\\n  redis-cli \\\\\\n    -h localhost \\\\\\n    -p 26379 \\\\\\n    ping\\n)\\nif [ \\\"$response\\\" != \\\"PONG\\\" ]; then\\n  echo \\\"$response\\\"\\n  exit 1\\nfi\\necho \\\"response=$response\\\"\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-health-configmap\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:25Z",
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:redis_liveness.sh": {},
                "f:redis_readiness.sh": {},
                "f:sentinel_liveness.sh": {}
              },
              "f:metadata": { "f:annotations": {}, "f:labels": {} }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:25Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2022-02-08T07:39:51Z"
          }
        ],
        "name": "argocd-redis-ha-health-configmap",
        "namespace": "argocd",
        "resourceVersion": "132018578",
        "uid": "81a8f246-6dcf-446c-8810-7f46c2f128b8"
      },
      "data": {
        "redis_liveness.sh": "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"${response:0:7}\" != \"LOADING\" ] ; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n",
        "redis_readiness.sh": "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] ; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n",
        "sentinel_liveness.sh": "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 26379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"ssh_known_hosts\":\"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\ngithub..net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJEiN02a2dx0NdISK4i67hK6MJPBmgM9s+ax3MR9/QTRCaEfaeBr3oJtrCTMN9jVDXH+IsslkZU1+JN+jAhFies=\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-ssh-known-hosts-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-ssh-known-hosts-cm\",\"namespace\":\"argocd\",\"selfLink\":\"/api/v1/namespaces/argocd/configmaps/argocd-ssh-known-hosts-cm\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:27Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-ssh-known-hosts-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {},
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:47Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { "f:ssh_known_hosts": {} },
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2021-07-22T08:52:49Z"
          }
        ],
        "name": "argocd-ssh-known-hosts-cm",
        "namespace": "argocd",
        "resourceVersion": "27916984",
        "uid": "1292cca0-0542-4dcd-aa94-b0da72907d40"
      },
      "data": {
        "ssh_known_hosts": "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\ngithub..net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJEiN02a2dx0NdISK4i67hK6MJPBmgM9s+ax3MR9/QTRCaEfaeBr3oJtrCTMN9jVDXH+IsslkZU1+JN+jAhFies=\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":null,\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"argocd-tls-certs-cm\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-tls-certs-cm\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:28Z",
        "labels": {
          "app.kubernetes.io/name": "argocd-tls-certs-cm",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:28Z"
          }
        ],
        "name": "argocd-tls-certs-cm",
        "namespace": "argocd",
        "resourceVersion": "55728",
        "uid": "dc49a579-c6bf-4b4b-9e4b-9ddf85067c8b"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"avp.yaml\":\"apiVersion: argoproj.io/v1alpha1\\nkind: ConfigManagementPlugin\\nmetadata:\\n  name: argocd-vault-plugin\\nspec:\\n  allowConcurrency: true\\n  discover:\\n    find:\\n      command:\\n        - sh\\n        - \\\"-c\\\"\\n        - \\\"find . -name 'Chart.yaml' \\u0026\\u0026 find . -name 'values.yaml'\\\"\\n  generate:\\n    command:\\n      - bash\\n      - \\\"-c\\\"\\n      - |\\n        /tmp/linux-amd64/helm template  --kube-version 1.23 $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE --set \\\"$ARGOCD_ENV_HELM_PARAMS\\\" -f \\u003c(echo \\\"$ARGOCD_ENV_HELM_VALUES\\\") . | argocd-vault-plugin generate -\\n  lockRepo: false\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"name\":\"cmp-plugin\",\"namespace\":\"argocd\"}}\n"
        },
        "creationTimestamp": "2023-09-07T09:27:08Z",
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { ".": {}, "f:avp.yaml": {} },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-09-08T11:52:58Z"
          }
        ],
        "name": "cmp-plugin",
        "namespace": "argocd",
        "resourceVersion": "855579665",
        "uid": "d9653b53-bd06-42e2-a02e-dec1c6181a15"
      },
      "data": {
        "avp.yaml": "apiVersion: argoproj.io/v1alpha1\nkind: ConfigManagementPlugin\nmetadata:\n  name: argocd-vault-plugin\nspec:\n  allowConcurrency: true\n  discover:\n    find:\n      command:\n        - sh\n        - \"-c\"\n        - \"find . -name 'Chart.yaml' && find . -name 'values.yaml'\"\n  generate:\n    command:\n      - bash\n      - \"-c\"\n      - |\n        /tmp/linux-amd64/helm template  --kube-version 1.23 $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE --set \"$ARGOCD_ENV_HELM_PARAMS\" -f <(echo \"$ARGOCD_ENV_HELM_VALUES\") . | argocd-vault-plugin generate -\n  lockRepo: false\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": { "service.beta.openshift.io/inject-cabundle": "true" },
        "creationTimestamp": "2022-05-26T09:30:39Z",
        "labels": { "app.kubernetes.io/part-of": "tekton-pipelines" },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:data": {} },
            "manager": "service-ca-operator",
            "operation": "Update",
            "time": "2022-05-30T14:09:08Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:service.beta.openshift.io/inject-cabundle": {}
                },
                "f:labels": { ".": {}, "f:app.kubernetes.io/part-of": {} },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae\"}": {}
                }
              }
            },
            "manager": "openshift-pipelines-operator",
            "operation": "Update",
            "time": "2022-07-26T21:08:48Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:data": { "f:service-ca.crt": {} } },
            "manager": "Go-http-client",
            "operation": "Update",
            "time": "2023-07-26T09:43:09Z"
          }
        ],
        "name": "config-service-cabundle",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "operator.tekton.dev/v1alpha1",
            "kind": "TektonInstallerSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "rhosp-rbac-pnjlq",
            "uid": "1b4b11f4-fb8c-4c84-b871-7024b20ae7ae"
          }
        ],
        "resourceVersion": "795736900",
        "uid": "8e314e88-88cc-494c-bfbd-25f65eb7cd88"
      },
      "data": {
        "service-ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIB3fp/lz050IwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMzA3MjYwOTQwMTRaFw0yNTA5MjMwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP/Pi4kPBxdMnx6Pis3J+ocraAjLwvuiO\nxZbxhQmHRpSoOe939AtBdBUiS+D41v0psbcfDtqoKjgsC6SsuO/HNuacGWk2fHKY\ncFK9D2oMGRUYYHfDijp55kzbqeCxjhDcVzy6mHjBP4I4yzMS2CSx/TUNtQS21pGQ\nalfdBpePWgh5jfsmkyNL76onYpvb/hGwlyXCH+Hnkj1qyyiFXxjg61UZIFtRed5r\nI+c0cGNKsr+Igzs/OYWyAZ0k8ivrLrvHLv5uRwivD8EKYYuSzxRrOuFOjnJSmmuk\nOf52uFzLN/k5RnKYMwazOU6a437uJkmlBxqP2tomq2BLVat08/A5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRNiBfe\nAmdBE+5ncUEq0KBkLcVUTDAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEACCx90aaY/iZpJ1j05qrNg1uGmlEFQGydrAqC\nULx7105rl/F2BfCeUkQr4bnjP9mNCApNYEggjgZ0e+dSHbEE37HSDcoYoo9KjLeS\ng23056kNL/0n6YgCL4ElB1cvzS/6ns2j4KdhYCBcN3805mvoCKOEopcYnyfRCpjf\nx6odG7u/N9Ibo7AWh3DGSmQwwlMsoysa8v+09ip0DgeLKCBFImgTJCEht4t3fkcc\nbIPcm+BSp/zYlUtTEPbvSEqqElIIyIxRHN77mWFtnoxOJwosHk4ti6WHgwWxvD0g\n14TvrXzHP05KEdNMw0WThevkO9yLpA6XhiYwn08CoajaNNAt3w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIPib4SfFYv4UwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMjA2MjYwOTM5NDlaFw0yNDA4MjQwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCW8E2mzogKRFQqdSpDg0d93fRnG4oCzid\n5QhrLdPMSQasBV1aXGGwhFYmbVzjMU41PSDjAAF39AK2vFga8qDjobUPC2919zzG\n/pAek2+s35iVNoVKpi9GRV1SK8RiAH8kmPpQ6YlJtuB6NUZ09+0PAhDqSlJl4msj\nIRqhikafXjQUwl3QIUYvgV+H1V2VjIqkmXr1DtjJHA04OW16TzPxUqItuurTBRm4\nr6TgQqZ1OkEn6K+r5IL4EpesSZppT5l4lbGgh3IVOUIdGSn9KqUgK61IuIVIc9zK\nf9XT4n3DmzCAinz8z5MonCrsWg+P/13xRr6D/ogKAN0vaOzYYyP5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSQG+kW\n3AdKKn6TM1uBuh1JDjp+ODAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEAFP4PgcZ0ddqIC3TdGaRK+RqcBWAecH6Mxgft\nRD8LBY6cyWe3oetGeUh3L5/QNl/Yew19tIz6+FwcUPgfZWUYzkSgJ1PqSK4n2sad\n8jFgnA83kulM284Tra5wjQssCB9SCQuN2fln8nEcfNrSbDVTSENawk+hC0NQm21y\nAWRqgy38PKHp41Z6UI/ux+/CLTr+3/yaUscNOUcu5miTb5TVNwDvmg1klZUmDN5F\nPNHnMlK2g5K3MsfA1NaCT0QEH/aApQYxOPpH/RIxtU2QxhnsJgR00sqBFbolspEY\nBEVPdDz07trfPO6tsSwOMp3wgaiPlkOn5fepZFIzpcf0iQoIyg==\n-----END CERTIFICATE-----\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "creationTimestamp": "2022-05-26T09:30:39Z",
        "labels": {
          "app.kubernetes.io/part-of": "tekton-pipelines",
          "config.openshift.io/inject-trusted-cabundle": "true"
        },
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:data": { "f:ca-bundle.crt": {} } },
            "manager": "cluster-network-operator/configmap_ca",
            "operation": "Apply",
            "time": "2023-11-16T22:25:15Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:data": {} },
            "manager": "cluster-network-operator",
            "operation": "Update",
            "time": "2022-05-26T09:30:39Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:config.openshift.io/inject-trusted-cabundle": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"1b4b11f4-fb8c-4c84-b871-7024b20ae7ae\"}": {}
                }
              }
            },
            "manager": "openshift-pipelines-operator",
            "operation": "Update",
            "time": "2022-07-26T21:08:48Z"
          }
        ],
        "name": "config-trusted-cabundle",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "operator.tekton.dev/v1alpha1",
            "kind": "TektonInstallerSet",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "rhosp-rbac-pnjlq",
            "uid": "1b4b11f4-fb8c-4c84-b871-7024b20ae7ae"
          }
        ],
        "resourceVersion": "951622675",
        "uid": "c2afb5ec-ccf8-462d-8c95-bd1109d216e9"
      },
      "data": {
        "ca-bundle.crt": "# ACCVRAIZ1\n-----BEGIN CERTIFICATE-----\n..."}
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
        },
        "creationTimestamp": "2022-05-26T09:05:43Z",
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": { ".": {}, "f:ca.crt": {} },
              "f:metadata": {
                "f:annotations": { ".": {}, "f:kubernetes.io/description": {} }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-16T22:11:26Z"
          }
        ],
        "name": "kube-root-ca.crt",
        "namespace": "argocd",
        "resourceVersion": "951602394",
        "uid": "afef9992-9ada-4f75-8061-d61523abccfc"
      },
      "data": {
        "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUFFdS12G1GFSSJbUMGW6BgHEAj/AwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBALSu\nH3sHGjDYn7H8rGuyhYvqor4bcLB1tbvoBipDwSrljzZI6buXtZcJv7dVnwPNVa01\nTnMf/16RjNiSAW/d2IFKkHmsHdT4gpsyMb9W47gkVqUAJXA6IYETfXupSZasQbW+\nVAB3xhrUcHmQIwyP5WV9MKQMDADl6U+NbpdgGCEpoE4ysBU+PSv4s2YVfbu9UvgL\nR7McWYWjUVSNXgifWLbB1ok0UA9pb8HB1XwxdN5gt23VcBOntfFjWU+7NT0A82sP\nEi2vi1ODWkg/UxQooXdAtiOMY8su3lQUv4Q3zCOKGHiDM+wL7t+YX9L8BBM7U6xg\n4e9n8giJjiod29iUgzo=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUWs7IFX44NimgroJBwRYD8KsaOIgwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBANNt\n+H4PcuI7bVvRlm9E5Hf0jKZiyUZg3D3Hmf+/3KRF+rYJctpHIrneAJWAUBaqVJkR\nJBKtYQfj0xNL++rB0ydsLpop8JsW7QHty5ZuSPJag4gBmSK0wnfEiM0Y2XPijZia\nedCC2ZsAVY8SVE8o6LUjk5duipTZ409504unK1suVoQm0HfZktABCZESCWyxkj+O\nqojRT35yZsIkQIN+qkgvqlF8HtdHvww5N8+a28ry22BqEgUsgPeWhhmIcuRYCIC4\naIJYUwtOqj5qyMDEIOVZJYytj/l6L1Q35SpBlf4VTX/SnJfkP4+B1Vj5yNpUpEDG\nk/MdADuEgdGtmiQxuQI=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUSnsOnDSofNkX+QyYd6HsM7y2rL4wDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBAFDL\nH7S9JWYSGCxdkATFtfpCvRjq6rk6A5VYYxLrtMbs2lRaxBjzzJktkoK2YF/5r9fy\nubaxcFHamU2ZptVPOgKRG1dzhu7en7p4kjUxlTeD+hn2be/oRQK+6sgMR5XPVTT7\ni8P9VdYc5YowiKyBxfxyVahi9CCvo7n48AYE7WAJWXJiIc8uK84rqR0YCfB+JY71\njst+ty4sH2G+x3/xvfIhH0ZTm52NiQpm7muUjeFTRvJv9M5QE5M168a/3lq+pqUE\nGS9+kpBcEQ2+yNjEUawR0rTi5dfm4bC3mr41dmadQUw3ewuj29RwpvJwHhv3UQkD\nTT7SVokZAT5DY97SckQ=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDCjCCAfKgAwIBAgIUD+2Az9Fmu83G6XFviJABh+Yc5ocwDQYJKoZIhvcNAQEL\nBQAwHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3MB4XDTIzMTExNjIxNTEw\nMFoXDTMzMTExMzIxNTEwMFowHTEbMBkGA1UEAxMScm9vdC1jYS0xNjIyMTA3MjE3\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7wz1sYXQX6dRckr0d0gh\npWYfrpUGktGVXSaSKNgqEwWApXaz2tPPEYF0CoJ3Fab00uyWqrCmvxSz/mWx9/TP\nu5q3nm/a1Axx7riACpw/w3de0MVBqFapuiOTKzis9JRx99xLA1IVcgx5qigthrQG\neUbXP6rBbbh0WvXRrFHDHN0r2cCLd5crho4tIUUvJHsFlRrEE7SVhwwPiL8aq1yw\nyR9Zg0VTXWAw22EhtJz9M8lI2PeaiaBgZ3I8zxSSMjuBpJ8V1qxL6JVLGr1auKcn\nsffwFHwFnVHLJmx0yM1w5ME1+63qW0bzNwxQ79czWEk/gYvXtH0tRkQbgot+3JmS\newIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUdsuJsuTeb9KqFtdKlxdn8ssp/BAwDQYJKoZIhvcNAQELBQADggEBALjU\nS5izTtJQUiCNX9SZfS0sU8AwR25foqJCfhCV0lgikIJ0trvYjbFk3LXmN86pazLa\nOHhspTRNEkMI40kRswKi9nE+9Kd3eJfL7doqv97fCBSFq5svvFMCW8SPF+M1sdXr\noWiddvXJZXY9L3NOpySHUc8T71djPdEo5fPZiSWIe1ALIrIUsy7reO2r72gGKXy9\nSwc7MgzIpphS0I2UG/c5EoZLY8MF/xu7SDQaUWRdYche6tKbJvH8yyG26pw247VA\nBi5TQnkcpi/QbH28VOFC63JGADpRjOzbi2ARsHTebwemTn7dT8D7H01jHD09SDsC\nuVmBggp1FyJsayRi+JM=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUPBhAC6+KTeBjsHJcjXOBpdapJZYwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAG1I0/iyxMZMliuLqV1vPemQ1WBSKBSJBnduJWt34tKpzRb3+\nXWyiGch9JEJO/tJBn/Q0ysZwr1/gXXrvI2VFBWy6dR1T/GLwSb735OwM9ctUpshw\n0S9UllJ2diidemo7Z7rhfF37OjJbpSQ+e6UbMXWQMKFI07W4d0N2Mmje+VetiRG2e\nKDVKyVvqa7c8d0sK/OKegySOTm6VrlX14dyI+mR+YAVYx7+xIrY81nC8aAlv9y+F\nGok5YnC7QOzdils5mr/GQtYFqCAxiwdy8SMu50q6fmPgosOtbhodhgQnIBL9XOfn\niJnfOM1HdZEUSqXCCDJChza8i+Z1s6jn3dXH2A==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUM+Ec/oWkYrTxG7vz18Mne5G4vhUwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAeCBMAjom9Ols+QQFBHIHOZqlU3FXUiokbwwD0CdBF2XXhoeB\nc1qUsAvtzQgiHNh+0LWuKY3fEnEjyE02xpOTIK5kCyth+VswtJpO+I2Pf+dYY5EQ\n62jLCST4WueNzFlzDtbTF6EtUhRT9x+/kFSPcmw394e9b70dIHsRShS4scy9vdfI\nRrccuoIMSKQJYFXaMBxRQpjPK4XW7KX6aOZMMhLutgyxtCTJyA5LUTH+dznXvHxn\n3NYMdCg8a0546b9/j1xcmiH8DDyar1D3RNTYVld2yXBTqfmgNs5ZsAEjX/YdQdqd\nfQFQrIVYcsPYk1iPMyJm0ObABSBYla9060GqlA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUXYdlgH3/3my4wGf6fPXAgARUrU0wDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAWfW4heTGfrwmMZdCMbWLKKm4dtjfKdyNgQGCBoexzR5rz9A5\nAOYeGn4QyPJ1TDkkJR7TMcpiC7UUn4dcKie0qetfU5eeLj9WOUOpsLkBcB5BUIKa\nqGbWwlqF7gBrgObuxn7po4xSkwfv+ZJLHpG/GQx8KlN3TcpwWy/z/WJimHQnG+DT\nYJrJ5xt8c+tDKf4OaU+bjqOKngtQsWhEI+5qtUaI/FUw9V66muQ4eUhPlL2eZ0fc\nwESneZ4LAMtGKetPYNhhWcR9wh83K9iXT+lQzI3DyDiJN2loaMvM0nyb8gvm9e78\ntJ2JUAY+MiU/pVD3VJZlXxn+8cUaq2C1n28KdA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDGDCCAgCgAwIBAgIUHS2Ehy05XF+ZNhCz+FzEILx+LWkwDQYJKoZIhvcNAQEL\nBQAwJDEiMCAGA1UEAxMZY2x1c3Rlci1zaWduZXItMTYyMjEwNzIxNzAeFw0yMzEx\nMTYyMTUxMDBaFw0zMzExMTMyMTUxMDBaMCQxIjAgBgNVBAMTGWNsdXN0ZXItc2ln\nbmVyLTE2MjIxMDcyMTcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\nJSoYgcUM3ZZ5BnafKcehYu16qdAI8uJ6YVF6RXjDKX+tSez48MgEB72rOraXPxjb\nil0cSxEAY6Dap7rSjksYvnbHF6CmJGTn8/JtgKymiU9DaU5Akd9uTfmnqOA1HiX2\nX2cHLx3auFx7j4sKOxqR3z5WQm4bBNFmXa3zVwCMfhNk5ebngTrhcrhtku/C6Ex4\nWXy7psNgzJWSiclTfaRs6GCeNOk2Fb991jH3ba/65ZovgpO7iJD2dxWrRsplJLov\nWrtjXB1xzLk3/CNpeYjyRaCPyOjb/BGuhaTl1pZ/CjXtiNh/YE0+nUUFTGy+zazi\n8bySmgRbeZUfYuMNBagPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBQxbJ5aG5RkmpGisHzUYcSPPBaT4jANBgkqhkiG\n9w0BAQsFAAOCAQEAs6pWQJYlVKHZGaRn0HzDtMW3/FQ6Lxa9CelPI4DYeGJdZW8x\nfLDCoZMoeDaxFlW7fMEWY0kv+bHeHyOh+8QiRcJT5WZVE36klcdZgFU5p1v6KA02\nBt0gvYfeYV2LLp3W7FTAw6Ue/UOckduGVjdpTW39T10fZnGC7FJy/xMqekHu4XUt\nWi4V/WTYh1tT/NQOxz4kyHJw7m5G5gvgIK6tcdkmjsJ5AJVW7Hld5TBzt6gR3/QK\n0kChiPnaB6+JJ2hqzYC1ZLxCrHtOXDwPX1rZM77k9koI7o6jqnPTYOUkbbYr3/3Z\ntDgfEg0DNx3uCfRdXbkKCl5yGgE3VxRz25m5Nw==\n-----END CERTIFICATE-----\n"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "annotations": { "service.beta.openshift.io/inject-cabundle": "true" },
        "creationTimestamp": "2022-05-26T09:05:43Z",
        "managedFields": [
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {},
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:service.beta.openshift.io/inject-cabundle": {}
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-18T11:58:37Z"
          },
          {
            "apiVersion": "v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:data": { "f:service-ca.crt": {} } },
            "manager": "Go-http-client",
            "operation": "Update",
            "time": "2023-07-26T09:43:16Z"
          }
        ],
        "name": "openshift-service-ca.crt",
        "namespace": "argocd",
        "resourceVersion": "795737049",
        "uid": "e32239b3-d7cc-479a-ada4-def79fccb935"
      },
      "data": {
        "service-ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIB3fp/lz050IwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMzA3MjYwOTQwMTRaFw0yNTA5MjMwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP/Pi4kPBxdMnx6Pis3J+ocraAjLwvuiO\nxZbxhQmHRpSoOe939AtBdBUiS+D41v0psbcfDtqoKjgsC6SsuO/HNuacGWk2fHKY\ncFK9D2oMGRUYYHfDijp55kzbqeCxjhDcVzy6mHjBP4I4yzMS2CSx/TUNtQS21pGQ\nalfdBpePWgh5jfsmkyNL76onYpvb/hGwlyXCH+Hnkj1qyyiFXxjg61UZIFtRed5r\nI+c0cGNKsr+Igzs/OYWyAZ0k8ivrLrvHLv5uRwivD8EKYYuSzxRrOuFOjnJSmmuk\nOf52uFzLN/k5RnKYMwazOU6a437uJkmlBxqP2tomq2BLVat08/A5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRNiBfe\nAmdBE+5ncUEq0KBkLcVUTDAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEACCx90aaY/iZpJ1j05qrNg1uGmlEFQGydrAqC\nULx7105rl/F2BfCeUkQr4bnjP9mNCApNYEggjgZ0e+dSHbEE37HSDcoYoo9KjLeS\ng23056kNL/0n6YgCL4ElB1cvzS/6ns2j4KdhYCBcN3805mvoCKOEopcYnyfRCpjf\nx6odG7u/N9Ibo7AWh3DGSmQwwlMsoysa8v+09ip0DgeLKCBFImgTJCEht4t3fkcc\nbIPcm+BSp/zYlUtTEPbvSEqqElIIyIxRHN77mWFtnoxOJwosHk4ti6WHgwWxvD0g\n14TvrXzHP05KEdNMw0WThevkO9yLpA6XhiYwn08CoajaNNAt3w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIIPib4SfFYv4UwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE\nAwwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTYyMjEwODM5MDAe\nFw0yMjA2MjYwOTM5NDlaFw0yNDA4MjQwOTQwMTVaMDYxNDAyBgNVBAMMK29wZW5z\naGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2MjIxMDgzOTAwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCW8E2mzogKRFQqdSpDg0d93fRnG4oCzid\n5QhrLdPMSQasBV1aXGGwhFYmbVzjMU41PSDjAAF39AK2vFga8qDjobUPC2919zzG\n/pAek2+s35iVNoVKpi9GRV1SK8RiAH8kmPpQ6YlJtuB6NUZ09+0PAhDqSlJl4msj\nIRqhikafXjQUwl3QIUYvgV+H1V2VjIqkmXr1DtjJHA04OW16TzPxUqItuurTBRm4\nr6TgQqZ1OkEn6K+r5IL4EpesSZppT5l4lbGgh3IVOUIdGSn9KqUgK61IuIVIc9zK\nf9XT4n3DmzCAinz8z5MonCrsWg+P/13xRr6D/ogKAN0vaOzYYyP5AgMBAAGjYzBh\nMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSQG+kW\n3AdKKn6TM1uBuh1JDjp+ODAfBgNVHSMEGDAWgBRNiBfeAmdBE+5ncUEq0KBkLcVU\nTDANBgkqhkiG9w0BAQsFAAOCAQEAFP4PgcZ0ddqIC3TdGaRK+RqcBWAecH6Mxgft\nRD8LBY6cyWe3oetGeUh3L5/QNl/Yew19tIz6+FwcUPgfZWUYzkSgJ1PqSK4n2sad\n8jFgnA83kulM284Tra5wjQssCB9SCQuN2fln8nEcfNrSbDVTSENawk+hC0NQm21y\nAWRqgy38PKHp41Z6UI/ux+/CLTr+3/yaUscNOUcu5miTb5TVNwDvmg1klZUmDN5F\nPNHnMlK2g5K3MsfA1NaCT0QEH/aApQYxOPpH/RIxtU2QxhnsJgR00sqBFbolspEY\nBEVPdDz07trfPO6tsSwOMp3wgaiPlkOn5fepZFIzpcf0iQoIyg==\n-----END CERTIFICATE-----\n"
      }
    }
  ],
  "limitRanges": [],
  "leases": [],
  "runtimeClassess": null,
  "deployments": [
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "24",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-applicationset-controller\"],\"env\":[{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.annotations\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.labels\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.leader.election\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.policy.override\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.debug\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.dryrun\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.progressive.syncs\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.new.git.file.globbing\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.concurrent.reconciliations.max\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.scm.root.ca.path\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.allowed.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"name\":\"argocd-applicationset-controller\",\"ports\":[{\"containerPort\":7000,\"name\":\"webhook\"},{\"containerPort\":8080,\"name\":\"metrics\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}]}],\"serviceAccountName\":\"argocd-applicationset-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"
        },
        "creationTimestamp": "2022-07-12T08:35:13Z",
        "generation": 24,
        "labels": {
          "app.kubernetes.io/component": "applicationset-controller",
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": { ".": {}, "f:type": {} },
                  "k:{\"type\":\"Progressing\"}": { ".": {}, "f:type": {} }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-19T20:10:30Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-06-26T10:33:31Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  "k:{\"type\":\"Available\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:42Z"
          }
        ],
        "name": "argocd-applicationset-controller",
        "namespace": "argocd",
        "resourceVersion": "950230926",
        "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller"
          }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.global.preserved.annotations",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.global.preserved.labels",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.policy.override",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.new.git.file.globbing",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.concurrent.reconciliations.max",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.scm.root.ca.path",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.allowed.scm.providers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2023-01-05T11:21:20Z",
            "lastUpdateTime": "2023-11-08T14:09:35Z",
            "message": "ReplicaSet \"argocd-applicationset-controller-b57cbdbd7\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:42Z",
            "lastUpdateTime": "2023-11-15T21:36:42Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 24,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "29",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/shared/argocd-dex\",\"rundex\"],\"env\":[{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"dexserver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"ghcr.io/dexidp/dex:v2.37.0\",\"imagePullPolicy\":\"Always\",\"name\":\"dex\",\"ports\":[{\"containerPort\":5556},{\"containerPort\":5557},{\"containerPort\":5558}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"},{\"mountPath\":\"/tls\",\"name\":\"argocd-dex-server-tls\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/shared/argocd-dex\"],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"}]}],\"serviceAccountName\":\"argocd-dex-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"static-files\"},{\"emptyDir\":{},\"name\":\"dexconfig\"},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}}]}}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:32Z",
        "generation": 29,
        "labels": {
          "app.kubernetes.io/component": "dex-server",
          "app.kubernetes.io/name": "argocd-dex-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:32Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": {
                "f:template": {
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:initContainers": {
                      "k:{\"name\":\"copyutil\"}": {
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2022-02-08T07:39:53Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": { ".": {}, "f:type": {} },
                  "k:{\"type\":\"Progressing\"}": { ".": {}, "f:type": {} }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-19T20:10:46Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-01-05T13:31:11Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:template": {
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:securityContext": {
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:initContainers": {
                      "k:{\"name\":\"copyutil\"}": {
                        "f:command": {},
                        "f:image": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        }
                      }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  "k:{\"type\":\"Available\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:27Z"
          }
        ],
        "name": "argocd-dex-server",
        "namespace": "argocd",
        "resourceVersion": "950231928",
        "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-dex-server" }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "labels": { "app.kubernetes.io/name": "argocd-dex-server" }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2023-01-05T11:22:02Z",
            "lastUpdateTime": "2023-11-08T14:09:39Z",
            "message": "ReplicaSet \"argocd-dex-server-5c9848874c\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T21:37:27Z",
            "lastUpdateTime": "2023-11-15T21:37:27Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 29,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "27",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-notifications\"],\"env\":[{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"tcpSocket\":{\"port\":9001}},\"name\":\"argocd-notifications-controller\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}],\"workingDir\":\"/app\"}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-notifications-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:18:30Z",
        "generation": 35,
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": { "f:annotations": {} },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": { "f:type": {} },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2021-05-27T11:18:30Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2021-05-27T12:17:28Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": { ".": {}, "f:type": {} },
                  "k:{\"type\":\"Progressing\"}": { ".": {}, "f:type": {} }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-19T20:10:37Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:template": {
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:securityContext": {
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  "k:{\"type\":\"Available\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:45Z"
          }
        ],
        "name": "argocd-notifications-controller",
        "namespace": "argocd",
        "resourceVersion": "950231021",
        "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller"
          }
        },
        "strategy": { "type": "Recreate" },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "env": [
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2023-01-05T10:37:21Z",
            "lastUpdateTime": "2023-11-08T14:09:35Z",
            "message": "ReplicaSet \"argocd-notifications-controller-77657944f8\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T21:36:45Z",
            "lastUpdateTime": "2023-11-15T21:36:45Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 35,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "6",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"--save\",\"\",\"--appendonly\",\"no\"],\"image\":\"redis:7.0.7-alpine\",\"imagePullPolicy\":\"Always\",\"name\":\"redis\",\"ports\":[{\"containerPort\":6379}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-redis\"}}}}\n"
        },
        "creationTimestamp": "2023-01-05T12:44:59Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {}
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-02-06T17:18:25Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:spec": { "f:replicas": {} } },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-07-07T14:54:22Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:collisionCount": {},
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:observedGeneration": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-07-07T14:54:22Z"
          }
        ],
        "name": "argocd-redis",
        "namespace": "argocd",
        "resourceVersion": "770364801",
        "uid": "ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 0,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis" }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "labels": { "app.kubernetes.io/name": "argocd-redis" }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-redis"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["--save", "", "--appendonly", "no"],
                "image": "redis:7.0.7-alpine",
                "imagePullPolicy": "Always",
                "name": "redis",
                "ports": [{ "containerPort": 6379, "protocol": "TCP" }],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "runAsUser": 999,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-redis",
            "serviceAccountName": "argocd-redis",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": {
        "collisionCount": 1,
        "conditions": [
          {
            "lastTransitionTime": "2023-07-07T14:54:22Z",
            "lastUpdateTime": "2023-07-07T14:54:22Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2023-07-07T14:54:22Z",
            "lastUpdateTime": "2023-07-07T14:54:22Z",
            "message": "ReplicaSet \"argocd-redis-7b489ccf65\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 6
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "12",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-haproxy\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":3,\"revisionHistoryLimit\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}},\"strategy\":{\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae\",\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9101\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"},\"name\":\"argocd-redis-ha-haproxy\"},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"containers\":[{\"image\":\"haproxy:2.6.14-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{},\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8888},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"name\":\"haproxy\",\"ports\":[{\"containerPort\":6379,\"name\":\"redis\"},{\"containerPort\":9101,\"name\":\"metrics-port\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8888},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/usr/local/etc/haproxy\",\"name\":\"data\"},{\"mountPath\":\"/run/haproxy\",\"name\":\"shared-socket\"}]}],\"initContainers\":[{\"args\":[\"/readonly/haproxy_init.sh\"],\"command\":[\"sh\"],\"image\":\"haproxy:2.6.14-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"config-init\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/readonly\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/data\",\"name\":\"data\"}]}],\"securityContext\":{},\"serviceAccountName\":\"argocd-redis-ha-haproxy\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-redis-ha-configmap\"},\"name\":\"config-volume\"},{\"emptyDir\":{},\"name\":\"shared-socket\"},{\"emptyDir\":{},\"name\":\"data\"}]}}}}\n"
        },
        "creationTimestamp": "2023-05-31T12:28:53Z",
        "generation": 12,
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-06-26T10:32:24Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:checksum/config": {},
                      "f:prometheus.io/path": {},
                      "f:prometheus.io/port": {},
                      "f:prometheus.io/scrape": {}
                    },
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"haproxy\"}": {
                        ".": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/run/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"config-init\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config-volume\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"data\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"shared-socket\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:28Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy",
        "namespace": "argocd",
        "resourceVersion": "950243894",
        "uid": "74f19f2e-555c-4666-b4a6-1e48033e2622"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 3,
        "revisionHistoryLimit": 1,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha-haproxy" }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae",
              "prometheus.io/path": "/metrics",
              "prometheus.io/port": "9101",
              "prometheus.io/scrape": "true"
            },
            "labels": { "app.kubernetes.io/name": "argocd-redis-ha-haproxy" },
            "name": "argocd-redis-ha-haproxy"
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {},
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "haproxy",
                "ports": [
                  { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
                  {
                    "containerPort": 9101,
                    "name": "metrics-port",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
                  { "mountPath": "/run/haproxy", "name": "shared-socket" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": ["/readonly/haproxy_init.sh"],
                "command": ["sh"],
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "config-init",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly",
                    "name": "config-volume",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis-ha-haproxy",
            "serviceAccountName": "argocd-redis-ha-haproxy",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-redis-ha-configmap"
                },
                "name": "config-volume"
              },
              { "emptyDir": {}, "name": "shared-socket" },
              { "emptyDir": {}, "name": "data" }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 3,
        "conditions": [
          {
            "lastTransitionTime": "2023-05-31T15:07:34Z",
            "lastUpdateTime": "2023-11-08T14:10:42Z",
            "message": "ReplicaSet \"argocd-redis-ha-haproxy-559d8d9d98\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T21:48:28Z",
            "lastUpdateTime": "2023-11-15T21:48:28Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 12,
        "readyReplicas": 3,
        "replicas": 3,
        "updatedReplicas": 3
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "10",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"/usr/local/bin/argocd-repo-server\"],\"env\":[{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"timeout.reconciliation\",\"name\":\"argocd-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.repo.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.max.combined.directory.manifests.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.plugin.tar.exclusions\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.allow.oob.symlinks\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.tar.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"HELM_CACHE_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_CONFIG_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_DATA_HOME\",\"value\":\"/helm-working-dir\"}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-repo-server\",\"ports\":[{\"containerPort\":8081},{\"containerPort\":8084}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8084},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/helm-working-dir\",\"name\":\"helm-working-dir\"},{\"mountPath\":\"/home/argocd/cmp-server/plugins\",\"name\":\"plugins\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/var/run/argocd/argocd-cmp-server\"],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/var/run/argocd\",\"name\":\"var-files\"}]}],\"serviceAccountName\":\"argocd-repo-server\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"emptyDir\":{},\"name\":\"helm-working-dir\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"emptyDir\":{},\"name\":\"var-files\"},{\"emptyDir\":{},\"name\":\"plugins\"}]}}}}\n"
        },
        "creationTimestamp": "2023-09-11T08:49:34Z",
        "generation": 10,
        "labels": {
          "app.kubernetes.io/component": "repo-server",
          "app.kubernetes.io/name": "argocd-repo-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": {
                "f:template": {
                  "f:spec": {
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"avp\"}": {
                        ".": {},
                        "f:command": {},
                        "f:envFrom": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:initContainers": {
                      "k:{\"name\":\"download-tools\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"AVP_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/custom-tools\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"cmp-plugin\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"custom-tools\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-11-09T09:17:09Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T20:51:10Z"
          }
        ],
        "name": "argocd-repo-server",
        "namespace": "argocd",
        "resourceVersion": "950181386",
        "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 2,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-repo-server" }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "labels": { "app.kubernetes.io/name": "argocd-repo-server" }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "command": [
                  "bash",
                  "-c",
                  "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
                ],
                "envFrom": [
                  { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
                ],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "avp",
                "resources": {},
                "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                    "name": "cmp-plugin",
                    "subPath": "avp.yaml"
                  },
                  {
                    "mountPath": "/usr/local/bin/argocd-vault-plugin",
                    "name": "custom-tools",
                    "subPath": "argocd-vault-plugin"
                  }
                ]
              },
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
                ],
                "command": ["sh", "-c"],
                "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "download-tools",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/custom-tools", "name": "custom-tools" }
                ]
              },
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
                "name": "cmp-plugin"
              },
              { "emptyDir": {}, "name": "custom-tools" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 2,
        "conditions": [
          {
            "lastTransitionTime": "2023-09-11T08:49:34Z",
            "lastUpdateTime": "2023-11-09T09:18:30Z",
            "message": "ReplicaSet \"argocd-repo-server-c8bfd55cc\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T20:51:10Z",
            "lastUpdateTime": "2023-11-15T20:51:10Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 10,
        "readyReplicas": 2,
        "replicas": 2,
        "updatedReplicas": 2
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "30",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"containers\":[{\"args\":[\"/usr/local/bin/argocd-server\"],\"env\":[{\"name\":\"ARGOCD_API_SERVER_REPLICAS\",\"value\":\"2\"},{\"name\":\"ARGOCD_SERVER_INSECURE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.insecure\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_BASEHREF\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.basehref\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ROOTPATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.rootpath\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.disable.auth\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.gzip\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.x.frame.options\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.content.security.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.connection.status.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.oidc.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.login.attempts.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.staticassets\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.app.state.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.http.cookie.maxnumber\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.proxy.extension\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-server\",\"ports\":[{\"containerPort\":8080},{\"containerPort\":8083}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/server/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/app/config/dex/tls\",\"name\":\"argocd-dex-server-tls\"},{\"mountPath\":\"/home/argocd\",\"name\":\"plugins-home\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"serviceAccountName\":\"argocd-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"plugins-home\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}}]}}}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:33Z",
        "generation": 30,
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/name": "argocd-server",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:progressDeadlineSeconds": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:strategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                },
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": { ".": {}, "f:podAntiAffinity": {} },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:env": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:39Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2021-05-27T12:18:41Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": {
                "f:template": {
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        "f:env": {
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:securityContext": {
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2022-02-08T07:39:54Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  ".": {},
                  "k:{\"type\":\"Available\"}": { ".": {}, "f:type": {} },
                  "k:{\"type\":\"Progressing\"}": {
                    ".": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2022-07-19T20:44:14Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:template": {
                  "f:spec": {
                    "f:affinity": {
                      "f:podAntiAffinity": {
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        "f:args": {},
                        "f:env": {
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:livenessProbe": { "f:timeoutSeconds": {} },
                        "f:securityContext": {
                          "f:capabilities": { "f:drop": {} },
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:volumes": {
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": { "f:deployment.kubernetes.io/revision": {} }
              },
              "f:status": {
                "f:availableReplicas": {},
                "f:conditions": {
                  "k:{\"type\":\"Available\"}": {
                    "f:lastTransitionTime": {},
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:status": {}
                  },
                  "k:{\"type\":\"Progressing\"}": {
                    "f:lastUpdateTime": {},
                    "f:message": {},
                    "f:reason": {}
                  }
                },
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:58Z"
          }
        ],
        "name": "argocd-server",
        "namespace": "argocd",
        "resourceVersion": "950243315",
        "uid": "350bdb5e-d122-413f-b90b-669095235762"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 2,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
        },
        "strategy": {
          "rollingUpdate": { "maxSurge": "25%", "maxUnavailable": "25%" },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "labels": { "app.kubernetes.io/name": "argocd-server" }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 2,
        "conditions": [
          {
            "lastTransitionTime": "2021-05-27T11:16:33Z",
            "lastUpdateTime": "2023-11-08T14:10:01Z",
            "message": "ReplicaSet \"argocd-server-6c6f49884d\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          },
          {
            "lastTransitionTime": "2023-11-15T21:47:58Z",
            "lastUpdateTime": "2023-11-15T21:47:58Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          }
        ],
        "observedGeneration": 30,
        "readyReplicas": 2,
        "replicas": 2,
        "updatedReplicas": 2
      }
    }
  ],
  "statefulSets": [
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"application-controller\",\"app.kubernetes.io/name\":\"argocd-application-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-application-controller\",\"namespace\":\"argocd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}},\"serviceName\":\"argocd-application-controller\",\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"/usr/local/bin/argocd-application-controller\"],\"env\":[{\"name\":\"ARGOCD_CONTROLLER_REPLICAS\",\"value\":\"1\"},{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"timeout.reconciliation\",\"name\":\"argocd-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_HARD_RECONCILIATION_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"timeout.hard.reconciliation\",\"name\":\"argocd-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.status.processors\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.operation.processors\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.metrics.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.self.heal.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.resource.health.persist\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.app.state.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_CONTROLLER_SHARDING_ALGORITHM\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.sharding.algorithm\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"controller.kubectl.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v2.9.0\",\"imagePullPolicy\":\"Always\",\"name\":\"argocd-application-controller\",\"ports\":[{\"containerPort\":8082}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8082},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/controller/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/home/argocd\",\"name\":\"argocd-home\"}],\"workingDir\":\"/home/argocd\"}],\"serviceAccountName\":\"argocd-application-controller\",\"volumes\":[{\"emptyDir\":{},\"name\":\"argocd-home\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"
        },
        "creationTimestamp": "2023-01-05T11:45:44Z",
        "generation": 17,
        "labels": {
          "app.kubernetes.io/component": "application-controller",
          "app.kubernetes.io/name": "argocd-application-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-06-26T10:35:51Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:podManagementPolicy": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:serviceName": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-application-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_CONTROLLER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_CONTROLLER_SHARDING_ALGORITHM\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_HARD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8082,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/controller/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": { ".": {}, "f:partition": {} },
                  "f:type": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:08Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:collisionCount": {},
                "f:currentReplicas": {},
                "f:currentRevision": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updateRevision": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:04Z"
          }
        ],
        "name": "argocd-application-controller",
        "namespace": "argocd",
        "resourceVersion": "950231377",
        "uid": "e1d30156-033c-4b1f-8d6d-e46c01cfdbcf"
      },
      "spec": {
        "podManagementPolicy": "OrderedReady",
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-application-controller"
          }
        },
        "serviceName": "argocd-application-controller",
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-application-controller"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-application-controller"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-application-controller"],
                "env": [
                  { "name": "ARGOCD_CONTROLLER_REPLICAS", "value": "1" },
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_HARD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.hard.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.status.processors",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.operation.processors",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.metrics.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.self.heal.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.resource.health.persist",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_CONTROLLER_SHARDING_ALGORITHM",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.sharding.algorithm",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "controller.kubectl.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "name": "argocd-application-controller",
                "ports": [{ "containerPort": 8082, "protocol": "TCP" }],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8082,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/app/config/controller/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "argocd-home" }
                ],
                "workingDir": "/home/argocd"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-application-controller",
            "serviceAccountName": "argocd-application-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "argocd-home" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": { "partition": 0 },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "availableReplicas": 1,
        "collisionCount": 0,
        "currentReplicas": 1,
        "currentRevision": "argocd-application-controller-6d6d7c8fc9",
        "observedGeneration": 17,
        "readyReplicas": 1,
        "replicas": 1,
        "updateRevision": "argocd-application-controller-6d6d7c8fc9",
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis-ha\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis-ha-server\",\"namespace\":\"argocd\"},\"spec\":{\"podManagementPolicy\":\"OrderedReady\",\"replicas\":3,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}},\"serviceName\":\"argocd-redis-ha\",\"template\":{\"metadata\":{\"annotations\":{\"checksum/init-config\":\"69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75\"},\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"/data/conf/redis.conf\"],\"command\":[\"redis-server\"],\"image\":\"redis:7.0.11-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/sh\",\"/readonly-config/trigger-failover-if-master.sh\"]}}},\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"/health/redis_liveness.sh\"]},\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"name\":\"redis\",\"ports\":[{\"containerPort\":6379,\"name\":\"redis\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"/health/redis_readiness.sh\"]},\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/readonly-config\",\"name\":\"config\",\"readOnly\":true},{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/health\",\"name\":\"health\"}]},{\"args\":[\"/data/conf/sentinel.conf\"],\"command\":[\"redis-sentinel\"],\"image\":\"redis:7.0.11-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{},\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"/health/sentinel_liveness.sh\"]},\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"name\":\"sentinel\",\"ports\":[{\"containerPort\":26379,\"name\":\"sentinel\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"/health/sentinel_liveness.sh\"]},\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":3,\"timeoutSeconds\":15},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/health\",\"name\":\"health\"}]},{\"args\":[\"/readonly-config/fix-split-brain.sh\"],\"command\":[\"sh\"],\"env\":[{\"name\":\"SENTINEL_ID_0\",\"value\":\"3c0d9c0320bb34888c2df5757c718ce6ca992ce6\"},{\"name\":\"SENTINEL_ID_1\",\"value\":\"40000915ab58c3fa8fd888fb8b24711944e6cbb4\"},{\"name\":\"SENTINEL_ID_2\",\"value\":\"2bbec7894d954a8af3bb54d13eaec53cb024e2ca\"}],\"image\":\"redis:7.0.11-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"split-brain-fix\",\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/readonly-config\",\"name\":\"config\",\"readOnly\":true},{\"mountPath\":\"/data\",\"name\":\"data\"}]}],\"initContainers\":[{\"args\":[\"/readonly-config/init.sh\"],\"command\":[\"sh\"],\"env\":[{\"name\":\"SENTINEL_ID_0\",\"value\":\"3c0d9c0320bb34888c2df5757c718ce6ca992ce6\"},{\"name\":\"SENTINEL_ID_1\",\"value\":\"40000915ab58c3fa8fd888fb8b24711944e6cbb4\"},{\"name\":\"SENTINEL_ID_2\",\"value\":\"2bbec7894d954a8af3bb54d13eaec53cb024e2ca\"}],\"image\":\"redis:7.0.11-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"config-init\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/readonly-config\",\"name\":\"config\",\"readOnly\":true},{\"mountPath\":\"/data\",\"name\":\"data\"}]}],\"securityContext\":{},\"serviceAccountName\":\"argocd-redis-ha\",\"terminationGracePeriodSeconds\":60,\"volumes\":[{\"configMap\":{\"name\":\"argocd-redis-ha-configmap\"},\"name\":\"config\"},{\"configMap\":{\"defaultMode\":493,\"name\":\"argocd-redis-ha-health-configmap\"},\"name\":\"health\"},{\"emptyDir\":{},\"name\":\"data\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
        },
        "creationTimestamp": "2023-02-06T16:31:44Z",
        "generation": 11,
        "labels": {
          "app.kubernetes.io/component": "redis",
          "app.kubernetes.io/name": "argocd-redis-ha",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:spec": { "f:template": { "f:spec": { "f:nodeSelector": {} } } }
            },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-06-26T10:35:18Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:podManagementPolicy": {},
                "f:replicas": {},
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:serviceName": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": { ".": {}, "f:checksum/init-config": {} },
                    "f:labels": { ".": {}, "f:app.kubernetes.io/name": {} }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {
                          ".": {},
                          "f:preStop": {
                            ".": {},
                            "f:exec": { ".": {}, "f:command": {} }
                          }
                        },
                        "f:livenessProbe": {
                          ".": {},
                          "f:exec": { ".": {}, "f:command": {} },
                          "f:failureThreshold": {},
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:exec": { ".": {}, "f:command": {} },
                          "f:failureThreshold": {},
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/health\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly-config\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"sentinel\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:exec": { ".": {}, "f:command": {} },
                          "f:failureThreshold": {},
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":26379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:exec": { ".": {}, "f:command": {} },
                          "f:failureThreshold": {},
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/health\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"split-brain-fix\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"SENTINEL_ID_0\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SENTINEL_ID_1\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SENTINEL_ID_2\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly-config\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"config-init\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"SENTINEL_ID_0\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SENTINEL_ID_1\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SENTINEL_ID_2\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly-config\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"data\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"health\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": { "f:type": {} }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:08Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:collisionCount": {},
                "f:currentReplicas": {},
                "f:currentRevision": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {},
                "f:updateRevision": {},
                "f:updatedReplicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:49:33Z"
          }
        ],
        "name": "argocd-redis-ha-server",
        "namespace": "argocd",
        "resourceVersion": "950244970",
        "uid": "90ed4e4c-7533-4edb-a3bb-aa5bcaf0e0ed"
      },
      "spec": {
        "podManagementPolicy": "OrderedReady",
        "replicas": 3,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
        },
        "serviceName": "argocd-redis-ha",
        "template": {
          "metadata": {
            "annotations": {
              "checksum/init-config": "69130412bda04eacad3530cb7bcf26cf121401e725e15d0959dd71a7380afe75"
            },
            "labels": { "app.kubernetes.io/name": "argocd-redis-ha" }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis-ha"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": ["/data/conf/redis.conf"],
                "command": ["redis-server"],
                "image": "redis:7.0.11-alpine",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "/readonly-config/trigger-failover-if-master.sh"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "exec": {
                    "command": ["sh", "-c", "/health/redis_liveness.sh"]
                  },
                  "failureThreshold": 5,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15,
                  "successThreshold": 1,
                  "timeoutSeconds": 15
                },
                "name": "redis",
                "ports": [
                  { "containerPort": 6379, "name": "redis", "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": ["sh", "-c", "/health/redis_readiness.sh"]
                  },
                  "failureThreshold": 5,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15,
                  "successThreshold": 1,
                  "timeoutSeconds": 15
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly-config",
                    "name": "config",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" },
                  { "mountPath": "/health", "name": "health" }
                ]
              },
              {
                "args": ["/data/conf/sentinel.conf"],
                "command": ["redis-sentinel"],
                "image": "redis:7.0.11-alpine",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {},
                "livenessProbe": {
                  "exec": {
                    "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
                  },
                  "failureThreshold": 5,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15,
                  "successThreshold": 1,
                  "timeoutSeconds": 15
                },
                "name": "sentinel",
                "ports": [
                  {
                    "containerPort": 26379,
                    "name": "sentinel",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": ["sh", "-c", "/health/sentinel_liveness.sh"]
                  },
                  "failureThreshold": 5,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15,
                  "successThreshold": 3,
                  "timeoutSeconds": 15
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/data", "name": "data" },
                  { "mountPath": "/health", "name": "health" }
                ]
              },
              {
                "args": ["/readonly-config/fix-split-brain.sh"],
                "command": ["sh"],
                "env": [
                  {
                    "name": "SENTINEL_ID_0",
                    "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
                  },
                  {
                    "name": "SENTINEL_ID_1",
                    "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
                  },
                  {
                    "name": "SENTINEL_ID_2",
                    "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
                  }
                ],
                "image": "redis:7.0.11-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "split-brain-fix",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly-config",
                    "name": "config",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": ["/readonly-config/init.sh"],
                "command": ["sh"],
                "env": [
                  {
                    "name": "SENTINEL_ID_0",
                    "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
                  },
                  {
                    "name": "SENTINEL_ID_1",
                    "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
                  },
                  {
                    "name": "SENTINEL_ID_2",
                    "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
                  }
                ],
                "image": "redis:7.0.11-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "config-init",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly-config",
                    "name": "config",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis-ha",
            "serviceAccountName": "argocd-redis-ha",
            "terminationGracePeriodSeconds": 60,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-redis-ha-configmap"
                },
                "name": "config"
              },
              {
                "configMap": {
                  "defaultMode": 493,
                  "name": "argocd-redis-ha-health-configmap"
                },
                "name": "health"
              },
              { "emptyDir": {}, "name": "data" }
            ]
          }
        },
        "updateStrategy": { "type": "RollingUpdate" }
      },
      "status": {
        "availableReplicas": 3,
        "collisionCount": 0,
        "currentReplicas": 3,
        "currentRevision": "argocd-redis-ha-server-5f967c88db",
        "observedGeneration": 11,
        "readyReplicas": 3,
        "replicas": 3,
        "updateRevision": "argocd-redis-ha-server-5f967c88db",
        "updatedReplicas": 3
      }
    }
  ],
  "daemonSets": [],
  "replicaSets": [
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "13"
        },
        "creationTimestamp": "2023-05-31T12:28:53Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "56dfdfb585"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-05-31T12:28:53Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-06-26T10:33:36Z"
          }
        ],
        "name": "argocd-applicationset-controller-56dfdfb585",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "754632934",
        "uid": "c4e4f5b2-1ace-48e5-a291-9d05e5d17f49"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "56dfdfb585"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "56dfdfb585"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespace",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "11"
        },
        "creationTimestamp": "2023-02-06T16:31:40Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "58d4b98459"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T16:31:40Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-22T21:06:09Z"
          }
        ],
        "name": "argocd-applicationset-controller-58d4b98459",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "582235272",
        "uid": "89a4233e-4401-4a6b-897b-87773142b141"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "58d4b98459"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "58d4b98459"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "entrypoint.sh",
                  "argocd-applicationset-controller"
                ],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.10",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "20",
          "deployment.kubernetes.io/revision-history": "14,16"
        },
        "creationTimestamp": "2023-06-26T10:33:31Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "5f978d6f6"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T09:02:43Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T09:02:43Z"
          }
        ],
        "name": "argocd-applicationset-controller-5f978d6f6",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "859640798",
        "uid": "5f440871-0f4b-48dd-b86e-aff114c8970a"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "5f978d6f6"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "5f978d6f6"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespace",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "18"
        },
        "creationTimestamp": "2023-09-08T12:49:47Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "687f4785c9"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T07:48:55Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T07:48:55Z"
          }
        ],
        "name": "argocd-applicationset-controller-687f4785c9",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "859566903",
        "uid": "26b48bbe-ba76-47dd-a645-627eab4f7dcb"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "687f4785c9"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "687f4785c9"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.policy.override",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.new.git.file.globbing",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.concurrent.reconciliations.max",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.scm.root.ca.path",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.allowed.scm.providers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.3",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "22"
        },
        "creationTimestamp": "2023-09-22T08:44:24Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "75d65d85b4"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:04:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:04:08Z"
          }
        ],
        "name": "argocd-applicationset-controller-75d65d85b4",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "875109393",
        "uid": "290227c6-9fe4-4549-8db0-1aaad08fc51b"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "75d65d85b4"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "75d65d85b4"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.policy.override",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.new.git.file.globbing",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.concurrent.reconciliations.max",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.scm.root.ca.path",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.allowed.scm.providers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "12"
        },
        "creationTimestamp": "2023-02-22T21:05:57Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "76f66c65bd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-22T21:05:57Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-05-31T12:29:13Z"
          }
        ],
        "name": "argocd-applicationset-controller-76f66c65bd",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "718315231",
        "uid": "17c4249f-f185-41bb-a6a6-37d5c35ffe38"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "76f66c65bd"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "76f66c65bd"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "entrypoint.sh",
                  "argocd-applicationset-controller"
                ],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.11",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "9",
          "deployment.kubernetes.io/revision-history": "3,5,7"
        },
        "creationTimestamp": "2023-01-05T10:04:43Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "7f78755d6f"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:45:42Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:status": { "f:observedGeneration": {} } },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T13:03:23Z"
          }
        ],
        "name": "argocd-applicationset-controller-7f78755d6f",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "518341153",
        "uid": "df2e9e1a-a321-4feb-b168-50fbdc22a89f"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "7f78755d6f"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "7f78755d6f"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "entrypoint.sh",
                  "argocd-applicationset-controller"
                ],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "23",
          "deployment.kubernetes.io/revision-history": "19,21"
        },
        "creationTimestamp": "2023-09-11T07:48:28Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "7fbcb78d59"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:35Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:09:35Z"
          }
        ],
        "name": "argocd-applicationset-controller-7fbcb78d59",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "940154850",
        "uid": "84681578-ca7a-4cf8-be08-d081b0dab77c"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "7fbcb78d59"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "7fbcb78d59"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespace",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "10",
          "deployment.kubernetes.io/revision-history": "4,6,8"
        },
        "creationTimestamp": "2023-01-05T11:21:20Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "8d78b7cb9"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:48:17Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-06T16:34:28Z"
          }
        ],
        "name": "argocd-applicationset-controller-8d78b7cb9",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "560708431",
        "uid": "ca4365ca-c526-4f32-bda1-adca06c60958"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "8d78b7cb9"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "8d78b7cb9"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "entrypoint.sh",
                  "argocd-applicationset-controller"
                ],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 3, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "24"
        },
        "creationTimestamp": "2023-11-08T14:09:07Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "b57cbdbd7"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:42Z"
          }
        ],
        "name": "argocd-applicationset-controller-b57cbdbd7",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "950230922",
        "uid": "4a3efddc-a9ba-4ab5-b189-3ad8a7e984e5"
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "b57cbdbd7"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "b57cbdbd7"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.global.preserved.annotations",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.global.preserved.labels",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.policy.override",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.new.git.file.globbing",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.concurrent.reconciliations.max",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.scm.root.ca.path",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.allowed.scm.providers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "fullyLabeledReplicas": 1,
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "17",
          "deployment.kubernetes.io/revision-history": "15"
        },
        "creationTimestamp": "2023-09-07T09:19:14Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "pod-template-hash": "cdf85bbf4"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"eed85f0d-5303-44e1-bd34-a580f8dd66ca\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-applicationset-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:fieldRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-08T12:50:10Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-08T12:50:11Z"
          }
        ],
        "name": "argocd-applicationset-controller-cdf85bbf4",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-applicationset-controller",
            "uid": "eed85f0d-5303-44e1-bd34-a580f8dd66ca"
          }
        ],
        "resourceVersion": "855639451",
        "uid": "1034280c-d8ff-49b6-a01b-1c21bd52f6ff"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller",
            "pod-template-hash": "cdf85bbf4"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-applicationset-controller",
              "pod-template-hash": "cdf85bbf4"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-applicationset-controller"],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.leader.election",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.policy.override",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.debug",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.dryrun",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.progressive.syncs",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.enable.new.git.file.globbing",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.concurrent.reconciliations.max",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.scm.root.ca.path",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "applicationsetcontroller.allowed.scm.providers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.2",
                "imagePullPolicy": "Always",
                "name": "argocd-applicationset-controller",
                "ports": [
                  {
                    "containerPort": 7000,
                    "name": "webhook",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-applicationset-controller",
            "serviceAccountName": "argocd-applicationset-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "22",
          "deployment.kubernetes.io/revision-history": "20"
        },
        "creationTimestamp": "2023-09-07T09:19:14Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "54d8f4b4c8"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-08T12:50:15Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-08T12:50:15Z"
          }
        ],
        "name": "argocd-dex-server-54d8f4b4c8",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "855639559",
        "uid": "2c06dd37-4e26-43fc-8dff-0faf28b45ff4"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "54d8f4b4c8"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "54d8f4b4c8"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.8.2",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "18"
        },
        "creationTimestamp": "2023-02-22T21:05:58Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "5774f796"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-22T21:05:58Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-05-31T12:29:33Z"
          }
        ],
        "name": "argocd-dex-server-5774f796",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "718315626",
        "uid": "1af9099a-d9b8-4805-8f23-843c7892fca5"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "5774f796"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "5774f796"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.35.3",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.5.11",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "29"
        },
        "creationTimestamp": "2023-11-08T14:09:07Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "5c9848874c"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:37:27Z"
          }
        ],
        "name": "argocd-dex-server-5c9848874c",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "950231925",
        "uid": "b516f9e9-5223-4947-bc9a-c703b51de2e6"
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "5c9848874c"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "5c9848874c"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "fullyLabeledReplicas": 1,
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "16"
        },
        "creationTimestamp": "2023-01-05T13:31:11Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "6dcb7dbf"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T13:31:11Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-06T16:34:51Z"
          }
        ],
        "name": "argocd-dex-server-6dcb7dbf",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "560708892",
        "uid": "433cbbf8-6012-4337-bb4c-48aa6021000e"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "6dcb7dbf"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "6dcb7dbf"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.30.2",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "25",
          "deployment.kubernetes.io/revision-history": "19,21"
        },
        "creationTimestamp": "2023-05-31T12:28:53Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "75fb4d844d"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T09:02:49Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T09:02:49Z"
          }
        ],
        "name": "argocd-dex-server-75fb4d844d",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "859641014",
        "uid": "ae560bc2-103b-48a3-b594-504da0ebdf44"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "75fb4d844d"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "75fb4d844d"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.36.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "14",
          "deployment.kubernetes.io/revision-history": "7,10,12"
        },
        "creationTimestamp": "2023-01-05T10:04:43Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "7b54889fd5"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:45:42Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:status": { "f:observedGeneration": {} } },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T13:01:15Z"
          }
        ],
        "name": "argocd-dex-server-7b54889fd5",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "518339019",
        "uid": "1c004685-2b1b-4848-a0a7-d41e92503c73"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "7b54889fd5"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "7b54889fd5"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.35.3",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "23"
        },
        "creationTimestamp": "2023-09-08T12:49:47Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "7d8548bdd5"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T07:49:00Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T07:49:00Z"
          }
        ],
        "name": "argocd-dex-server-7d8548bdd5",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "859567031",
        "uid": "3fbcfd04-0fbb-408a-b730-b4c54cd0a435"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "7d8548bdd5"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "7d8548bdd5"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.8.3",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "15",
          "deployment.kubernetes.io/revision-history": "9,11"
        },
        "creationTimestamp": "2023-01-05T11:22:28Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "866bfbb8b5"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:48:46Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T13:31:18Z"
          }
        ],
        "name": "argocd-dex-server-866bfbb8b5",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "518367814",
        "uid": "db598447-bc67-41c3-ba0b-e84e4345ef7c"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "866bfbb8b5"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "866bfbb8b5"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.35.3",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 3, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "17"
        },
        "creationTimestamp": "2023-02-06T16:31:40Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "88b594955"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T16:31:40Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-22T21:06:23Z"
          }
        ],
        "name": "argocd-dex-server-88b594955",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "582235588",
        "uid": "65532b87-9e6d-48ee-94fa-c6e518730086"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "88b594955"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "88b594955"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.35.3",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.5.10",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "27"
        },
        "creationTimestamp": "2023-09-22T08:44:24Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "b74cf6656"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:04:13Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:04:13Z"
          }
        ],
        "name": "argocd-dex-server-b74cf6656",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "875109578",
        "uid": "bd255ebc-b7b0-49d1-a2d6-04dd21b44541"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "b74cf6656"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "b74cf6656"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "28",
          "deployment.kubernetes.io/revision-history": "24,26"
        },
        "creationTimestamp": "2023-09-11T07:48:28Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-dex-server",
          "pod-template-hash": "df74d6d86"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8cdaa464-52a0-471b-9c97-1aab22089ee5\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"dex\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/shared\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"dexconfig\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"static-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:39Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:09:39Z"
          }
        ],
        "name": "argocd-dex-server-df74d6d86",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-dex-server",
            "uid": "8cdaa464-52a0-471b-9c97-1aab22089ee5"
          }
        ],
        "resourceVersion": "940154936",
        "uid": "07a676e9-ad14-48b9-a643-9b68e671a33a"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-dex-server",
            "pod-template-hash": "df74d6d86"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-dex-server",
              "pod-template-hash": "df74d6d86"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["/shared/argocd-dex", "rundex"],
                "env": [
                  {
                    "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "dexserver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "ghcr.io/dexidp/dex:v2.37.0",
                "imagePullPolicy": "Always",
                "name": "dex",
                "ports": [
                  { "containerPort": 5556, "protocol": "TCP" },
                  { "containerPort": 5557, "protocol": "TCP" },
                  { "containerPort": 5558, "protocol": "TCP" }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" },
                  { "mountPath": "/tls", "name": "argocd-dex-server-tls" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/shared/argocd-dex"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/shared", "name": "static-files" },
                  { "mountPath": "/tmp", "name": "dexconfig" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-dex-server",
            "serviceAccountName": "argocd-dex-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "static-files" },
              { "emptyDir": {}, "name": "dexconfig" },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "6"
        },
        "creationTimestamp": "2023-01-05T10:44:45Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "585d6c6578"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T10:44:45Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T11:16:52Z"
          }
        ],
        "name": "argocd-notifications-controller-585d6c6578",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "518238992",
        "uid": "ded19771-a5bb-4a97-8e18-841d550d4061"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "585d6c6578"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "585d6c6578"
            }
          },
          "spec": {
            "containers": [
              {
                "command": ["argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "16"
        },
        "creationTimestamp": "2023-02-22T21:06:00Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "58c959bc5b"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-22T21:06:00Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-05-31T12:28:53Z"
          }
        ],
        "name": "argocd-notifications-controller-58c959bc5b",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "718314696",
        "uid": "e2334f78-8bd5-486f-8609-aeca4980a076"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "58c959bc5b"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "58c959bc5b"
            }
          },
          "spec": {
            "containers": [
              {
                "command": ["argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.5.11",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "26",
          "deployment.kubernetes.io/revision-history": "22,24"
        },
        "creationTimestamp": "2023-09-11T07:48:31Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "5fc9bf7476"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:07Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:09:07Z"
          }
        ],
        "name": "argocd-notifications-controller-5fc9bf7476",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "940154076",
        "uid": "427b6af9-f7db-45f1-ba1a-176b4338662b"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "5fc9bf7476"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "5fc9bf7476"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "25"
        },
        "creationTimestamp": "2023-09-22T08:44:28Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "698544ddbf"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:04:01Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:04:01Z"
          }
        ],
        "name": "argocd-notifications-controller-698544ddbf",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "875109107",
        "uid": "28dfe6c7-9c3e-4648-9dfb-5d6169cfc9dd"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "698544ddbf"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "698544ddbf"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "env": [
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "14",
          "deployment.kubernetes.io/revision-history": "8,10,12"
        },
        "creationTimestamp": "2023-01-05T11:20:49Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "77588bf47c"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": { ".": {}, "f:runAsNonRoot": {} },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:49:11Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-06T16:31:40Z"
          }
        ],
        "name": "argocd-notifications-controller-77588bf47c",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "560705600",
        "uid": "49f108f1-01e6-4d66-ab11-613387047cdf"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "77588bf47c"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "77588bf47c"
            }
          },
          "spec": {
            "containers": [
              {
                "command": ["argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": { "runAsNonRoot": true },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "27"
        },
        "creationTimestamp": "2023-11-08T14:09:11Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "77657944f8"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:11Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:36:45Z"
          }
        ],
        "name": "argocd-notifications-controller-77657944f8",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "950231020",
        "uid": "1b26ccdc-3ea3-4e46-a1bb-cf6db3447c04"
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "77657944f8"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "77657944f8"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "env": [
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "fullyLabeledReplicas": 1,
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "21"
        },
        "creationTimestamp": "2023-09-08T12:49:50Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "779d757cf6"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T07:48:28Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T07:48:28Z"
          }
        ],
        "name": "argocd-notifications-controller-779d757cf6",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "859566175",
        "uid": "1b62af6e-1b27-4172-83ea-ee7114273fdf"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "779d757cf6"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "779d757cf6"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "env": [
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "20",
          "deployment.kubernetes.io/revision-history": "18"
        },
        "creationTimestamp": "2023-09-07T09:19:18Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "7b4f4f9d75"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-08T12:49:47Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-08T12:49:47Z"
          }
        ],
        "name": "argocd-notifications-controller-7b4f4f9d75",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "855638900",
        "uid": "54ee102b-b277-46f6-b8d7-93363502e390"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "7b4f4f9d75"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "7b4f4f9d75"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "env": [
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "notificationscontroller.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.2",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "13",
          "deployment.kubernetes.io/revision-history": "5,7,9,11"
        },
        "creationTimestamp": "2023-01-05T10:04:45Z",
        "generation": 18,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "8575c6fffc"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T11:16:52Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:status": { "f:observedGeneration": {} } },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T13:00:21Z"
          }
        ],
        "name": "argocd-notifications-controller-8575c6fffc",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "518338128",
        "uid": "04848f39-af84-4835-947b-0e7434795b2f"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "8575c6fffc"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "8575c6fffc"
            }
          },
          "spec": {
            "containers": [
              {
                "command": ["argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 18, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "23",
          "deployment.kubernetes.io/revision-history": "17,19"
        },
        "creationTimestamp": "2023-05-31T12:28:56Z",
        "generation": 6,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "d9975fdb7"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T09:02:37Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T09:02:37Z"
          }
        ],
        "name": "argocd-notifications-controller-d9975fdb7",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "859640549",
        "uid": "eab36cc8-4bee-4ebb-aeb9-36fb0b34de61"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "d9975fdb7"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "d9975fdb7"
            }
          },
          "spec": {
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 6, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "1",
          "deployment.kubernetes.io/revision": "15"
        },
        "creationTimestamp": "2023-02-06T16:31:42Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "pod-template-hash": "ddf8cd879"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7e0c8e08-3564-489c-95e7-5388639f10e9\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"argocd-notifications-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:tcpSocket": { ".": {}, "f:port": {} },
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T16:31:42Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-22T21:05:58Z"
          }
        ],
        "name": "argocd-notifications-controller-ddf8cd879",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-notifications-controller",
            "uid": "7e0c8e08-3564-489c-95e7-5388639f10e9"
          }
        ],
        "resourceVersion": "582234919",
        "uid": "9efe4c64-b5de-4b76-a983-a4480c30e523"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller",
            "pod-template-hash": "ddf8cd879"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-notifications-controller",
              "pod-template-hash": "ddf8cd879"
            }
          },
          "spec": {
            "containers": [
              {
                "command": ["argocd-notifications"],
                "image": "quay.io/argoproj/argocd:v2.5.10",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": { "port": 9001 },
                  "timeoutSeconds": 1
                },
                "name": "argocd-notifications-controller",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  }
                ],
                "workingDir": "/app"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-notifications-controller",
            "serviceAccountName": "argocd-notifications-controller",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "3",
          "deployment.kubernetes.io/revision-history": "1"
        },
        "creationTimestamp": "2023-01-05T12:44:59Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis",
          "pod-template-hash": "547f5d94cd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T12:58:20Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:status": { "f:observedGeneration": {} } },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T13:02:31Z"
          }
        ],
        "name": "argocd-redis-547f5d94cd",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis",
            "uid": "ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a"
          }
        ],
        "resourceVersion": "518340329",
        "uid": "7f863331-7424-48a7-a692-e6d271e21faf"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis",
            "pod-template-hash": "547f5d94cd"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-redis",
              "pod-template-hash": "547f5d94cd"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-redis"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["--save", "", "--appendonly", "no"],
                "image": "redis:7.0.5-alpine",
                "imagePullPolicy": "Always",
                "name": "redis",
                "ports": [{ "containerPort": 6379, "protocol": "TCP" }],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "runAsUser": 999,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-redis",
            "serviceAccountName": "argocd-redis",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "0",
          "deployment.kubernetes.io/max-replicas": "0",
          "deployment.kubernetes.io/revision": "4",
          "deployment.kubernetes.io/revision-history": "2"
        },
        "creationTimestamp": "2023-01-05T12:46:53Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis",
          "pod-template-hash": "574f46944f"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T13:02:31Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-07-07T14:54:22Z"
          }
        ],
        "name": "argocd-redis-574f46944f",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis",
            "uid": "ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a"
          }
        ],
        "resourceVersion": "770364799",
        "uid": "0aa66c94-a85e-49df-8d12-dc0bfbc4fa22"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis",
            "pod-template-hash": "574f46944f"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-redis",
              "pod-template-hash": "574f46944f"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-redis"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["--save", "", "--appendonly", "no"],
                "image": "redis:7.0.5-alpine",
                "imagePullPolicy": "Always",
                "name": "redis",
                "ports": [{ "containerPort": 6379, "protocol": "TCP" }],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis",
            "serviceAccountName": "argocd-redis",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "5",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"ReplicaSet\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/desired-replicas\":\"1\",\"deployment.kubernetes.io/max-replicas\":\"2\",\"deployment.kubernetes.io/revision\":\"5\"},\"generation\":1,\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis\",\"pod-template-hash\":\"74c8c9c8c6\"},\"name\":\"argocd-redis-74c8c9c8c6\",\"namespace\":\"argocd\",\"ownerReferences\":[{\"apiVersion\":\"apps/v1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"Deployment\",\"name\":\"argocd-redis\",\"uid\":\"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a\"}]},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\",\"pod-template-hash\":\"74c8c9c8c6\"}},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis\",\"pod-template-hash\":\"74c8c9c8c6\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"--save\",\"\",\"--appendonly\",\"no\"],\"image\":\"redis:7.0.7-alpine\",\"imagePullPolicy\":\"Always\",\"name\":\"redis\",\"ports\":[{\"containerPort\":6379,\"protocol\":\"TCP\"}],\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"argocd-redis\",\"serviceAccountName\":\"argocd-redis\",\"terminationGracePeriodSeconds\":30}}}}\n"
        },
        "creationTimestamp": "2023-02-06T17:18:26Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis",
          "pod-template-hash": "74c8c9c8c6"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T17:18:26Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-05-31T14:03:29Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-05-31T14:54:52Z"
          }
        ],
        "name": "argocd-redis-74c8c9c8c6",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis",
            "uid": "ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a"
          }
        ],
        "resourceVersion": "718455621",
        "uid": "76061770-a732-4bc0-ab07-24d05e6c55cc"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis",
            "pod-template-hash": "74c8c9c8c6"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-redis",
              "pod-template-hash": "74c8c9c8c6"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-redis"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["--save", "", "--appendonly", "no"],
                "image": "redis:7.0.7-alpine",
                "imagePullPolicy": "Always",
                "name": "redis",
                "ports": [{ "containerPort": 6379, "protocol": "TCP" }],
                "resources": {},
                "securityContext": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis",
            "serviceAccountName": "argocd-redis",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": { "observedGeneration": 3, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "0",
          "deployment.kubernetes.io/max-replicas": "0",
          "deployment.kubernetes.io/revision": "6"
        },
        "creationTimestamp": "2023-05-31T14:54:52Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis",
          "pod-template-hash": "7b489ccf65"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"redis\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {},
                      "f:seccompProfile": { ".": {}, "f:type": {} }
                    },
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {}
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-05-31T14:54:52Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:status": { "f:observedGeneration": {} } },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-07-07T14:54:22Z"
          }
        ],
        "name": "argocd-redis-7b489ccf65",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis",
            "uid": "ad1c5533-e7da-4fbb-a7ff-7375db3c9e0a"
          }
        ],
        "resourceVersion": "770364793",
        "uid": "8d3e58c9-a504-478f-990a-87c83b2533d1"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis",
            "pod-template-hash": "7b489ccf65"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-redis",
              "pod-template-hash": "7b489ccf65"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-redis"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["--save", "", "--appendonly", "no"],
                "image": "redis:7.0.7-alpine",
                "imagePullPolicy": "Always",
                "name": "redis",
                "ports": [{ "containerPort": 6379, "protocol": "TCP" }],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "runAsUser": 999,
              "seccompProfile": { "type": "RuntimeDefault" }
            },
            "serviceAccount": "argocd-redis",
            "serviceAccountName": "argocd-redis",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": { "observedGeneration": 3, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "3",
          "deployment.kubernetes.io/max-replicas": "4",
          "deployment.kubernetes.io/revision": "12"
        },
        "creationTimestamp": "2023-11-08T14:09:07Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "pod-template-hash": "559d8d9d98"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"74f19f2e-555c-4666-b4a6-1e48033e2622\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:checksum/config": {},
                      "f:prometheus.io/path": {},
                      "f:prometheus.io/port": {},
                      "f:prometheus.io/scrape": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"haproxy\"}": {
                        ".": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/run/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"config-init\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config-volume\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"data\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"shared-socket\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:10:01Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:48:28Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy-559d8d9d98",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-haproxy",
            "uid": "74f19f2e-555c-4666-b4a6-1e48033e2622"
          }
        ],
        "resourceVersion": "950243892",
        "uid": "47e0d752-bdce-41c3-a2eb-19be1b431977"
      },
      "spec": {
        "replicas": 3,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
            "pod-template-hash": "559d8d9d98"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae",
              "prometheus.io/path": "/metrics",
              "prometheus.io/port": "9101",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
              "pod-template-hash": "559d8d9d98"
            },
            "name": "argocd-redis-ha-haproxy"
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {},
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "haproxy",
                "ports": [
                  { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
                  {
                    "containerPort": 9101,
                    "name": "metrics-port",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
                  { "mountPath": "/run/haproxy", "name": "shared-socket" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": ["/readonly/haproxy_init.sh"],
                "command": ["sh"],
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "config-init",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly",
                    "name": "config-volume",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis-ha-haproxy",
            "serviceAccountName": "argocd-redis-ha-haproxy",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-redis-ha-configmap"
                },
                "name": "config-volume"
              },
              { "emptyDir": {}, "name": "shared-socket" },
              { "emptyDir": {}, "name": "data" }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 3,
        "fullyLabeledReplicas": 3,
        "observedGeneration": 3,
        "readyReplicas": 3,
        "replicas": 3
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "3",
          "deployment.kubernetes.io/max-replicas": "4",
          "deployment.kubernetes.io/revision": "11",
          "deployment.kubernetes.io/revision-history": "7,9"
        },
        "creationTimestamp": "2023-09-11T07:48:28Z",
        "generation": 18,
        "labels": {
          "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
          "pod-template-hash": "8597cb4bb8"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"74f19f2e-555c-4666-b4a6-1e48033e2622\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": { ".": {}, "f:checksum/config": {} },
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"haproxy\"}": {
                        ".": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/run/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/etc/haproxy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"config-init\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/readonly\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config-volume\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"data\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"shared-socket\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:10:42Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:10:42Z"
          }
        ],
        "name": "argocd-redis-ha-haproxy-8597cb4bb8",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-redis-ha-haproxy",
            "uid": "74f19f2e-555c-4666-b4a6-1e48033e2622"
          }
        ],
        "resourceVersion": "940156228",
        "uid": "1839bfb3-fe79-4b31-ab4f-3fbce874d89b"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
            "pod-template-hash": "8597cb4bb8"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "718bbb277da8610063a7c0fd810984577c2e8ab215815a71211dfa6e20f67321"
            },
            "labels": {
              "app.kubernetes.io/name": "argocd-redis-ha-haproxy",
              "pod-template-hash": "8597cb4bb8"
            },
            "name": "argocd-redis-ha-haproxy"
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {},
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "haproxy",
                "ports": [
                  { "containerPort": 6379, "name": "redis", "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8888,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
                  { "mountPath": "/run/haproxy", "name": "shared-socket" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": ["/readonly/haproxy_init.sh"],
                "command": ["sh"],
                "image": "haproxy:2.6.14-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "config-init",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/readonly",
                    "name": "config-volume",
                    "readOnly": true
                  },
                  { "mountPath": "/data", "name": "data" }
                ]
              }
            ],
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-redis-ha-haproxy",
            "serviceAccountName": "argocd-redis-ha-haproxy",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-redis-ha-configmap"
                },
                "name": "config-volume"
              },
              { "emptyDir": {}, "name": "shared-socket" },
              { "emptyDir": {}, "name": "data" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 18, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "6"
        },
        "creationTimestamp": "2023-09-22T08:52:49Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "588bb44d8c"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"avp\"}": {
                        ".": {},
                        "f:command": {},
                        "f:envFrom": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"download-tools\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"AVP_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/custom-tools\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"cmp-plugin\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"custom-tools\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:04:53Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:04:53Z"
          }
        ],
        "name": "argocd-repo-server-588bb44d8c",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "875110405",
        "uid": "d3816404-38ce-4e57-8ba6-8d289a7dbbaf"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "588bb44d8c"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "588bb44d8c"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "command": [
                  "bash",
                  "-c",
                  "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
                ],
                "envFrom": [
                  { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
                ],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "avp",
                "resources": {},
                "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                    "name": "cmp-plugin",
                    "subPath": "avp.yaml"
                  },
                  {
                    "mountPath": "/usr/local/bin/argocd-vault-plugin",
                    "name": "custom-tools",
                    "subPath": "argocd-vault-plugin"
                  }
                ]
              },
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
                ],
                "command": ["sh", "-c"],
                "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "download-tools",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/custom-tools", "name": "custom-tools" }
                ]
              },
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
                "name": "cmp-plugin"
              },
              { "emptyDir": {}, "name": "custom-tools" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "8",
          "deployment.kubernetes.io/revision-history": "4"
        },
        "creationTimestamp": "2023-09-11T09:12:20Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "5fc5b6dcb5"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"avp\"}": {
                        ".": {},
                        "f:command": {},
                        "f:envFrom": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"download-tools\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"AVP_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/custom-tools\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"cmp-plugin\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"custom-tools\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:49Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:09:49Z"
          }
        ],
        "name": "argocd-repo-server-5fc5b6dcb5",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "940155140",
        "uid": "dbfc7041-5c05-4c39-935a-cee199fd6e2f"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "5fc5b6dcb5"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "5fc5b6dcb5"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "command": [
                  "bash",
                  "-c",
                  "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
                ],
                "envFrom": [
                  { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
                ],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "avp",
                "resources": {},
                "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                    "name": "cmp-plugin",
                    "subPath": "avp.yaml"
                  },
                  {
                    "mountPath": "/usr/local/bin/argocd-vault-plugin",
                    "name": "custom-tools",
                    "subPath": "argocd-vault-plugin"
                  }
                ]
              },
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
                ],
                "command": ["sh", "-c"],
                "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "download-tools",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/custom-tools", "name": "custom-tools" }
                ]
              },
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
                "name": "cmp-plugin"
              },
              { "emptyDir": {}, "name": "custom-tools" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "7",
          "deployment.kubernetes.io/revision-history": "3"
        },
        "creationTimestamp": "2023-09-11T09:02:37Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "6d8c48f77f"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:08:57Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:08:57Z"
          }
        ],
        "name": "argocd-repo-server-6d8c48f77f",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "875115013",
        "uid": "9c454efe-650e-45e3-b687-507881bb3670"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "6d8c48f77f"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "6d8c48f77f"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "5"
        },
        "creationTimestamp": "2023-09-22T08:44:25Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "75d75f987"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T08:54:10Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T08:54:10Z"
          }
        ],
        "name": "argocd-repo-server-75d75f987",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "875099260",
        "uid": "ebdc2ed8-fe0c-4fe4-8a1e-5fd22666b078"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "75d75f987"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "75d75f987"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "2"
        },
        "creationTimestamp": "2023-09-11T08:54:00Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "7df4fb7988"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"avp\"}": {
                        ".": {},
                        "f:command": {},
                        "f:envFrom": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"download-tools\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"AVP_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/custom-tools\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"cmp-plugin\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"custom-tools\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T09:02:58Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T09:02:58Z"
          }
        ],
        "name": "argocd-repo-server-7df4fb7988",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "859641209",
        "uid": "a5a625f2-7b46-40a4-9284-049bf4dcbfd9"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "7df4fb7988"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "7df4fb7988"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "command": [
                  "bash",
                  "-c",
                  "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
                ],
                "envFrom": [
                  { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
                ],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "avp",
                "resources": {},
                "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                    "name": "cmp-plugin",
                    "subPath": "avp.yaml"
                  },
                  {
                    "mountPath": "/usr/local/bin/argocd-vault-plugin",
                    "name": "custom-tools",
                    "subPath": "argocd-vault-plugin"
                  }
                ]
              },
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
                ],
                "command": ["sh", "-c"],
                "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "download-tools",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/custom-tools", "name": "custom-tools" }
                ]
              },
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
                "name": "cmp-plugin"
              },
              { "emptyDir": {}, "name": "custom-tools" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "9"
        },
        "creationTimestamp": "2023-11-08T14:09:07Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "b8b5b6fc5"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-09T09:18:30Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-09T09:18:30Z"
          }
        ],
        "name": "argocd-repo-server-b8b5b6fc5",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "941267294",
        "uid": "8dd4dfd9-3645-49f0-ac38-d1e3822fd0b0"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "b8b5b6fc5"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "b8b5b6fc5"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "1"
        },
        "creationTimestamp": "2023-09-11T08:49:34Z",
        "generation": 3,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "c7cbc898b"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T08:54:41Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T08:54:41Z"
          }
        ],
        "name": "argocd-repo-server-c7cbc898b",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "859632540",
        "uid": "6debf42c-3ff9-4249-ab96-22fe73f0101b"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "c7cbc898b"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "c7cbc898b"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": { "observedGeneration": 3, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "10"
        },
        "creationTimestamp": "2023-11-09T09:17:09Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-repo-server",
          "pod-template-hash": "c8bfd55cc"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"257bb3e1-bb89-4602-9f5a-3cc28cf04342\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"argocd-repo-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"HELM_DATA_HOME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/helm-working-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"avp\"}": {
                        ".": {},
                        "f:command": {},
                        "f:envFrom": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/usr/local/bin/argocd-vault-plugin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:subPath": {}
                          },
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"copyutil\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/run/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"download-tools\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"AVP_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/custom-tools\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"cmp-plugin\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"custom-tools\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keyring\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"gpg-keys\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"helm-working-dir\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugins\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-files\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-09T09:17:50Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T20:51:10Z"
          }
        ],
        "name": "argocd-repo-server-c8bfd55cc",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-repo-server",
            "uid": "257bb3e1-bb89-4602-9f5a-3cc28cf04342"
          }
        ],
        "resourceVersion": "950181385",
        "uid": "3b1d8700-ccde-4b05-99d0-10776a8bb8b6"
      },
      "spec": {
        "replicas": 2,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-repo-server",
            "pod-template-hash": "c8bfd55cc"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-repo-server",
              "pod-template-hash": "c8bfd55cc"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-repo-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "command": [
                  "bash",
                  "-c",
                  "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
                ],
                "envFrom": [
                  { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
                ],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "avp",
                "resources": {},
                "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
                    "name": "cmp-plugin",
                    "subPath": "avp.yaml"
                  },
                  {
                    "mountPath": "/usr/local/bin/argocd-vault-plugin",
                    "name": "custom-tools",
                    "subPath": "argocd-vault-plugin"
                  }
                ]
              },
              {
                "args": ["/usr/local/bin/argocd-repo-server"],
                "env": [
                  {
                    "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "timeout.reconciliation",
                        "name": "argocd-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.parallelism.limit",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.repo.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.max.combined.directory.manifests.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.plugin.tar.exclusions",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.allow.oob.symlinks",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.tar.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.streamed.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.disable.helm.manifest.max.extracted.size",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_GIT_MODULES_ENABLED",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "reposerver.enable.git.submodule",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
                  { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-repo-server",
                "ports": [
                  { "containerPort": 8081, "protocol": "TCP" },
                  { "containerPort": 8084, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8084,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
                  {
                    "mountPath": "/app/config/gpg/keys",
                    "name": "gpg-keyring"
                  },
                  {
                    "mountPath": "/app/config/reposerver/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  { "mountPath": "/tmp", "name": "tmp" },
                  {
                    "mountPath": "/helm-working-dir",
                    "name": "helm-working-dir"
                  },
                  {
                    "mountPath": "/home/argocd/cmp-server/plugins",
                    "name": "plugins"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin && chmod +x argocd-vault-plugin && mv argocd-vault-plugin /custom-tools/"
                ],
                "command": ["sh", "-c"],
                "env": [{ "name": "AVP_VERSION", "value": "1.16.1" }],
                "image": "registry.access.redhat.com/ubi8",
                "imagePullPolicy": "Always",
                "name": "download-tools",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/custom-tools", "name": "custom-tools" }
                ]
              },
              {
                "command": [
                  "/bin/cp",
                  "-n",
                  "/usr/local/bin/argocd",
                  "/var/run/argocd/argocd-cmp-server"
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "copyutil",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/var/run/argocd", "name": "var-files" }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-repo-server",
            "serviceAccountName": "argocd-repo-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": { "defaultMode": 420, "name": "cmp-plugin" },
                "name": "cmp-plugin"
              },
              { "emptyDir": {}, "name": "custom-tools" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-gpg-keys-cm"
                },
                "name": "gpg-keys"
              },
              { "emptyDir": {}, "name": "gpg-keyring" },
              { "emptyDir": {}, "name": "tmp" },
              { "emptyDir": {}, "name": "helm-working-dir" },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              { "emptyDir": {}, "name": "var-files" },
              { "emptyDir": {}, "name": "plugins" }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 2,
        "fullyLabeledReplicas": 2,
        "observedGeneration": 2,
        "readyReplicas": 2,
        "replicas": 2
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "16"
        },
        "creationTimestamp": "2023-01-05T12:44:59Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "59ff9ddfd4"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T12:44:59Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-06T16:32:46Z"
          }
        ],
        "name": "argocd-server-59ff9ddfd4",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "560706885",
        "uid": "526b55ce-2e98-4aa3-8073-675b526721cc"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "59ff9ddfd4"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "59ff9ddfd4"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["argocd-server"],
                "env": [
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "24"
        },
        "creationTimestamp": "2023-09-08T12:49:47Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "5cf969ffd"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T07:49:31Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T07:49:31Z"
          }
        ],
        "name": "argocd-server-5cf969ffd",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "859567875",
        "uid": "9911252a-f265-4104-b927-d8bbcde237a0"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "5cf969ffd"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "5cf969ffd"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "29",
          "deployment.kubernetes.io/revision-history": "25,27"
        },
        "creationTimestamp": "2023-09-11T07:48:29Z",
        "generation": 12,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "5fd55c4569"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:10:01Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-08T14:10:01Z"
          }
        ],
        "name": "argocd-server-5fd55c4569",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "940155474",
        "uid": "6f0a50b1-01fc-4028-b5f7-b99786f1ae63"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "5fd55c4569"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "5fd55c4569"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.14",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 12, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "26",
          "deployment.kubernetes.io/revision-history": "20,22"
        },
        "creationTimestamp": "2023-05-31T12:28:55Z",
        "generation": 12,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "657859d98"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_REDIS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-11T09:03:15Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-11T09:03:15Z"
          }
        ],
        "name": "argocd-server-657859d98",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "859641597",
        "uid": "8d169a52-6f74-494e-bdc8-2cf0e17e1374"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "657859d98"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "657859d98"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_REDIS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm"
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.7.3",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 12, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "17"
        },
        "creationTimestamp": "2023-02-06T16:31:42Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "65fd98d95c"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T16:31:42Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-06T17:18:57Z"
          }
        ],
        "name": "argocd-server-65fd98d95c",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "560750303",
        "uid": "a001be86-9068-44ec-b914-4159e439ce28"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "65fd98d95c"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "65fd98d95c"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "command": [
                  "argocd-server",
                  "--redis",
                  "argocd-redis-ha-haproxy:6379"
                ],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.10",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "28"
        },
        "creationTimestamp": "2023-09-22T08:44:25Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "67c898c87"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-22T09:04:40Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-22T09:04:40Z"
          }
        ],
        "name": "argocd-server-67c898c87",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "875110155",
        "uid": "278047df-bb6f-49c8-8e2f-f4038c315a45"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "67c898c87"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "67c898c87"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.4",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "23",
          "deployment.kubernetes.io/revision-history": "21"
        },
        "creationTimestamp": "2023-09-07T09:19:15Z",
        "generation": 8,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "6b4b986fdf"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:deployment.kubernetes.io/revision-history": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-09-08T12:50:49Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-09-08T12:50:49Z"
          }
        ],
        "name": "argocd-server-6b4b986fdf",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "855640195",
        "uid": "74f7194d-ea17-4e3a-9c0b-c10427d83613"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "6b4b986fdf"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "6b4b986fdf"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.8.2",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 8, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "30"
        },
        "creationTimestamp": "2023-11-08T14:09:08Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "6c6f49884d"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-11-08T14:09:30Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-11-15T21:47:58Z"
          }
        ],
        "name": "argocd-server-6c6f49884d",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "950243313",
        "uid": "2862f7f0-eb68-4d52-9496-9baca408a8e8"
      },
      "spec": {
        "replicas": 2,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "6c6f49884d"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "6c6f49884d"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": ["/usr/local/bin/argocd-server"],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.metrics.listen.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.proxy.extension",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.9.0",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 2,
        "fullyLabeledReplicas": 2,
        "observedGeneration": 2,
        "readyReplicas": 2,
        "replicas": 2
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "15"
        },
        "creationTimestamp": "2023-01-05T10:04:45Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "756d786b85"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_API_SERVER_REPLICAS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-01-05T10:04:44Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-01-05T12:45:30Z"
          }
        ],
        "name": "argocd-server-756d786b85",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "518323592",
        "uid": "d6e48590-538b-47dd-9502-5dd2a165cac8"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "756d786b85"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "756d786b85"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                    },
                    "weight": 100
                  }
                ],
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "command": [
                  "argocd-server",
                  "--redis",
                  "argocd-redis-ha-haproxy:6379"
                ],
                "env": [
                  { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.5",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "18"
        },
        "creationTimestamp": "2023-02-06T17:18:26Z",
        "generation": 2,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "77b7574484"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-06T17:18:26Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-02-22T21:06:18Z"
          }
        ],
        "name": "argocd-server-77b7574484",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "582235433",
        "uid": "990e4366-2c8c-46cf-9fe9-6285ac62ed34"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "77b7574484"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "77b7574484"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["argocd-server"],
                "env": [
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.10",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 2, "replicas": 0 }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "ReplicaSet",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "2",
          "deployment.kubernetes.io/max-replicas": "3",
          "deployment.kubernetes.io/revision": "19"
        },
        "creationTimestamp": "2023-02-22T21:05:59Z",
        "generation": 4,
        "labels": {
          "app.kubernetes.io/name": "argocd-server",
          "pod-template-hash": "8654c89b97"
        },
        "managedFields": [
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"350bdb5e-d122-413f-b90b-669095235762\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"argocd-server\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDISDB\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          },
                          "k:{\"name\":\"REDIS_SERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": { ".": {}, "f:configMapKeyRef": {} }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": { ".": {}, "f:drop": {} },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:seccompProfile": { ".": {}, "f:type": {} }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/ssh\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/app/config/tls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/home/argocd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"argocd-dex-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"argocd-repo-server-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"plugins-home\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"ssh-known-hosts\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tmp\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "time": "2023-02-22T21:05:59Z"
          },
          {
            "apiVersion": "apps/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": { "f:observedGeneration": {}, "f:replicas": {} }
            },
            "manager": "kube-controller-manager",
            "operation": "Update",
            "subresource": "status",
            "time": "2023-05-31T12:30:05Z"
          }
        ],
        "name": "argocd-server-8654c89b97",
        "namespace": "argocd",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "blockOwnerDeletion": true,
            "controller": true,
            "name": "argocd-server",
            "uid": "350bdb5e-d122-413f-b90b-669095235762"
          }
        ],
        "resourceVersion": "718316244",
        "uid": "750acdaf-e77d-456f-a231-ee49b1eb5d05"
      },
      "spec": {
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-server",
            "pod-template-hash": "8654c89b97"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "argocd-server",
              "pod-template-hash": "8654c89b97"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "argocd-server"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  },
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": { "app.kubernetes.io/part-of": "argocd" }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 5
                  }
                ]
              }
            },
            "containers": [
              {
                "command": ["argocd-server"],
                "env": [
                  {
                    "name": "ARGOCD_SERVER_INSECURE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.insecure",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_BASEHREF",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.basehref",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ROOTPATH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.rootpath",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGFORMAT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.format",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOG_LEVEL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.log.level",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "repo.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DISABLE_AUTH",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.disable.auth",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_ENABLE_GZIP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.enable.gzip",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.timeout.seconds",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.x.frame.options",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.content.security.policy",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.repo.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.plaintext",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.dex.server.strict.tls",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MIN_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.minversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_MAX_VERSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.maxversion",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_TLS_CIPHERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.tls.ciphers",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.connection.status.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.oidc.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.login.attempts.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_STATIC_ASSETS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.staticassets",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.app.state.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.server",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDIS_COMPRESSION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.compression",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "REDISDB",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "redis.db",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.default.cache.expiration",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_MAX_COOKIE_NUMBER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "server.http.cookie.maxnumber",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "otlp.address",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  },
                  {
                    "name": "ARGOCD_APPLICATION_NAMESPACES",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "application.namespaces",
                        "name": "argocd-cmd-params-cm",
                        "optional": true
                      }
                    }
                  }
                ],
                "image": "quay.io/argoproj/argocd:v2.5.11",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz?full=true",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "argocd-server",
                "ports": [
                  { "containerPort": 8080, "protocol": "TCP" },
                  { "containerPort": 8083, "protocol": "TCP" }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": { "drop": ["ALL"] },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": { "type": "RuntimeDefault" }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
                  { "mountPath": "/app/config/tls", "name": "tls-certs" },
                  {
                    "mountPath": "/app/config/server/tls",
                    "name": "argocd-repo-server-tls"
                  },
                  {
                    "mountPath": "/app/config/dex/tls",
                    "name": "argocd-dex-server-tls"
                  },
                  { "mountPath": "/home/argocd", "name": "plugins-home" },
                  { "mountPath": "/tmp", "name": "tmp" }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "demo-purpose": "tools" },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "argocd-server",
            "serviceAccountName": "argocd-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              { "emptyDir": {}, "name": "plugins-home" },
              { "emptyDir": {}, "name": "tmp" },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-ssh-known-hosts-cm"
                },
                "name": "ssh-known-hosts"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "argocd-tls-certs-cm"
                },
                "name": "tls-certs"
              },
              {
                "name": "argocd-repo-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-repo-server-tls"
                }
              },
              {
                "name": "argocd-dex-server-tls",
                "secret": {
                  "defaultMode": 420,
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "ca.crt", "path": "ca.crt" }
                  ],
                  "optional": true,
                  "secretName": "argocd-dex-server-tls"
                }
              }
            ]
          }
        }
      },
      "status": { "observedGeneration": 4, "replicas": 0 }
    }
  ],
  "networkPolicies": [
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-application-controller-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{\"from\":[{\"namespaceSelector\":{}}],\"ports\":[{\"port\":8082}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:35Z",
        "generation": 1,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:ingress": {},
                "f:podSelector": {},
                "f:policyTypes": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:35Z"
          }
        ],
        "name": "argocd-application-controller-network-policy",
        "namespace": "argocd",
        "resourceVersion": "853985835",
        "uid": "cea02ddf-7cf7-4b12-99c7-78feca259cb3"
      },
      "spec": {
        "ingress": [
          {
            "from": [{ "namespaceSelector": {} }],
            "ports": [{ "port": 8082, "protocol": "TCP" }]
          }
        ],
        "podSelector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-application-controller"
          }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-applicationset-controller-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{\"from\":[{\"namespaceSelector\":{}}],\"ports\":[{\"port\":7000,\"protocol\":\"TCP\"},{\"port\":8080,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2023-01-05T10:04:47Z",
        "generation": 1,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:ingress": {},
                "f:podSelector": {},
                "f:policyTypes": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-01-05T10:04:47Z"
          }
        ],
        "name": "argocd-applicationset-controller-network-policy",
        "namespace": "argocd",
        "resourceVersion": "518171001",
        "uid": "09cab112-10ae-4faa-b244-d78b9173e85a"
      },
      "spec": {
        "ingress": [
          {
            "from": [{ "namespaceSelector": {} }],
            "ports": [
              { "port": 7000, "protocol": "TCP" },
              { "port": 8080, "protocol": "TCP" }
            ]
          }
        ],
        "podSelector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-applicationset-controller"
          }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-dex-server-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}}}],\"ports\":[{\"port\":5556,\"protocol\":\"TCP\"},{\"port\":5557,\"protocol\":\"TCP\"}]},{\"from\":[{\"namespaceSelector\":{}}],\"ports\":[{\"port\":5558,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:35Z",
        "generation": 2,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": { "f:annotations": {} },
              "f:spec": {
                "f:podSelector": {
                  "f:matchLabels": { ".": {}, "f:app.kubernetes.io/name": {} }
                },
                "f:policyTypes": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:35Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": { "f:ingress": {} }
            },
            "manager": "kubectl",
            "operation": "Update",
            "time": "2021-07-16T14:36:40Z"
          }
        ],
        "name": "argocd-dex-server-network-policy",
        "namespace": "argocd",
        "resourceVersion": "24979175",
        "uid": "09e44707-f4ca-483e-ab61-046eb85594c7"
      },
      "spec": {
        "ingress": [
          {
            "from": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                }
              }
            ],
            "ports": [
              { "port": 5556, "protocol": "TCP" },
              { "port": 5557, "protocol": "TCP" }
            ]
          },
          {
            "from": [{ "namespaceSelector": {} }],
            "ports": [{ "port": 5558, "protocol": "TCP" }]
          }
        ],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-dex-server" }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{\"from\":[{\"namespaceSelector\":{}}],\"ports\":[{\"port\":9001,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2023-01-05T10:04:47Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "app.kubernetes.io/part-of": "argocd"
        },
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {}
                }
              },
              "f:spec": {
                "f:ingress": {},
                "f:podSelector": {},
                "f:policyTypes": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-05-31T12:28:57Z"
          }
        ],
        "name": "argocd-notifications-controller-network-policy",
        "namespace": "argocd",
        "resourceVersion": "718314906",
        "uid": "0a196a76-baee-4506-8ac7-d39c56c44c00"
      },
      "spec": {
        "ingress": [
          {
            "from": [{ "namespaceSelector": {} }],
            "ports": [{ "port": 9001, "protocol": "TCP" }]
          }
        ],
        "podSelector": {
          "matchLabels": {
            "app.kubernetes.io/name": "argocd-notifications-controller"
          }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-redis-ha-proxy-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":6379,\"protocol\":\"TCP\"},{\"port\":26379,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}}}]},{\"ports\":[{\"port\":5353,\"protocol\":\"UDP\"},{\"port\":5353,\"protocol\":\"TCP\"}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}}}],\"ports\":[{\"port\":6379,\"protocol\":\"TCP\"},{\"port\":26379,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:36Z",
        "generation": 3,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": { "f:annotations": {} },
              "f:spec": { "f:podSelector": {} }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:36Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:spec": { "f:egress": {} } },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-05-31T15:05:03Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": { "f:ingress": {}, "f:policyTypes": {} }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-09-07T09:19:16Z"
          }
        ],
        "name": "argocd-redis-ha-proxy-network-policy",
        "namespace": "argocd",
        "resourceVersion": "853985852",
        "uid": "4cea6a51-7028-4838-b885-bb832c4c3394"
      },
      "spec": {
        "egress": [
          {
            "ports": [
              { "port": 6379, "protocol": "TCP" },
              { "port": 26379, "protocol": "TCP" }
            ],
            "to": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                }
              }
            ]
          },
          {
            "ports": [
              { "port": 5353, "protocol": "UDP" },
              { "port": 5353, "protocol": "TCP" }
            ]
          }
        ],
        "ingress": [
          {
            "from": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-repo-server"
                  }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-application-controller"
                  }
                }
              }
            ],
            "ports": [
              { "port": 6379, "protocol": "TCP" },
              { "port": 26379, "protocol": "TCP" }
            ]
          }
        ],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha-haproxy" }
        },
        "policyTypes": ["Ingress", "Egress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-redis-ha-server-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":6379,\"protocol\":\"TCP\"},{\"port\":26379,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}}}]},{\"ports\":[{\"port\":5353,\"protocol\":\"UDP\"},{\"port\":5353,\"protocol\":\"TCP\"}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}}}],\"ports\":[{\"port\":6379,\"protocol\":\"TCP\"},{\"port\":26379,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:36Z",
        "generation": 3,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": { "f:annotations": {} },
              "f:spec": { "f:podSelector": {} }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:36Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": { "f:spec": { "f:egress": {} } },
            "manager": "Mozilla",
            "operation": "Update",
            "time": "2023-05-31T15:05:35Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": { "f:ingress": {}, "f:policyTypes": {} }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-09-07T09:19:16Z"
          }
        ],
        "name": "argocd-redis-ha-server-network-policy",
        "namespace": "argocd",
        "resourceVersion": "853985855",
        "uid": "53039ad5-3b4f-4838-b190-bab28defee1b"
      },
      "spec": {
        "egress": [
          {
            "ports": [
              { "port": 6379, "protocol": "TCP" },
              { "port": 26379, "protocol": "TCP" }
            ],
            "to": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                }
              }
            ]
          },
          {
            "ports": [
              { "port": 5353, "protocol": "UDP" },
              { "port": 5353, "protocol": "TCP" }
            ]
          }
        ],
        "ingress": [
          {
            "from": [
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-redis-ha-haproxy"
                  }
                }
              },
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
                }
              }
            ],
            "ports": [
              { "port": 6379, "protocol": "TCP" },
              { "port": 26379, "protocol": "TCP" }
            ]
          }
        ],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis-ha" }
        },
        "policyTypes": ["Ingress", "Egress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-redis-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":53,\"protocol\":\"UDP\"},{\"port\":53,\"protocol\":\"TCP\"}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}}}],\"ports\":[{\"port\":6379,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n"
        },
        "creationTimestamp": "2023-01-05T12:45:00Z",
        "generation": 1,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:egress": {},
                "f:ingress": {},
                "f:podSelector": {},
                "f:policyTypes": {}
              }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-01-05T12:45:00Z"
          }
        ],
        "name": "argocd-redis-network-policy",
        "namespace": "argocd",
        "resourceVersion": "518323022",
        "uid": "4b8f3639-1bc1-4341-905d-b745c815042b"
      },
      "spec": {
        "egress": [
          {
            "ports": [
              { "port": 53, "protocol": "UDP" },
              { "port": 53, "protocol": "TCP" }
            ]
          }
        ],
        "ingress": [
          {
            "from": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-repo-server"
                  }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-application-controller"
                  }
                }
              }
            ],
            "ports": [{ "port": 6379, "protocol": "TCP" }]
          }
        ],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-redis" }
        },
        "policyTypes": ["Ingress", "Egress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-repo-server-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-application-controller\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}}},{\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}}}],\"ports\":[{\"port\":8081,\"protocol\":\"TCP\"}]},{\"from\":[{\"namespaceSelector\":{}}],\"ports\":[{\"port\":8084}]}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:37Z",
        "generation": 9,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": { "f:annotations": {} },
              "f:spec": { "f:podSelector": {}, "f:policyTypes": {} }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:37Z"
          },
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": { "f:ingress": {} }
            },
            "manager": "kubectl-client-side-apply",
            "operation": "Update",
            "time": "2023-11-08T14:09:08Z"
          }
        ],
        "name": "argocd-repo-server-network-policy",
        "namespace": "argocd",
        "resourceVersion": "940154151",
        "uid": "0a770740-23d5-4f40-96d2-3a763034b51f"
      },
      "spec": {
        "ingress": [
          {
            "from": [
              {
                "podSelector": {
                  "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-application-controller"
                  }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-notifications-controller"
                  }
                }
              },
              {
                "podSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "argocd-applicationset-controller"
                  }
                }
              }
            ],
            "ports": [{ "port": 8081, "protocol": "TCP" }]
          },
          {
            "from": [{ "namespaceSelector": {} }],
            "ports": [{ "port": 8084, "protocol": "TCP" }]
          }
        ],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-repo-server" }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "annotations": {
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"argocd-server-network-policy\",\"namespace\":\"argocd\"},\"spec\":{\"ingress\":[{}],\"podSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"policyTypes\":[\"Ingress\"]}}\n"
        },
        "creationTimestamp": "2021-05-27T11:16:37Z",
        "generation": 1,
        "managedFields": [
          {
            "apiVersion": "networking.k8s.io/v1",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                }
              },
              "f:spec": {
                "f:ingress": {},
                "f:podSelector": {
                  "f:matchLabels": { ".": {}, "f:app.kubernetes.io/name": {} }
                },
                "f:policyTypes": {}
              }
            },
            "manager": "oc",
            "operation": "Update",
            "time": "2021-05-27T11:16:37Z"
          }
        ],
        "name": "argocd-server-network-policy",
        "namespace": "argocd",
        "resourceVersion": "56001",
        "uid": "6c8ffdaf-cab7-4c1d-b86f-26ae49752e76"
      },
      "spec": {
        "ingress": [{}],
        "podSelector": {
          "matchLabels": { "app.kubernetes.io/name": "argocd-server" }
        },
        "policyTypes": ["Ingress"]
      },
      "status": {}
    }
  ],
  "ingresses": [],
  "jobs": null,
  "cronJobs": null,
  "containers": [
    {
      "args": ["/usr/local/bin/argocd-application-controller"],
      "env": [
        { "name": "ARGOCD_CONTROLLER_REPLICAS", "value": "1" },
        {
          "name": "ARGOCD_RECONCILIATION_TIMEOUT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "timeout.reconciliation",
              "name": "argocd-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_HARD_RECONCILIATION_TIMEOUT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "timeout.hard.reconciliation",
              "name": "argocd-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "repo.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.repo.server.timeout.seconds",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.status.processors",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.operation.processors",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.metrics.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.self.heal.timeout.seconds",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.repo.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.repo.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.resource.health.persist",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.app.state.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_COMPRESSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.compression",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDISDB",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.db",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.default.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "otlp.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_NAMESPACES",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "application.namespaces",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_CONTROLLER_SHARDING_ALGORITHM",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.sharding.algorithm",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "controller.kubectl.parallelism.limit",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "name": "argocd-application-controller",
      "ports": [{ "containerPort": 8082, "protocol": "TCP" }],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8082, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        {
          "mountPath": "/app/config/controller/tls",
          "name": "argocd-repo-server-tls"
        },
        { "mountPath": "/home/argocd", "name": "argocd-home" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-wdmns",
          "readOnly": true
        }
      ],
      "workingDir": "/home/argocd"
    },
    {
      "args": ["/usr/local/bin/argocd-applicationset-controller"],
      "env": [
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.global.preserved.annotations",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.global.preserved.labels",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "NAMESPACE",
          "valueFrom": {
            "fieldRef": {
              "apiVersion": "v1",
              "fieldPath": "metadata.namespace"
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.enable.leader.election",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "repo.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.policy",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.enable.policy.override",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.debug",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.dryrun",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_GIT_MODULES_ENABLED",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.enable.git.submodule",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.enable.progressive.syncs",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.enable.new.git.file.globbing",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.repo.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.repo.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.repo.server.timeout.seconds",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.concurrent.reconciliations.max",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.namespaces",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.scm.root.ca.path",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "applicationsetcontroller.allowed.scm.providers",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "name": "argocd-applicationset-controller",
      "ports": [
        { "containerPort": 7000, "name": "webhook", "protocol": "TCP" },
        { "containerPort": 8080, "name": "metrics", "protocol": "TCP" }
      ],
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
        { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
        { "mountPath": "/tmp", "name": "tmp" },
        {
          "mountPath": "/app/config/reposerver/tls",
          "name": "argocd-repo-server-tls"
        },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-mqpxv",
          "readOnly": true
        }
      ]
    },
    {
      "command": ["/shared/argocd-dex", "rundex"],
      "env": [
        {
          "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "dexserver.disable.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "ghcr.io/dexidp/dex:v2.37.0",
      "imagePullPolicy": "Always",
      "name": "dex",
      "ports": [
        { "containerPort": 5556, "protocol": "TCP" },
        { "containerPort": 5557, "protocol": "TCP" },
        { "containerPort": 5558, "protocol": "TCP" }
      ],
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/shared", "name": "static-files" },
        { "mountPath": "/tmp", "name": "dexconfig" },
        { "mountPath": "/tls", "name": "argocd-dex-server-tls" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-slmjp",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/usr/local/bin/argocd-notifications"],
      "env": [
        {
          "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "notificationscontroller.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "notificationscontroller.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_NAMESPACES",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "application.namespaces",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "livenessProbe": {
        "failureThreshold": 3,
        "periodSeconds": 10,
        "successThreshold": 1,
        "tcpSocket": { "port": 9001 },
        "timeoutSeconds": 1
      },
      "name": "argocd-notifications-controller",
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsUser": 1000650000
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        {
          "mountPath": "/app/config/reposerver/tls",
          "name": "argocd-repo-server-tls"
        },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-6n9z7",
          "readOnly": true
        }
      ],
      "workingDir": "/app"
    },
    {
      "image": "haproxy:2.6.14-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "name": "haproxy",
      "ports": [
        { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
        { "containerPort": 9101, "name": "metrics-port", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
        { "mountPath": "/run/haproxy", "name": "shared-socket" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-pjvn7",
          "readOnly": true
        }
      ]
    },
    {
      "image": "haproxy:2.6.14-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "name": "haproxy",
      "ports": [
        { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
        { "containerPort": 9101, "name": "metrics-port", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
        { "mountPath": "/run/haproxy", "name": "shared-socket" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-sgscw",
          "readOnly": true
        }
      ]
    },
    {
      "image": "haproxy:2.6.14-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "name": "haproxy",
      "ports": [
        { "containerPort": 6379, "name": "redis", "protocol": "TCP" },
        { "containerPort": 9101, "name": "metrics-port", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8888, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 3,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/usr/local/etc/haproxy", "name": "data" },
        { "mountPath": "/run/haproxy", "name": "shared-socket" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-xc847",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/data/conf/redis.conf"],
      "command": ["redis-server"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {
        "preStop": {
          "exec": {
            "command": [
              "/bin/sh",
              "/readonly-config/trigger-failover-if-master.sh"
            ]
          }
        }
      },
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "redis",
      "ports": [{ "containerPort": 6379, "name": "redis", "protocol": "TCP" }],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/data/conf/sentinel.conf"],
      "command": ["redis-sentinel"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "sentinel",
      "ports": [
        { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 3,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/readonly-config/fix-split-brain.sh"],
      "command": ["sh"],
      "env": [
        {
          "name": "SENTINEL_ID_0",
          "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
        },
        {
          "name": "SENTINEL_ID_1",
          "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
        },
        {
          "name": "SENTINEL_ID_2",
          "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
        }
      ],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "name": "split-brain-fix",
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" }
      ]
    },
    {
      "args": ["/data/conf/redis.conf"],
      "command": ["redis-server"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {
        "preStop": {
          "exec": {
            "command": [
              "/bin/sh",
              "/readonly-config/trigger-failover-if-master.sh"
            ]
          }
        }
      },
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "redis",
      "ports": [{ "containerPort": 6379, "name": "redis", "protocol": "TCP" }],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/data/conf/sentinel.conf"],
      "command": ["redis-sentinel"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "sentinel",
      "ports": [
        { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 3,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/readonly-config/fix-split-brain.sh"],
      "command": ["sh"],
      "env": [
        {
          "name": "SENTINEL_ID_0",
          "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
        },
        {
          "name": "SENTINEL_ID_1",
          "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
        },
        {
          "name": "SENTINEL_ID_2",
          "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
        }
      ],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "name": "split-brain-fix",
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" }
      ]
    },
    {
      "args": ["/data/conf/redis.conf"],
      "command": ["redis-server"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {
        "preStop": {
          "exec": {
            "command": [
              "/bin/sh",
              "/readonly-config/trigger-failover-if-master.sh"
            ]
          }
        }
      },
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "redis",
      "ports": [{ "containerPort": 6379, "name": "redis", "protocol": "TCP" }],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/redis_readiness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/data/conf/sentinel.conf"],
      "command": ["redis-sentinel"],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {},
      "livenessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 1,
        "timeoutSeconds": 15
      },
      "name": "sentinel",
      "ports": [
        { "containerPort": 26379, "name": "sentinel", "protocol": "TCP" }
      ],
      "readinessProbe": {
        "exec": { "command": ["sh", "-c", "/health/sentinel_liveness.sh"] },
        "failureThreshold": 5,
        "initialDelaySeconds": 30,
        "periodSeconds": 15,
        "successThreshold": 3,
        "timeoutSeconds": 15
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/data", "name": "data" },
        { "mountPath": "/health", "name": "health" }
      ]
    },
    {
      "args": ["/readonly-config/fix-split-brain.sh"],
      "command": ["sh"],
      "env": [
        {
          "name": "SENTINEL_ID_0",
          "value": "3c0d9c0320bb34888c2df5757c718ce6ca992ce6"
        },
        {
          "name": "SENTINEL_ID_1",
          "value": "40000915ab58c3fa8fd888fb8b24711944e6cbb4"
        },
        {
          "name": "SENTINEL_ID_2",
          "value": "2bbec7894d954a8af3bb54d13eaec53cb024e2ca"
        }
      ],
      "image": "redis:7.0.11-alpine",
      "imagePullPolicy": "IfNotPresent",
      "name": "split-brain-fix",
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000650000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/readonly-config", "name": "config", "readOnly": true },
        { "mountPath": "/data", "name": "data" }
      ]
    },
    {
      "command": [
        "bash",
        "-c",
        "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
      ],
      "envFrom": [
        { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
      ],
      "image": "registry.access.redhat.com/ubi8",
      "imagePullPolicy": "Always",
      "name": "avp",
      "resources": {},
      "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/var/run/argocd", "name": "var-files" },
        { "mountPath": "/home/argocd/cmp-server/plugins", "name": "plugins" },
        { "mountPath": "/tmp", "name": "tmp" },
        {
          "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
          "name": "cmp-plugin",
          "subPath": "avp.yaml"
        },
        {
          "mountPath": "/usr/local/bin/argocd-vault-plugin",
          "name": "custom-tools",
          "subPath": "argocd-vault-plugin"
        },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-98svv",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/usr/local/bin/argocd-repo-server"],
      "env": [
        {
          "name": "ARGOCD_RECONCILIATION_TIMEOUT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "timeout.reconciliation",
              "name": "argocd-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.parallelism.limit",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.metrics.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.disable.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MIN_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.minversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MAX_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.maxversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_CIPHERS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.ciphers",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.repo.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_COMPRESSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.compression",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDISDB",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.db",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.default.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "otlp.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.max.combined.directory.manifests.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.plugin.tar.exclusions",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.allow.oob.symlinks",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.streamed.manifest.max.tar.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.streamed.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.helm.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.disable.helm.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_GIT_MODULES_ENABLED",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.enable.git.submodule",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
        { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
        { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": {
          "path": "/healthz?full=true",
          "port": 8084,
          "scheme": "HTTP"
        },
        "initialDelaySeconds": 30,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 5
      },
      "name": "argocd-repo-server",
      "ports": [
        { "containerPort": 8081, "protocol": "TCP" },
        { "containerPort": 8084, "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8084, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
        { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
        {
          "mountPath": "/app/config/reposerver/tls",
          "name": "argocd-repo-server-tls"
        },
        { "mountPath": "/tmp", "name": "tmp" },
        { "mountPath": "/helm-working-dir", "name": "helm-working-dir" },
        { "mountPath": "/home/argocd/cmp-server/plugins", "name": "plugins" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-98svv",
          "readOnly": true
        }
      ]
    },
    {
      "command": [
        "bash",
        "-c",
        "export VERIFY_CHECKSUM=false;   curl -k https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz --output /tmp/helm.tar.gz;  cd /tmp; tar -xvzf helm.tar.gz; /var/run/argocd/argocd-cmp-server\n"
      ],
      "envFrom": [
        { "secretRef": { "name": "argocd-vault-plugin-credentials" } }
      ],
      "image": "registry.access.redhat.com/ubi8",
      "imagePullPolicy": "Always",
      "name": "avp",
      "resources": {},
      "securityContext": { "runAsNonRoot": true, "runAsUser": 999 },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/var/run/argocd", "name": "var-files" },
        { "mountPath": "/home/argocd/cmp-server/plugins", "name": "plugins" },
        { "mountPath": "/tmp", "name": "tmp" },
        {
          "mountPath": "/home/argocd/cmp-server/config/plugin.yaml",
          "name": "cmp-plugin",
          "subPath": "avp.yaml"
        },
        {
          "mountPath": "/usr/local/bin/argocd-vault-plugin",
          "name": "custom-tools",
          "subPath": "argocd-vault-plugin"
        },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-zn6rp",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/usr/local/bin/argocd-repo-server"],
      "env": [
        {
          "name": "ARGOCD_RECONCILIATION_TIMEOUT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "timeout.reconciliation",
              "name": "argocd-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.parallelism.limit",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.metrics.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.disable.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MIN_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.minversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MAX_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.maxversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_CIPHERS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.tls.ciphers",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.repo.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_COMPRESSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.compression",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDISDB",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.db",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.default.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "otlp.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.max.combined.directory.manifests.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.plugin.tar.exclusions",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.allow.oob.symlinks",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.streamed.manifest.max.tar.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.streamed.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.helm.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.disable.helm.manifest.max.extracted.size",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_GIT_MODULES_ENABLED",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "reposerver.enable.git.submodule",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        { "name": "HELM_CACHE_HOME", "value": "/helm-working-dir" },
        { "name": "HELM_CONFIG_HOME", "value": "/helm-working-dir" },
        { "name": "HELM_DATA_HOME", "value": "/helm-working-dir" }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": {
          "path": "/healthz?full=true",
          "port": 8084,
          "scheme": "HTTP"
        },
        "initialDelaySeconds": 30,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 5
      },
      "name": "argocd-repo-server",
      "ports": [
        { "containerPort": 8081, "protocol": "TCP" },
        { "containerPort": 8084, "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8084, "scheme": "HTTP" },
        "initialDelaySeconds": 5,
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        { "mountPath": "/app/config/gpg/source", "name": "gpg-keys" },
        { "mountPath": "/app/config/gpg/keys", "name": "gpg-keyring" },
        {
          "mountPath": "/app/config/reposerver/tls",
          "name": "argocd-repo-server-tls"
        },
        { "mountPath": "/tmp", "name": "tmp" },
        { "mountPath": "/helm-working-dir", "name": "helm-working-dir" },
        { "mountPath": "/home/argocd/cmp-server/plugins", "name": "plugins" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-zn6rp",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/usr/local/bin/argocd-server"],
      "env": [
        { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
        {
          "name": "ARGOCD_SERVER_INSECURE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.insecure",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_BASEHREF",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.basehref",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ROOTPATH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.rootpath",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOG_LEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "repo.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DISABLE_AUTH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.disable.auth",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ENABLE_GZIP",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.enable.gzip",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.timeout.seconds",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.x.frame.options",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.content.security.policy",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MIN_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.minversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MAX_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.maxversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_CIPHERS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.ciphers",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.connection.status.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.oidc.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.login.attempts.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_STATIC_ASSETS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.staticassets",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.app.state.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_COMPRESSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.compression",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDISDB",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.db",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.default.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_MAX_COOKIE_NUMBER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.http.cookie.maxnumber",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.metrics.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_OTLP_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "otlp.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_NAMESPACES",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "application.namespaces",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.enable.proxy.extension",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": {
          "path": "/healthz?full=true",
          "port": 8080,
          "scheme": "HTTP"
        },
        "initialDelaySeconds": 3,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 5
      },
      "name": "argocd-server",
      "ports": [
        { "containerPort": 8080, "protocol": "TCP" },
        { "containerPort": 8083, "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8080, "scheme": "HTTP" },
        "initialDelaySeconds": 3,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        {
          "mountPath": "/app/config/server/tls",
          "name": "argocd-repo-server-tls"
        },
        { "mountPath": "/app/config/dex/tls", "name": "argocd-dex-server-tls" },
        { "mountPath": "/home/argocd", "name": "plugins-home" },
        { "mountPath": "/tmp", "name": "tmp" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-gszk5",
          "readOnly": true
        }
      ]
    },
    {
      "args": ["/usr/local/bin/argocd-server"],
      "env": [
        { "name": "ARGOCD_API_SERVER_REPLICAS", "value": "2" },
        {
          "name": "ARGOCD_SERVER_INSECURE",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.insecure",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_BASEHREF",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.basehref",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ROOTPATH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.rootpath",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOGFORMAT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.log.format",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOG_LEVEL",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.log.level",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "repo.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DISABLE_AUTH",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.disable.auth",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ENABLE_GZIP",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.enable.gzip",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.timeout.seconds",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.x.frame.options",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.content.security.policy",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.repo.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server.plaintext",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.dex.server.strict.tls",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MIN_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.minversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_MAX_VERSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.maxversion",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_TLS_CIPHERS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.tls.ciphers",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.connection.status.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.oidc.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.login.attempts.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_STATIC_ASSETS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.staticassets",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.app.state.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_SERVER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.server",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDIS_COMPRESSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.compression",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "REDISDB",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "redis.db",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.default.cache.expiration",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_MAX_COOKIE_NUMBER",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.http.cookie.maxnumber",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.metrics.listen.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_OTLP_ADDRESS",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "otlp.address",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_APPLICATION_NAMESPACES",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "application.namespaces",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        },
        {
          "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
          "valueFrom": {
            "configMapKeyRef": {
              "key": "server.enable.proxy.extension",
              "name": "argocd-cmd-params-cm",
              "optional": true
            }
          }
        }
      ],
      "image": "quay.io/argoproj/argocd:v2.9.0",
      "imagePullPolicy": "Always",
      "livenessProbe": {
        "failureThreshold": 3,
        "httpGet": {
          "path": "/healthz?full=true",
          "port": 8080,
          "scheme": "HTTP"
        },
        "initialDelaySeconds": 3,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 5
      },
      "name": "argocd-server",
      "ports": [
        { "containerPort": 8080, "protocol": "TCP" },
        { "containerPort": 8083, "protocol": "TCP" }
      ],
      "readinessProbe": {
        "failureThreshold": 3,
        "httpGet": { "path": "/healthz", "port": 8080, "scheme": "HTTP" },
        "initialDelaySeconds": 3,
        "periodSeconds": 30,
        "successThreshold": 1,
        "timeoutSeconds": 1
      },
      "resources": {},
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": { "drop": ["ALL"] },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000,
        "seccompProfile": { "type": "RuntimeDefault" }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "volumeMounts": [
        { "mountPath": "/app/config/ssh", "name": "ssh-known-hosts" },
        { "mountPath": "/app/config/tls", "name": "tls-certs" },
        {
          "mountPath": "/app/config/server/tls",
          "name": "argocd-repo-server-tls"
        },
        { "mountPath": "/app/config/dex/tls", "name": "argocd-dex-server-tls" },
        { "mountPath": "/home/argocd", "name": "plugins-home" },
        { "mountPath": "/tmp", "name": "tmp" },
        {
          "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
          "name": "kube-api-access-9qjnw",
          "readOnly": true
        }
      ]
    }
  ]
}
